<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PicoGo</title>
      <link href="//2023/06/23/PicoGo/"/>
      <url>//2023/06/23/PicoGo/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><code>ctrl</code>+<code>alt</code>+<code>U</code><br><img src="https://cdn.jsdelivr.net/gh/wprofilew/imgs@master/PicoGoDemo.png" alt="PicoGoDemo.png"><br><img src="https://cdn.jsdelivr.net/gh/WprofileW/imgs@master/blog/img20230701222443.png" alt="20230701222443"><br><img src="https://cdn.jsdelivr.net/gh/WprofileW/imgs@master/blog/img20230701222654.png" alt="20230701222654"><br><img src="https://cdn.jsdelivr.net/gh/WprofileW/imgs@master/blog/img20230915130426.png" alt="20230915130426"></p>]]></content>
      
      
      <categories>
          
          <category> PicoGo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PicoGo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Algorithm Study</title>
      <link href="//2023/06/23/Algorithm/"/>
      <url>//2023/06/23/Algorithm/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="leetcode"><a href="#leetcode" class="headerlink" title="leetcode"></a>leetcode</h1><h2 id="problem1"><a href="#problem1" class="headerlink" title="problem1"></a>problem1</h2><blockquote><p>给定一个整数数组 <code>nums</code> 和一个整数目标值 <code>target</code>，请你在该数组中找出和为目标值 <code>target</code>的那两个整数，并返回它们的数组下标。</p></blockquote><h3 id="暴力枚举"><a href="#暴力枚举" class="headerlink" title="暴力枚举"></a>暴力枚举</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>i<span class="token punctuation">,</span> j<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">problem1</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> hashtable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>hashtable<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>target <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>hashtable<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            hashtable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h1><h2 id="对数阶-O-log-n"><a href="#对数阶-O-log-n" class="headerlink" title="对数阶 $O(\log n)$"></a>对数阶 $O(\log n)$</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/* 对数阶（循环实现） */</span><span class="token keyword">int</span> <span class="token function">logarithmic</span><span class="token punctuation">(</span><span class="token keyword">float</span> n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        n <span class="token operator">=</span> n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        count<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> count<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>问题规模为n,操作数为x</p><p>$$<br>2^x&#x3D;n\ \Rightarrow<br>x&#x3D;\log_{2}{n}<br>$$</p><h1 id="空间复杂度"><a href="#空间复杂度" class="headerlink" title="空间复杂度"></a>空间复杂度</h1><h2 id="算法相关空间"><a href="#算法相关空间" class="headerlink" title="算法相关空间"></a>算法相关空间</h2><p>算法运行中，使用的内存空间主要有以下几种：</p><ul><li>「输入空间」用于存储算法的输入数据；</li><li>「暂存空间」用于存储算法运行中的变量、对象、函数上下文等数据；</li><li>「输出空间」用于存储算法的输出数据；</li></ul><blockquote><p>通常情况下，空间复杂度统计范围是「暂存空间」+「输出空间」。</p></blockquote><p>暂存空间可分为三个部分：</p><ul><li>「暂存数据」用于保存算法运行中的各种 常量、变量、对象 等。</li><li>「栈帧空间」用于保存调用函数的上下文数据。系统每次调用函数都会在栈的顶部创建一个栈帧，函数返回时，栈帧空间会被释放。</li><li>「指令空间」用于保存编译后的程序指令，在实际统计中一般忽略不计。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> Study </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Study</title>
      <link href="//2023/06/23/AndroidStudy/"/>
      <url>//2023/06/23/AndroidStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Kotlin"><a href="#Kotlin" class="headerlink" title="Kotlin"></a>Kotlin</h1><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><h2 id="AndroidStudio-图标双击没有反应-打不开"><a href="#AndroidStudio-图标双击没有反应-打不开" class="headerlink" title="AndroidStudio 图标双击没有反应,打不开."></a>AndroidStudio 图标双击没有反应,打不开.</h2><blockquote><p>现象: 前几天不知道什么弄的,然后突然发现AS 软件直接打不开了,现象就是你双击图标,然后鼠标上加载圆圈显示了一会就没反应了.什么提示都没有,一脸懵逼.</p></blockquote><p>处理过程: 刚开始以为是AS 软件问题,然后就把AS 卸载了重装,还是不行.然后开始疯狂百度.百度上有几篇各种各样的,大概总结一下有以下几个方面原因:</p><p>1.java 环境没有安装好 认真看了一下,发现没有问题,然后不自信的重装了一遍,还是不行.</p><p>2.任务管理器里面找到AndroidStudio 任务然后关闭 认真一个个找了半天,没找到,关个锤子….</p><p>3.修改配置文件 在AS安装目录下找到bin目录里面的studio.exe.vmoptions， 用记事本打开删掉 -XX:+UseCodeCacheFlushing 这一行（这里有两个不同的文件studio.exe.vmoptions和studio64.exe.vmoptions 如果你的系统是32位的，只要改第一个就可以，同样如果是64位的酒改第二个） —没有找到这一行代码,凉凉</p><p>在安装目录下找到bin目录里面的studio.bat 用记事本打开将</p><p>SET VM_OPTIONS_FILE&#x3D;%IDE_BIN_DIR%\studio%BITS%.exe.vmoptions 改为 SET VM_OPTIONS_FILE&#x3D;%IDE_BIN_DIR%\studio%BITS%.exe 还是不行,感觉有点慌了…..</p><p>4.查看错误</p><p>在安装目录下找到bin目录里面的studio.bat 双击运行查看错误提示,双击后一闪而过,看个鬼,然后用cmd 命令运行studio.bat 然后提示错误。百度说是java版本跟javac 版本不对?不是很懂然后按百度的通过cmd 查看了java 和javac 的版本一致,不是这个原因,心态有点崩了.一度想着重装系统算了.但是想想重装系统也麻烦,还是再挣扎一下吧</p><p>5.删除配置文件 删除C:\Users\XXXXX\AppData\Roaming\Google目录下的AndroidStudio2021.1 文件夹– 不行</p><p>删除C:\Users\XXXX\AppData\Local\Google目录下的AndroidStudio2021.1 文件夹– 不行</p><p>6.添加驱动 –解决 1! 2!! 3!!! 上链接: <a href="https://blog.csdn.net/u012129030/article/details/115566990">idea安装之后不能启动的问题_Erjun001的博客-CSDN博客_idea安装后无法启动</a> 从C:\Users\Ric\AppData\Local\JetBrains\IntelliJIdea2020.3\log 路径下的日志文件中查看到有错误信息。</p><p>然后是缺少了visual C++ 驱动,想起来应该是之前清理电脑软件的时候估计不小心把他删掉了,于是重新下载安装一下,完美!!! 赞美</p><p>visual C++ 下载:Latest supported Visual C++ Redistributable downloads | Microsoft Docs 下载地址：</p><blockquote><p><a href="https://docs.microsoft.com/en-GB/cpp/windows/latest-supported-vc-redist?view=msvc-170">https://docs.microsoft.com/en-GB/cpp/windows/latest-supported-vc-redist?view=msvc-170</a></p></blockquote><p>原文链接：<a href="https://blog.csdn.net/qq_17031103/article/details/124465955">https://blog.csdn.net/qq_17031103/article/details/124465955</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cloudcomputing期末复习</title>
      <link href="//2023/06/23/cloudcomputing/"/>
      <url>//2023/06/23/cloudcomputing/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="大题"><a href="#大题" class="headerlink" title="大题"></a>大题</h1><h2 id="根据个人使用情况，请多角度分析典型的云应用？"><a href="#根据个人使用情况，请多角度分析典型的云应用？" class="headerlink" title="根据个人使用情况，请多角度分析典型的云应用？"></a>根据个人使用情况，请多角度分析典型的云应用？</h2><p>“云应用”是”云计算”概念的子集，是云计算技术在应用层的体现。云应用和云计算最大的不同在于，云计算作为一种宏观技术发展概念而存在，云应用则是直接面对客户案决实际问题的产品。云应用遍及各个方面，典型的云应用有云存储、云服务以及云物联。</p><h3 id="1-云存储"><a href="#1-云存储" class="headerlink" title="1.云存储"></a>1.云存储</h3><p>是在云计算概念上延伸和发展出来的一个新的概念，是一种新兴的网络存储技术，是指通过集群应用、网络技术或分布式文件系统等功能，将网络中大量各种不同类型的存储设备通过应用软件集合起来协同工作，共同对外提供数据存储和业务访问功能的一个系统。 典型的云存储包括Dropbox、百度云、阿里云、网盘等，这些应用可以帮助用户存储资料，例如大容量文件就可以通过云存储留给他人下载，节省了时间和金钱，有很好的便携性。 根据我个人使用的情况来看，首先，我觉得云存储这个云应用就是帮助我们将文件存储到云端，可以不占用我们电脑以及手机的内存。我本人使用的是百度网盘，当我的手机或电脑文件过多时，我就将一部分图片以及文件等资源存储的百度网盘里，按照一定规律分个类，不仅不占用手机电脑内存，找起来也比较方便。 其次，使用云存储，我们也能够实现资源共享，以及在其他设备获取资源。我们可以通过网盘下载别人分享的大容量文件，别人分享的资源，当在其他设备上需要某些资源时，只要登录网盘就能实现异地资源互通。 而且，我们将重要资源存储到云端，当设备出现故障或者遭受病毒时，我们也不用担心这些重要资源的丢失，一定程度上，云存储也保障了我们的资源存储安全。但是，现在的云存储免费提供给我们的存储空间也是有限的，当我们需求量不高时，也是够用的。</p><h3 id="2-云服务，"><a href="#2-云服务，" class="headerlink" title="2.云服务，"></a>2.云服务，</h3><p>目前很多公司都有自己的云服务产品，例如Google、微软、亚马逊等。典型的云服务有微软的Hotmail、Google的gmail、苹果的iCloud等。这项服务主要以邮箱为账号，实现用户登录账号后内容在线同步的效果。当然，邮箱也可以达到这个效果，在很多没有U盘的情况下，人们经常会把文件发给自己的邮箱，以方便回家阅览，这也是云服务最早的应用，可以实现在线运行，随时随地接收文件。 根据我个人使用的情况来看，云服务这个应用在我们换手机时显现的好处就非常明显，如果我们的手机登录了我们自己的账号，开启了账户云服务，将需要移到新手机的资源，例如联系人，图库等存入，到新的设备登入账号，便能将信息存储到新的设备中。还有我们办公用的WPS，他也有云服务，当我们开启云服务功能，可以将我们文件备份到云端，无论我们在手机，平板还是电脑上，只要登入账号就能继续查看与修改，它是同步的。</p><h3 id="3-云物联，"><a href="#3-云物联，" class="headerlink" title="3.云物联，"></a>3.云物联，</h3><p>“物联网就是物物相连的互联网”有两层意思：第一，物联网的核心和基础的然是互联网，是在互联网基础上延伸和扩展的网络；第二，其用户端延伸和扩展到了任何物品与物品之间，进行信息交换和通信。云物联是通过使用RFID、传感器、红外感应器、全球定位系统、激光扫描器等信息采集设备，按约定的协议。把任何物品与互联网连接起来，进行信息交换和通信，以实现智能化识别、定位、跟踪、监控和管理的一种网络。 根据我个人使用的情况来看 ，云物联应用在各个方面，比如智能家居，可穿戴设备，智能安全，制造业，农业等。就比如我平时佩戴的智能手表，智能秤等，就是将这些物品与互联网相连，这些物品收集采集一些信息，在互联网的基础上，进行传递通信，然后进行智能处理。还有在许多行业里，将物品与互联网相连，不仅能实时了解情况，还能在网络端进行指令发布，然后远程进行处理，在工业上的应用还能够减少许多人工成本。</p><h2 id="简述云基础设施机制，并根据个人情况及行业应用对其中两类做出详细描述？"><a href="#简述云基础设施机制，并根据个人情况及行业应用对其中两类做出详细描述？" class="headerlink" title="简述云基础设施机制，并根据个人情况及行业应用对其中两类做出详细描述？"></a>简述云基础设施机制，并根据个人情况及行业应用对其中两类做出详细描述？</h2><p>云基础设施机制是云环境的基础构件块，它是形成云技术架构基础的主要构件。云基础设施机制主要针对计算、存储、网络，包括虚拟网络边界、虚拟服务器、云存储设备和就绪环境。</p><h3 id="1-虚拟网络边界，"><a href="#1-虚拟网络边界，" class="headerlink" title="1.虚拟网络边界，"></a>1.虚拟网络边界，</h3><p>是由提供和控制数据中心连接的网络设备建立，一般是作为虚拟化环境部署的。例如虚拟防火墙、虚拟网络。该机制被定义为将一个网络环境与通信网络的其他部分隔开，形成一个虚拟网络边界，包含并隔离了一组相关的基于云的IT资源，这些资源在物理上可能是分布式的。该机制可被用于将云中的 IT 资源与非授权用户隔离;将云中的 IT 资源与非用户隔离;将云中的 IT 资源与云用户隔离;控制被隔离 IT 资源的可用带宽。</p><h3 id="2-虚拟服务器"><a href="#2-虚拟服务器" class="headerlink" title="2.虚拟服务器"></a>2.虚拟服务器</h3><p>服务器通常通过虚拟机监视器或虚拟化平台来实现硬件设备的抽象、资源的调度和虚拟机的管理。虚拟服务器是一种模拟物理服务器的虚拟化软件。虚拟服务器需对服务器的CPU内存设备及I&#x2F;O分别实现虚拟化。虚拟服务器具有多实例，隔离性，封装性特性，具有实时迁移，快速部署，高兼容性，提高资源利用率，动态调度资源优点。</p><h3 id="3-云存储设备"><a href="#3-云存储设备" class="headerlink" title="3.云存储设备"></a>3.云存储设备</h3><p>云存储设机制是指专门为基于云配置所设计的存储设备。这些设备的实例可以被虚拟化。</p><h3 id="4-就绪环境"><a href="#4-就绪环境" class="headerlink" title="4.就绪环境"></a>4.就绪环境</h3><p>就绪环境机制是 PaaS 云交付模型的定义组件，基于云平台，已有一组安装好的 IT 资源，可以被云用户使用和定制。云用户利用就绪环境机制进行远程开发及配置自身的服务和应用程序。</p><h3 id="详细描述："><a href="#详细描述：" class="headerlink" title="详细描述："></a>详细描述：</h3><h4 id="①虚拟网络边界"><a href="#①虚拟网络边界" class="headerlink" title="①虚拟网络边界"></a>①虚拟网络边界</h4><p>就我个人使用情况，平时能够接触到最多的虚拟网络边界就在教室机房中，只有连接了校园网才能访问学校里的一些网站，而我们使用自己的网络，即未被学校授权的网络就会无法访问获取资料，这就体现了这个机制的一个作用，将云中的IT资源与非授权用户隔离。 就行业应用而言，传统的防火墙较多的部分划分，导致企业需要部署多台独立防火墙，这会使企业建立防火墙和维护成本较高而且放置的多个独立防火墙将占用较多的机架空间。所以许多企业都会建立虚拟防火墙，虚拟防火墙可以把一个防火墙设备划分成多台虚拟防火墙，而且每台虚拟防火墙之间相互独立，降低了企业的投资成本，也可以通过虚拟化统一管理平台可以实现多个防火墙的统一管理。虚拟专用网络也帮助企业使用身份验证链接来帮助他们确保只有自己的授权用户才能连接自己的网络，使用VPN，公司可以确保自己公司机密不会被盗取等，有一定的安全保障。</p><h4 id="②虚拟服务器"><a href="#②虚拟服务器" class="headerlink" title="②虚拟服务器"></a>②虚拟服务器</h4><p>就我个人使用情况，虚拟服务器和虚拟机是同义词，当我想要下载一些大的软件，或者配置要求高的软件时，但是自己电脑本身服务器硬件又不够，我就会利用虚拟服务器来模拟一台电脑来下载需要的内容，还有下载一个游戏或者完成一些实验，当所需系统不同时，我又不会去拥有多台物理设备，这时就可以利用虚拟服务器来创建虚拟机进行应用。 就行业应用而言，多个云用户可以共享一个物理服务器，企业使用虚拟服务器能够在线上进行业务工作，能够提升企业的业务效率。而且每个虚拟服务器可以可以存储大量IT资源，相互独立，一个崩溃不会影响到其他虚拟服务器，而且企业使用虚拟服务器后，企业的数据及业务数据都将存储在虚拟服务器中，方便集中管理，无需购买过多的物理服务器，这减少了企业在硬件上的投入。而且虚拟服务器的快速部署优点，让以往需要耗费十几小时甚至几天的时间，只需要十几分钟来部署一个应用，通过部署一个封装好的操作系统和应用程序的虚拟机，只需复制，启动和配置虚拟机就能完成，而且不易出错，为企业节省了不少的时间成本。</p><h2 id="简要介绍Virtual-Server的安装及注意事项。"><a href="#简要介绍Virtual-Server的安装及注意事项。" class="headerlink" title="简要介绍Virtual Server的安装及注意事项。"></a>简要介绍Virtual Server的安装及注意事项。</h2><h3 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h3><p>首先在VirtualBox官方网站地址–<a href="https://www.virtualbox.org/%EF%BC%8C%E4%B8%8B%E8%BD%BDvirtualbox%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%E5%8C%85%EF%BC%8C%E4%B8%8B%E8%BD%BD%E5%AE%8C%E6%88%90%E5%90%8E%E5%BE%97%E5%88%B0%E5%AE%89%E8%A3%85%E6%96%87%E4%BB%B6%EF%BC%8C%E5%8F%8C%E5%87%BB%E5%B0%B1%E5%8F%AF%E4%BB%A5%E8%BF%9B%E5%85%A5virtualbox%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%E7%95%8C%E9%9D%A2%EF%BC%8C%E7%82%B9%E5%87%BB%E4%B8%8B%E4%B8%80%E6%AD%A5%E7%BB%A7%E7%BB%AD%E5%AE%89%E8%A3%85%EF%BC%8C%E8%BF%9B%E5%85%A5%E5%88%B0virtualbox%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AE%E9%80%89%E6%8B%A9%E7%95%8C%E9%9D%A2%EF%BC%8C%E5%AF%B9%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AE%E8%BF%9B%E8%A1%8C%E6%9B%B4%E6%94%B9%EF%BC%8C%E5%88%9D%E5%A7%8B%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AE%E5%9C%A8C%E7%9B%98%EF%BC%8C%E4%B8%80%E7%9B%B4%E9%BB%98%E8%AE%A4%E4%BC%9A%E4%BD%BF%E7%94%B5%E8%84%91C%E7%9B%98%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4%E4%B8%8D%E5%A4%9F%E3%80%82%E6%8E%A5%E7%9D%80%E5%88%B0%E4%BA%86%E8%87%AA%E5%AE%9A%E5%AE%89%E8%A3%85%E9%80%89%E6%8B%A9%E5%8A%9F%E8%83%BD%EF%BC%8C%E5%8F%AF%E5%85%A8%E9%80%89%E6%96%87%E4%BB%B6%EF%BC%8C%E7%84%B6%E5%90%8E%E7%82%B9%E5%87%BB%E4%B8%8B%E4%B8%80%E6%AD%A5%EF%BC%8C%E5%BE%97%E5%88%B0%E8%AD%A6%E5%91%8A%E7%BD%91%E7%BB%9C%E7%95%8C%E9%9D%A2%E8%AF%A2%E9%97%AE%E6%98%AF%E5%90%A6%E7%AB%8B%E5%8D%B3%E5%AE%89%E8%A3%85%EF%BC%8C%E9%80%89%E6%8B%A9%E6%98%AF%EF%BC%8C%E4%B8%8B%E4%B8%80%E6%AD%A5%E7%82%B9%E5%87%BB%E5%AE%89%E8%A3%85%EF%BC%8C%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%EF%BC%8C%E7%AD%89%E5%BE%85%E5%87%A0%E5%88%86%E9%92%9F%E5%B0%B1%E5%AE%8C%E6%88%90%E4%BA%86">https://www.virtualbox.org/，下载virtualbox虚拟机安装包，下载完成后得到安装文件，双击就可以进入virtualbox虚拟机安装界面，点击下一步继续安装，进入到virtualbox虚拟机安装位置选择界面，对安装位置进行更改，初始安装位置在C盘，一直默认会使电脑C盘存储空间不够。接着到了自定安装选择功能，可全选文件，然后点击下一步，得到警告网络界面询问是否立即安装，选择是，下一步点击安装，进行安装，等待几分钟就完成了</a>{.uri}。</p><h3 id="虚拟机新建过程："><a href="#虚拟机新建过程：" class="headerlink" title="虚拟机新建过程："></a>虚拟机新建过程：</h3><p>1、点击新建，输入虚拟电脑的名称、类型和版本 2、设置内存大小，我设置为1024M，然后点击下一步。 3、选择虚拟硬盘，点击创建。 4、选择创建虚拟硬盘，点击下一步。 5、选择动态分配，点击下一步。 6、设置虚拟硬盘位置和大小，点击下一步。 7、点击创建，虚拟机已经新建完成了，接下来需要在虚拟机中安装系统。</p><h3 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h3><p>1.在官网下载安装包时，需要选择自己电脑配置适配的，一开始我选的Virtual Serve7.0但是安装失败，换了6.x就可以了 2.安装时要注意安装路径 3.使用虚拟机时，可以给虚拟机备份，以免日后非正常关闭虚拟机引起数据库的错误可以及时的恢复</p><h2 id="详细介绍云安全防护策略，并根据个人应用过程中出现的问题给出有效建议。"><a href="#详细介绍云安全防护策略，并根据个人应用过程中出现的问题给出有效建议。" class="headerlink" title="详细介绍云安全防护策略，并根据个人应用过程中出现的问题给出有效建议。"></a>详细介绍云安全防护策略，并根据个人应用过程中出现的问题给出有效建议。</h2><h3 id="详细介绍云安全防护策略："><a href="#详细介绍云安全防护策略：" class="headerlink" title="详细介绍云安全防护策略："></a>详细介绍云安全防护策略：</h3><p>云安全涉及的关键技术及风险应对策略包括基础设施安全、数据安全、应用安全和虚拟化安全4个方面。</p><h4 id="1-基础设施安全"><a href="#1-基础设施安全" class="headerlink" title="1.基础设施安全"></a>1.基础设施安全</h4><p>云计算模式的基础是云基础设施，承载服务的应用和平台等均建立在云基础设施上，确保云计算环境中用户数据和应用安全的基础是要保证服务的底层支撑体系(即云基础设施)的安全和可信。确保基础设施层的安全可以从六个方面进行考虑：①数据可控以及数据隔离②综合考虑数据中心的软&#x2F;硬件部署③建立安全的远程管理机制④选择安全的虚拟化厂商以及成熟的技术⑤建立、健全IT行业法规⑥针对突然的服务中断等不可抗拒新因素采取异地容灾策略</p><h4 id="2-数据安全"><a href="#2-数据安全" class="headerlink" title="2.数据安全"></a>2.数据安全</h4><p>企业数据安全和隐私保护是云用户最关心的安全服务目标，无论是云用户还是云服务提供商，都应避免数据丢失和被窃，不管使用哪种云计算的服务模式(SaaS&#x2F;Paas&#x2F;Ia(5)，数据安全都变得越来越重要。从数据安全生命周期和云应用数据流程综合考虑，针对①数据传输安全、②数据存储和③数据残留等云数据安全敏感阶段进行关键技术的分析。 ①数据传输安全 数据安全传输防护策略是首先对传输的数据进行加密，其次使用安全传输协议SSL和VPN进行数据传输。 ②数据存储 云用户在云服务提供商存储数据时存在数据滥用、存储位置隔离、灾难恢复、数据审计等安全风险。 (1)对于IaaS应用，可以采用静止数据加密的方式防止被云服务提供商、恶意邻居租户及某些应用滥用 (2)对于数据存储位置，云用户要坚持一个关于数据具体位置的基本原则，并在服务水平协议SLA和合同中约定。 (3)采用”数据标记”、单租户专用数据平台实现数据隔离，防止数据被非法访问，但Paas和Saas应用为了实现可扩展、可用性、管理以及运行效率等方面的”经济性”，唯一可行的办法是建立私有云，不要把任何重要的或者敏感的数据放到公有云中。 (4)采用数据多各份的方式来实现灾难恢复，通过外部审计和安全认证来实现数据完整性和可用性。 ③数据残留 数据残留是数据在被以某种形式擦除后所残留的物理表现，存储介质被擦除后可能留有一些物理特性使数据能够被重建。在云计算环境中，数据残留有可能会无意地泄露敏感信息。因此，云服务提供商应通过销毁加密数据相关介质、销毁存储介质、磁盘擦拭、内容发现等技术和方法来保证数据的完整清除。</p><h4 id="3-应用安全"><a href="#3-应用安全" class="headerlink" title="3.应用安全"></a>3.应用安全</h4><p>云环境的灵活性、开放性以及公众可用性等特性给应用安全带来了很多挑战，因此云提供商在云主机上部署的Web应用程序应当充分考虑来自互联网的威胁。 ①终端客户安全 ·在云客户端上部署反恶意软件、防病毒、个人防火墙以及IPS类型安全软件，并开启各项防御功能。 ·云用户应该采取必要措施保护浏览器免受攻击，在云环境中实现端到端的安全。云用户应使用自动更新功能，定期完成浏览器的打补丁和更新工作。 ·对于企业客户，应该从制度上规定连接云计算应用的计算机禁止安装虚拟机，并且对计算机进行定期检查。 ②SaaS应用安全 SaaS应用提供给用户的能力是使用服务商运行在云基础设施之上的应用，用户使用各种客户端设备通过浏览器来访问应用。用户并不管理或控制底层的云基础设施。在SaaS服务模式下，提供商应最大限度地确保提供给客户的应用程序和组件安全，客户端只负责用户与访问管理安全，所以在选择SaaS提供商前要几个方面对其进行安全评估。 ③PaaS应用安全 PaaS云提供商提供给用户的能力是在云基础设施之上部署用户创建或采购的应用，这些应用使用服务商支持的编程语言或工具开发，用户并不管理或控制底层的云基础设施，包括网络、服务器、操作系统、存储等，但是可以控制部署的应用以及应用主机的某个环境配置。PaaS应用安全包含两个层次，即PaaS平台自身的安全和客户部署在PaaS平台上应用的安全。</p><h4 id="4-虚拟化安全"><a href="#4-虚拟化安全" class="headerlink" title="4.虚拟化安全"></a>4.虚拟化安全</h4><p>虚拟化对于云计算是至关重要的，而基于虚拟化技术的云计算主要存在两个方面的安全风险，一个是虚拟化软件的安全；另一个是使用虚拟化技术的虚拟服务器的安全。 ·虚拟化软件层直接部署于裸机之上，提供能够创建、运行和销毁虚拟服务器的能力。虚拟化软件层的完整性和可用性对保证基于虚拟化技术构建的公有云的完整性和可用性是最重要的，也是最关键的。需要（1）选择无漏洞的虚拟化软件(2)必须严格限制任何未经授权的用户访问虚拟化软件层。 ·虚拟服务器位于虚拟化软件之上，对物理服务器的安全原理与实践也可以被运用到虚拟服务器上，当然需要兼顾虚拟服务器的特点。需要(1)选择具有TPM安全模块的物理服务器；选用多核并支持虚拟技术的处理器(2)在构建服务器时，应为每台虚拟服务器分配一个独立的硬盘分区(3)虚拟服务器之间及其物理主机之间通过VLAN和IP进行网络逻辑隔离，服务器之间通过VPN进行网络连接。 (4)对虚拟服务器的运行状态进行严密的监控，不需要运行的虚拟机应当立即关闭。</p><h4 id="5-身份识别和访问管理"><a href="#5-身份识别和访问管理" class="headerlink" title="5.身份识别和访问管理"></a>5.身份识别和访问管理</h4><p>身份识别和访问管理系统能够对服务和资源的访问及权限进行管理。在一个租户下，通过这个可以控制组织内不同用户及用户组对资源和访问的控制权限，从而保证数据和信息的安全性。那么对于云计算平台的IAM，主要从用户管理、角色管理、权限管理、安全凭证管理几个方面体现其管理和控制。</p><h4 id="6-操作系统安全"><a href="#6-操作系统安全" class="headerlink" title="6.操作系统安全"></a>6.操作系统安全</h4><p>在云平台中的操作系统，为了避免病毒及黑客攻击，需要及时更新系统补丁，以保护和防止数据泄露。对于公有云，云平台可以提供操作系统安全补丁服务；对于私有云，则需要管理员借助自动化方式集中对补丁进行分级分发。</p><h4 id="7-操作审计"><a href="#7-操作审计" class="headerlink" title="7.操作审计"></a>7.操作审计</h4><p>审计是一项支持用户进行监管、合规性检查、操作审核和风险审核的模块。审计功能可以记录日志、持续监控，并保留与整个基础设施中的操作相关的账户活动。它提供账户活动的事件历史记录，这些活动包括通过管理控制台、命令行工具和其他服务执行的操作。这一事件历史记录可以简化安全性分析、资源更改跟踪和故障排除工作。</p><h3 id="根据个人应用过程中出现的问题给出有效建议："><a href="#根据个人应用过程中出现的问题给出有效建议：" class="headerlink" title="根据个人应用过程中出现的问题给出有效建议："></a>根据个人应用过程中出现的问题给出有效建议：</h3><p>1.我认为在个人应用过程中，首先我们应该提前做好措施避免我们设备上安全漏洞被成功利用。需要及时更新系统补丁，以保护和防止数据泄露。我们应该在自己的云客户端上部署一些防病毒反恶意软件的防火墙，我们还需要对自己的计算机定期进行检查。 2.对于数据安全，一些重要的信息，像自己的证件号，密码之类，必须存储在数据库中进行适当加密，隐私安全是最重要的，云计算账户的泄露、意外泄露或其他泄露行为。这些高度特权和敏感的帐户如果被遭到破坏，可能会导致严重的后果。从网络钓鱼和凭证填充到薄弱或被盗凭证，再到不正确的编码，账户泄露可能导致数据泄露和服务中断。我们应尽量避免数据丢失和被盗窃，数据相关的系统更改不安全的默认配置，进行加固操作，进行核心数据主动防护，也可以设置入侵防御系统来保障数据安全。 3.还有对于数据存储的安全性及稳定性，为了避免造成一些数据丢失等方面的损失，避免出现任何问题，还是最好要有适当的备份。</p><h2 id="实验二"><a href="#实验二" class="headerlink" title="实验二"></a>实验二</h2><h3 id="一台高配VMware虚拟机，内存12G，硬盘200G（swap分区4G，boot分区200M，剩下全给根目录），CPU开启虚拟化支持，双网卡桥接模式。"><a href="#一台高配VMware虚拟机，内存12G，硬盘200G（swap分区4G，boot分区200M，剩下全给根目录），CPU开启虚拟化支持，双网卡桥接模式。" class="headerlink" title="一台高配VMware虚拟机，内存12G，硬盘200G（swap分区4G，boot分区200M，剩下全给根目录），CPU开启虚拟化支持，双网卡桥接模式。"></a>一台高配VMware虚拟机，内存12G，硬盘200G（swap分区4G，boot分区200M，剩下全给根目录），CPU开启虚拟化支持，双网卡桥接模式。</h3><h3 id="安装bash-completion-vim和net-tools工具"><a href="#安装bash-completion-vim和net-tools工具" class="headerlink" title="安装bash-completion,vim和net-tools工具"></a>安装bash-completion,vim和net-tools工具</h3><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# yum -y install bash-completion vim net-tools</p><h3 id="关闭SELinux和firewalld"><a href="#关闭SELinux和firewalld" class="headerlink" title="关闭SELinux和firewalld"></a>关闭SELinux和firewalld</h3><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# vi &#x2F;etc&#x2F;selinux&#x2F;config</p><p>SELINUX&#x3D;disabled</p><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# setenforce 0</p><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# getenforce</p><p>Permissive</p><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# systemctl disable firewalld &amp;&amp; systemctl stop firewalld</p><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# systemctl status firewalld</p><h3 id="配置-x2F-etc-x2F-hosts"><a href="#配置-x2F-etc-x2F-hosts" class="headerlink" title="配置&#x2F;etc&#x2F;hosts"></a>配置&#x2F;etc&#x2F;hosts</h3><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# vim &#x2F;etc&#x2F;hosts</p><p>192.168.128.240 OpenStack</p><h3 id="下载epel源"><a href="#下载epel源" class="headerlink" title="下载epel源"></a>下载epel源</h3><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# yum -y install epel-release</p><h3 id="配置网卡信息"><a href="#配置网卡信息" class="headerlink" title="配置网卡信息"></a>配置网卡信息</h3><p>IP地址 网络类型 网卡 在OpenStack网络中的作用 192.168.128.240 bridge（桥接） ens32 OpenStack内部管理网络（management network），Horizon web界面访问就是通过该网卡</p><p>无（不能配置IP地址） bridge（桥接） ens33 外部网络（external network），让neutron（OpenStack中的网络组件）的br-ex绑定使用，OpenStack中的虚拟机是通过该网卡与外网通信</p><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# vim &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens32</p><p>&#x2F;&#x2F;修改以下几行，如果不存在则添加</p><p>BOOTPROTO&#x3D;none　　&#x2F;&#x2F;将dhcp改为none，使自动获取改为静态获取</p><p>ONBOOT&#x3D;yes　　&#x2F;&#x2F;启动用该网卡</p><p>IPADDR&#x3D;192.168.128.240　　&#x2F;&#x2F;设置IPv4地址</p><p>NETMASK&#x3D;255.255.255.0　　&#x2F;&#x2F;设置子网掩码</p><p>GATEWAY&#x3D;192.168.128.254　　&#x2F;&#x2F;设置默认网关</p><p>DNS1&#x3D;61.177.7.1　　&#x2F;&#x2F;设置DNS</p><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# vim &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33</p><p>&#x2F;&#x2F;修改以下几行，并将其移动到文件开头，如果不存在则添加。</p><p>TYPE&#x3D;Ethernet</p><p>NAME&#x3D;ens33</p><p>DEVICE&#x3D;ens33　　&#x2F;&#x2F;如果是开启虚拟机后添加网卡，需要手动编辑以上三行</p><p>BOOTPROTO&#x3D;none　　&#x2F;&#x2F;将dhcp改为none，使自动获取改为静态获取</p><p>ONBOOT&#x3D;yes　　&#x2F;&#x2F;启用该网卡</p><h3 id="重启网络"><a href="#重启网络" class="headerlink" title="重启网络"></a>重启网络</h3><p>[<a href="mailto:root@OpenStack240">root@OpenStack240</a>{.email} ~]# systemctl restart network</p><h3 id="安装基础包"><a href="#安装基础包" class="headerlink" title="安装基础包"></a>安装基础包</h3><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# yum -y install python-devel libffi-devel gcc openssl-devel git python-pip</p><h3 id="配置pip镜像源，方便快速下载python库（默认从国外下载）"><a href="#配置pip镜像源，方便快速下载python库（默认从国外下载）" class="headerlink" title="配置pip镜像源，方便快速下载python库（默认从国外下载）"></a>配置pip镜像源，方便快速下载python库（默认从国外下载）</h3><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# mkdir .pip</p><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# tee .pip&#x2F;pip.conf &lt;&lt; EOF　　&#x2F;&#x2F;不知道为什么cat失败，所以用了tee</p><p>[global]index-url&#x3D;<a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a> [install]trusted-host&#x3D;mirrors.aliyun.com</p><h3 id="升级pip"><a href="#升级pip" class="headerlink" title="升级pip"></a>升级pip</h3><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# pip install -U pip</p><h3 id="使用pip安装ansible，注意不要使用yum安装，否则会与kolla中的YAML包冲突"><a href="#使用pip安装ansible，注意不要使用yum安装，否则会与kolla中的YAML包冲突" class="headerlink" title="使用pip安装ansible，注意不要使用yum安装，否则会与kolla中的YAML包冲突"></a>使用pip安装ansible，注意不要使用yum安装，否则会与kolla中的YAML包冲突</h3><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# pip install ansible</p><h3 id="使用pip安装kolla-ansible"><a href="#使用pip安装kolla-ansible" class="headerlink" title="使用pip安装kolla-ansible"></a>使用pip安装kolla-ansible</h3><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# pip install kolla-ansible 　如果出现如下错误 &#x2F;&#x2F;已经存在PyYAML3.10导致不能安装PyYAML</p><p>Found existing installation: PyYAML 3.10</p><p>Cannot uninstall ‘PyYAML’. It is a distutils installed project and thus we cannot accurately determine which files belong to it</p><p>which would lead to only a partial uninstall.</p><p>&#x2F;&#x2F;出现如上错误，请执行以下步骤</p><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# pip install PyYAML –ignore-installed PyYAML　　&#x2F;&#x2F;忽略已经安装的PyYAML，安装PyYAML</p><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# pip install kolla-ansible　　&#x2F;&#x2F;重新安装kolla-ansible</p><h3 id="复制kolla-ansible的相关配置文件"><a href="#复制kolla-ansible的相关配置文件" class="headerlink" title="复制kolla-ansible的相关配置文件"></a>复制kolla-ansible的相关配置文件</h3><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# cp -r &#x2F;usr&#x2F;share&#x2F;kolla-ansible&#x2F;etc_examples&#x2F;kolla &#x2F;etc&#x2F;</p><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# ls &#x2F;etc&#x2F;kolla&#x2F;</p><p>globals.yml passwords.yml</p><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# cp &#x2F;usr&#x2F;share&#x2F;kolla-ansible&#x2F;ansible&#x2F;inventory&#x2F;* &#x2F;etc&#x2F;kolla&#x2F;</p><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# ls &#x2F;etc&#x2F;kolla&#x2F;</p><p>all-in-one globals.yml multinode passwords.yml</p><p>　　文件说明：all-in-one是安装单节点OpenStack的ansible自动安装配置文件；multinode是安装多节点OpenStack的ansible自动安装配置文件；globals.yml是OpenStack部署的自定义配置文件；passwords.yml是OpenStack中各个服务的密码文件。</p><h3 id="编辑kolla-ansible的配置文件，用于自定义安装OpenStack"><a href="#编辑kolla-ansible的配置文件，用于自定义安装OpenStack" class="headerlink" title="编辑kolla-ansible的配置文件，用于自定义安装OpenStack"></a>编辑kolla-ansible的配置文件，用于自定义安装OpenStack</h3><h4 id="生成OpenStack各个服务的密码文件，并修改Web页面登录密码"><a href="#生成OpenStack各个服务的密码文件，并修改Web页面登录密码" class="headerlink" title="生成OpenStack各个服务的密码文件，并修改Web页面登录密码"></a>生成OpenStack各个服务的密码文件，并修改Web页面登录密码</h4><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# kolla-genpwd</p><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# vim &#x2F;etc&#x2F;kolla&#x2F;passwords.yml</p><p>&#x2F;&#x2F;修改第165行，这是登录Dashboard（web界面控制台）的密码。正常情况下也不能太简单，可以截取一段自动生成的密码</p><p>keystone_admin_password: 123456</p><h4 id="编辑-x2F-etc-x2F-kolla-x2F-global-yml自定义OpenStack中的部署事项"><a href="#编辑-x2F-etc-x2F-kolla-x2F-global-yml自定义OpenStack中的部署事项" class="headerlink" title="编辑&#x2F;etc&#x2F;kolla&#x2F;global.yml自定义OpenStack中的部署事项"></a>编辑&#x2F;etc&#x2F;kolla&#x2F;global.yml自定义OpenStack中的部署事项</h4><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# vim &#x2F;etc&#x2F;kolla&#x2F;globals.yml</p><p>&#x2F;&#x2F;第14行和第15行，选择下载的基础镜像，5选1 kolla_base_distro: “centos” &#x2F;&#x2F;第17行和第18行，选择的安装方法，2选1。binary二进制安装，source源码安装 kolla_install_type: “source” &#x2F;&#x2F;第20行和第21行，选择OpenStack的版本标签，详细请看：<a href="https://releases.openstack.org/">https://releases.openstack.org/</a> openstack_release: “stein”　　&#x2F;&#x2F;注意版本必须小写，后期下载的OpenStack相关的docker镜像标签也为stein。我是train版本失败，才换成stein &#x2F;&#x2F;第23行和第24行，存放配置文件的位置 node_custom_config: “&#x2F;etc&#x2F;kolla&#x2F;config”　　&#x2F;&#x2F;默认存放地址 &#x2F;&#x2F;第31行，OpenStack内部管理网络地址，通过该IP访问OpenStack Web页面进行管理。如果启用了高可用，需要设置为VIP（漂移IP） kolla_internal_vip_address: “192.168.128.240” &#x2F;&#x2F;第87行，OpenStack内部管理网络地址的网卡接口 network_interface: “ens32” &#x2F;&#x2F;第105行，OpenStack外部（或公共）网络的网卡接口，可以是vlan模式或flat模式。 &#x2F;&#x2F;此网卡应该在没有IP地址的情况下处于活动，如果不是，那么OpenStack云平台中的云主机实例将无法访问外部网络。（存在IP时br-ex桥接就不成功） neutron_external_interface: “ens33” &#x2F;&#x2F;第190行，关闭高可用 enable_haproxy: “no” &#x2F;&#x2F;第213行，关闭cinder（块存储） enable_cinder: “no” &#x2F;&#x2F;第443行和第444行,指定nova-compute守护进程使用的虚拟化技术。（kvm好像有点问题，大家可以试试，看看你们能不能过nova下载） &#x2F;&#x2F;nova-compute是一个非常重要的守护进程，负责创建和终止虚拟机实例，即管理虚拟机实例的生命周期 nova_compute_virt_type: “qemu”</p><h4 id="生成ssh-key，并给自己授权"><a href="#生成ssh-key，并给自己授权" class="headerlink" title="生成ssh key，并给自己授权"></a>生成ssh key，并给自己授权</h4><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# ssh-keygen [<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# ssh-copy-id -i &#x2F;root&#x2F;.ssh&#x2F;id_rsa.pub <a href="mailto:root@OpenStack">root@OpenStack</a>{.email}</p><h4 id="配置单节点清单文件"><a href="#配置单节点清单文件" class="headerlink" title="配置单节点清单文件"></a>配置单节点清单文件</h4><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# vim &#x2F;etc&#x2F;kolla&#x2F;all-in-one</p><p>&#x2F;&#x2F;修改第3行到第19行，将localhost ansible_connection&#x3D;local改为OpenStack</p><p>&#x2F;&#x2F;可以使用替换命令”:1,$s&#x2F;localhost ansible_connection&#x3D;local&#x2F;OpenStack&#x2F;“</p><p>[control]</p><p>OpenStack</p><p>[network]</p><p>OpenStack</p><p>[compute]</p><p>OpenStack</p><p>[storage]</p><p>OpenStack</p><p>[monitoring]</p><p>OpenStack</p><p>[deployment]</p><p>OpenStack</p><h3 id="安装bootstrap-servers部署OpenStack所需的依赖包。该包由kolla-ansible提供，包含docker。"><a href="#安装bootstrap-servers部署OpenStack所需的依赖包。该包由kolla-ansible提供，包含docker。" class="headerlink" title="安装bootstrap-servers部署OpenStack所需的依赖包。该包由kolla-ansible提供，包含docker。"></a>安装bootstrap-servers部署OpenStack所需的依赖包。该包由kolla-ansible提供，包含docker。</h3><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# kolla-ansible -i &#x2F;etc&#x2F;kolla&#x2F;all-in-one bootstrap-servers</p><h3 id="对当前主机进行预部署（检测），直接看最后的统计即可。如果检测报错，可以查看前面的TASK-precheck-…-部分，可以快速定位到错误"><a href="#对当前主机进行预部署（检测），直接看最后的统计即可。如果检测报错，可以查看前面的TASK-precheck-…-部分，可以快速定位到错误" class="headerlink" title="对当前主机进行预部署（检测），直接看最后的统计即可。如果检测报错，可以查看前面的TASK:[precheck …]部分，可以快速定位到错误"></a>对当前主机进行预部署（检测），直接看最后的统计即可。如果检测报错，可以查看前面的TASK:[precheck …]部分，可以快速定位到错误</h3><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# kolla-ansible -i &#x2F;etc&#x2F;kolla&#x2F;all-in-one prechecks</p><h3 id="指定docker加速器，阿里云免费的申请一下即可"><a href="#指定docker加速器，阿里云免费的申请一下即可" class="headerlink" title="指定docker加速器，阿里云免费的申请一下即可"></a>指定docker加速器，阿里云免费的申请一下即可</h3><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# tee &#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt; ‘EOF’ { “registry-mirrors”: [“<a href="https://xxxxxxx.mirror.aliyuncs.com/">https://xxxxxxx.mirror.aliyuncs.com</a>“] }</p><h3 id="重启docker"><a href="#重启docker" class="headerlink" title="重启docker"></a>重启docker</h3><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# systemctl daemon-reload [<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# systemctl restart docker</p><h3 id="拉取镜像，时间有点长"><a href="#拉取镜像，时间有点长" class="headerlink" title="拉取镜像，时间有点长"></a>拉取镜像，时间有点长</h3><p>[<a href="mailto:root@Openstack240">root@Openstack240</a>{.email} ~]# kolla-ansible -i &#x2F;etc&#x2F;kolla&#x2F;all-in-one pull</p><h3 id="查看拉取下来的镜像"><a href="#查看拉取下来的镜像" class="headerlink" title="查看拉取下来的镜像"></a>查看拉取下来的镜像</h3><p>[<a href="mailto:root@OpenStack240">root@OpenStack240</a>{.email} ~]# docker images</p><h3 id="部署OpenStack"><a href="#部署OpenStack" class="headerlink" title="部署OpenStack"></a>部署OpenStack</h3><p>[<a href="mailto:root@OpenStack240">root@OpenStack240</a>{.email} ~]# kolla-ansible -i &#x2F;etc&#x2F;kolla&#x2F;all-in-one deploy</p><h3 id="验证部署，并且生成-x2F-etc-x2F-kolla-x2F-admin-openrc-sh"><a href="#验证部署，并且生成-x2F-etc-x2F-kolla-x2F-admin-openrc-sh" class="headerlink" title="验证部署，并且生成&#x2F;etc&#x2F;kolla&#x2F;admin-openrc.sh"></a>验证部署，并且生成&#x2F;etc&#x2F;kolla&#x2F;admin-openrc.sh</h3><p>[<a href="mailto:root@OpenStack240">root@OpenStack240</a>{.email} ~]# kolla-ansible -i &#x2F;etc&#x2F;kolla&#x2F;all-in-one post-deploy</p><h3 id="查看-x2F-etc-x2F-kolla-x2F-admin-openrc-sh"><a href="#查看-x2F-etc-x2F-kolla-x2F-admin-openrc-sh" class="headerlink" title="查看&#x2F;etc&#x2F;kolla&#x2F;admin-openrc.sh"></a>查看&#x2F;etc&#x2F;kolla&#x2F;admin-openrc.sh</h3><p>[<a href="mailto:root@OpenStack240">root@OpenStack240</a>{.email} ~]# cat &#x2F;etc&#x2F;kolla&#x2F;admin-openrc.sh export OS_PROJECT_DOMAIN_NAME&#x3D;Default export OS_USER_DOMAIN_NAME&#x3D;Default export OS_PROJECT_NAME&#x3D;admin export OS_TENANT_NAME&#x3D;admin export OS_USERNAME&#x3D;admin　　&#x2F;&#x2F;在该文件中可以看到OpenStack的Web页面账号密码 export OS_PASSWORD&#x3D;123456 export OS_AUTH_URL&#x3D;<a href="http://192.168.128.240:35357/v3">http://192.168.128.240:35357/v3</a> export OS_INTERFACE&#x3D;internal export OS_IDENTITY_API_VERSION&#x3D;3 export OS_REGION_NAME&#x3D;RegionOne export OS_AUTH_PLUGIN&#x3D;password</p><h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><h4 id="ansible版本不匹配"><a href="#ansible版本不匹配" class="headerlink" title="ansible版本不匹配"></a>ansible版本不匹配</h4><h4 id="CryptographyDeprecationWarning"><a href="#CryptographyDeprecationWarning" class="headerlink" title="CryptographyDeprecationWarning:"></a>CryptographyDeprecationWarning:</h4><p>Python 2 is no longer supported by the Python core team. Support for it is now deprecated in cryptography, and will be removed in the next release.</p><h4 id="Cannot-uninstall-‘xxx’"><a href="#Cannot-uninstall-‘xxx’" class="headerlink" title="Cannot uninstall ‘xxx’."></a>Cannot uninstall ‘xxx’.</h4><p>It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.</p><h4 id="Centos7-下pip安装python-ldap失败问题解决（-Modules-x2F-common-h-15-18-致命错误：lber-h：没有那个文件或目录）"><a href="#Centos7-下pip安装python-ldap失败问题解决（-Modules-x2F-common-h-15-18-致命错误：lber-h：没有那个文件或目录）" class="headerlink" title="Centos7 下pip安装python-ldap失败问题解决（ Modules&#x2F;common.h:15:18: 致命错误：lber.h：没有那个文件或目录）"></a>Centos7 下pip安装python-ldap失败问题解决（ Modules&#x2F;common.h:15:18: 致命错误：lber.h：没有那个文件或目录）</h4><p>解决： [<a href="mailto:root@lms">root@lms</a>{.email} lms]# yum -y install openldap-devel</p><h4 id="Command-“python-setup-py-egg-info”-failed-with-error-code-1-in-x2F-tmp-x2F-pip-build"><a href="#Command-“python-setup-py-egg-info”-failed-with-error-code-1-in-x2F-tmp-x2F-pip-build" class="headerlink" title="Command “python setup.py egg_info” failed with error code 1 in &#x2F;tmp&#x2F;pip-build-*"></a>Command “python setup.py egg_info” failed with error code 1 in &#x2F;tmp&#x2F;pip-build-*</h4><ul><li>先卸载安装的python-pip sudo yum remove python-pip</li><li>下载get-pip.py文件 wget <a href="https://bootstrap.pypa.io/pip/2.7/get-pip.py">https://bootstrap.pypa.io/pip/2.7/get-pip.py</a> sudo python get-pip.py</li></ul>]]></content>
      
      
      <categories>
          
          <category> cloudcomputing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cloudcomputing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++语言学习</title>
      <link href="//2023/06/23/cppStudy/"/>
      <url>//2023/06/23/cppStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="struct"><a href="#struct" class="headerlink" title="struct"></a>struct</h1><p><a href="https://blog.csdn.net/a_forever_dream/article/details/88867801">(9条消息) c++中struct构造函数_c++ struct 构造函数_Hypoc_的博客-CSDN博客</a></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span><span class="token keyword">struct</span> <span class="token class-name">node</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> x<span class="token punctuation">;</span>    <span class="token function">node</span><span class="token punctuation">(</span><span class="token keyword">int</span> z<span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">x</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token function">node</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    node a<span class="token punctuation">;</span>    node <span class="token function">b</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d %d\n"</span><span class="token punctuation">,</span>a<span class="token punctuation">.</span>x<span class="token punctuation">,</span>b<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="template"><a href="#template" class="headerlink" title="template"></a>template</h1><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token comment">// template 关键字告诉C++编译器 下面是个泛型模板</span><span class="token comment">// 数据类型T 参数化数据类型</span><span class="token keyword">template</span> <span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">T</span><span class="token operator">></span><span class="token keyword">void</span> <span class="token function">generic_swap</span><span class="token punctuation">(</span>T <span class="token operator">&amp;</span>a<span class="token punctuation">,</span> T <span class="token operator">&amp;</span>b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Initial value: "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> <span class="token string">" : "</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    T tmp<span class="token punctuation">;</span>    tmp <span class="token operator">=</span> b<span class="token punctuation">;</span>    b <span class="token operator">=</span> a<span class="token punctuation">;</span>    a <span class="token operator">=</span> tmp<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>    <span class="token function">generic_swap</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"excute the swap():"</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> <span class="token string">" : "</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token char">'A'</span><span class="token punctuation">,</span> d <span class="token operator">=</span> <span class="token char">'B'</span><span class="token punctuation">;</span>    <span class="token function">generic_swap</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"excute the swap():"</span> <span class="token operator">&lt;&lt;</span> c <span class="token operator">&lt;&lt;</span> <span class="token string">" : "</span> <span class="token operator">&lt;&lt;</span> d <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    string e <span class="token operator">=</span> <span class="token string">"Jacky"</span><span class="token punctuation">,</span> f <span class="token operator">=</span> <span class="token string">"Lucy"</span><span class="token punctuation">;</span>    <span class="token function">generic_swap</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"excute the swap():"</span> <span class="token operator">&lt;&lt;</span> e <span class="token operator">&lt;&lt;</span> <span class="token string">" : "</span> <span class="token operator">&lt;&lt;</span> f <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">double</span> j <span class="token operator">=</span> <span class="token number">1.314</span><span class="token punctuation">,</span> k <span class="token operator">=</span> <span class="token number">5.12</span><span class="token punctuation">;</span>    <span class="token function">generic_swap</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"excute the swap():"</span> <span class="token operator">&lt;&lt;</span> j <span class="token operator">&lt;&lt;</span> <span class="token string">" : "</span> <span class="token operator">&lt;&lt;</span> k <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../image/Snipaste_2023-03-05_00-18-39.png"></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token comment">//注意：模板头和类头是一个整体，可以换行，但是中间不能有分号</span><span class="token keyword">template</span><span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">T1</span><span class="token punctuation">,</span> <span class="token keyword">typename</span> <span class="token class-name">T2</span><span class="token operator">></span>  <span class="token comment">//这里不能有分号</span><span class="token keyword">class</span> <span class="token class-name">Point</span> <span class="token punctuation">&#123;</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token function">Point</span><span class="token punctuation">(</span>T1 x<span class="token punctuation">,</span> T2 y<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">m_x</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">m_y</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span class="token keyword">public</span><span class="token operator">:</span>    T1 <span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>  <span class="token comment">//获取x坐标</span>    <span class="token keyword">void</span> <span class="token function">setX</span><span class="token punctuation">(</span>T1 x<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//设置x坐标</span>    T2 <span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>  <span class="token comment">//获取y坐标</span>    <span class="token keyword">void</span> <span class="token function">setY</span><span class="token punctuation">(</span>T2 y<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//设置y坐标</span><span class="token keyword">private</span><span class="token operator">:</span>    T1 m_x<span class="token punctuation">;</span>  <span class="token comment">//x坐标</span>    T2 m_y<span class="token punctuation">;</span>  <span class="token comment">//y坐标</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">//下面就对 Point 类的成员函数进行定义</span><span class="token keyword">template</span><span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">T1</span><span class="token punctuation">,</span> <span class="token keyword">typename</span> <span class="token class-name">T2</span><span class="token operator">></span> T1 <span class="token class-name">Point</span><span class="token operator">&lt;</span>T1<span class="token punctuation">,</span> T2<span class="token operator">></span><span class="token double-colon punctuation">::</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> m_x<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">template</span><span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">T1</span><span class="token punctuation">,</span> <span class="token keyword">typename</span> <span class="token class-name">T2</span><span class="token operator">></span> <span class="token keyword">void</span> <span class="token class-name">Point</span><span class="token operator">&lt;</span>T1<span class="token punctuation">,</span> T2<span class="token operator">></span><span class="token double-colon punctuation">::</span><span class="token function">setX</span><span class="token punctuation">(</span>T1 x<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    m_x <span class="token operator">=</span> x<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">template</span><span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">T1</span><span class="token punctuation">,</span> <span class="token keyword">typename</span> <span class="token class-name">T2</span><span class="token operator">></span> T2 <span class="token class-name">Point</span><span class="token operator">&lt;</span>T1<span class="token punctuation">,</span> T2<span class="token operator">></span><span class="token double-colon punctuation">::</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> m_y<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">template</span><span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">T1</span><span class="token punctuation">,</span> <span class="token keyword">typename</span> <span class="token class-name">T2</span><span class="token operator">></span> <span class="token keyword">void</span> <span class="token class-name">Point</span><span class="token operator">&lt;</span>T1<span class="token punctuation">,</span> T2<span class="token operator">></span><span class="token double-colon punctuation">::</span><span class="token function">setY</span><span class="token punctuation">(</span>T2 y<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    m_y <span class="token operator">=</span> y<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 与函数模板不同的是，类模板在实例化时必须显式地指明数据类型</span>    <span class="token comment">// 编译器不能根据给定的数据推演出数据类型</span>    Point<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">></span> <span class="token function">p1</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"x="</span> <span class="token operator">&lt;&lt;</span> p1<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">", y="</span> <span class="token operator">&lt;&lt;</span> p1<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    Point<span class="token operator">&lt;</span><span class="token keyword">float</span><span class="token punctuation">,</span> <span class="token keyword">float</span><span class="token operator">></span> <span class="token function">p2</span><span class="token punctuation">(</span><span class="token number">12.88</span><span class="token punctuation">,</span> <span class="token number">129.65</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"x="</span> <span class="token operator">&lt;&lt;</span> p2<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">", y="</span> <span class="token operator">&lt;&lt;</span> p2<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    Point<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> string<span class="token operator">></span> <span class="token function">p3</span><span class="token punctuation">(</span><span class="token string">"E180"</span><span class="token punctuation">,</span><span class="token string">"N210"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"x="</span> <span class="token operator">&lt;&lt;</span> p3<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">", y="</span> <span class="token operator">&lt;&lt;</span> p3<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    Point<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">float</span><span class="token operator">></span> <span class="token function">p4</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">129.65</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"x="</span> <span class="token operator">&lt;&lt;</span> p4<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">", y="</span> <span class="token operator">&lt;&lt;</span> p4<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    Point<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">></span> <span class="token function">p5</span><span class="token punctuation">(</span><span class="token string">"hello,world!"</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"x="</span> <span class="token operator">&lt;&lt;</span> p5<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">", y="</span> <span class="token operator">&lt;&lt;</span> p5<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token comment">//除了对象变量，我们也可以使用对象指针的方式来实例化</span>    Point<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">></span><span class="token operator">*</span> p7 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token generic-function"><span class="token function">Point</span><span class="token generic class-name"><span class="token operator">&lt;</span>string<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token string">"hello,world!"</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"x="</span> <span class="token operator">&lt;&lt;</span> p7<span class="token operator">-></span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">", y="</span> <span class="token operator">&lt;&lt;</span> p7<span class="token operator">-></span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">delete</span> p7<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../image/2023-03-04-23-37-03-image.png"></p>]]></content>
      
      
      <categories>
          
          <category> cpp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cpp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSAPP</title>
      <link href="//2023/06/23/CSapp/"/>
      <url>//2023/06/23/CSapp/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="易混点"><a href="#易混点" class="headerlink" title="易混点"></a>易混点</h1><h2 id="数据量的度量单位"><a href="#数据量的度量单位" class="headerlink" title="数据量的度量单位"></a>数据量的度量单位</h2><p><img src="/../image/Snipaste_2023-01-27_19-32-16.png"></p>]]></content>
      
      
      <categories>
          
          <category> CSAPP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSAPP </tag>
            
            <tag> books </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c语言学习</title>
      <link href="//2023/06/23/cStudy/"/>
      <url>//2023/06/23/cStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><h3 id="创建和使用结构体"><a href="#创建和使用结构体" class="headerlink" title="创建和使用结构体"></a>创建和使用结构体</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">struct</span> <span class="token class-name">Student</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 使用 (struct关键字 + 结构体类型名称)</span>    <span class="token comment">// 来声明结构体类型，这种类型是我们自己创建的（同样也可以作为函数的参数、返回值之类的）</span>    <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token comment">// 结构体中可以包含多个不同类型的数据，这些数据共同组成了整个结构体类型（当然结构体内部也能包含结构体类型的变量）</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token comment">// 用户名可以用指针指向一个字符串，也可以用char数组来存，如果是指针的话，那么数据不会存在结构体中，只会存放字符串的地址，但是如果是数组的话，数据会存放在结构体中</span>    <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">struct</span> <span class="token class-name">Student</span> stu0 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">000</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">"Liang0"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"id=%d age=%d name=%s \n"</span><span class="token punctuation">,</span> stu0<span class="token punctuation">.</span>id<span class="token punctuation">,</span> stu0<span class="token punctuation">.</span>age<span class="token punctuation">,</span> stu0<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    stu0<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"Studentc"</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"id=%d age=%d name=%s \n"</span><span class="token punctuation">,</span> stu0<span class="token punctuation">.</span>id<span class="token punctuation">,</span> stu0<span class="token punctuation">.</span>age<span class="token punctuation">,</span> stu0<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../image/Snipaste_2023-02-16_10-17-46.png"></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">struct</span> <span class="token class-name">student</span><span class="token punctuation">&#123;</span>    <span class="token keyword">long</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> stu2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">002</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">"Liang2"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> stu4<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"id=%ld age=%d name=%s \n"</span><span class="token punctuation">,</span> stu2<span class="token punctuation">.</span>id<span class="token punctuation">,</span> stu2<span class="token punctuation">.</span>age<span class="token punctuation">,</span> stu2<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">student</span> stu0 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">000</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">"Liang0"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"id=%ld age=%d name=%s \n"</span><span class="token punctuation">,</span> stu0<span class="token punctuation">.</span>id<span class="token punctuation">,</span> stu0<span class="token punctuation">.</span>age<span class="token punctuation">,</span> stu0<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">student</span> stu1<span class="token punctuation">;</span> <span class="token comment">// 定义了一个student类型的变量stu1</span>    stu1<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">001</span><span class="token punctuation">;</span>       <span class="token comment">// 通过成员运算符'.'来访问结构体的成员变量</span>    stu1<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">21</span><span class="token punctuation">;</span>    <span class="token function">strcpy</span><span class="token punctuation">(</span>stu1<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">"Liang1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 因为数组在非初始化时，不能直接通过数组名直接赋值，strcpy函数需要包含头文件string.h</span>    <span class="token comment">// 错误的写法：stu1.name = "Liang";</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"id=%ld age=%d name=%s \n"</span><span class="token punctuation">,</span> stu1<span class="token punctuation">.</span>id<span class="token punctuation">,</span> stu1<span class="token punctuation">.</span>age<span class="token punctuation">,</span> stu1<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">student</span> stu3 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">003</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"Liang3"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"id=%ld age=%d name=%s \n"</span><span class="token punctuation">,</span> stu3<span class="token punctuation">.</span>id<span class="token punctuation">,</span> stu3<span class="token punctuation">.</span>age<span class="token punctuation">,</span> stu3<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">student</span> stu5<span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">student</span> <span class="token operator">*</span>sp <span class="token operator">=</span> <span class="token operator">&amp;</span>stu5<span class="token punctuation">;</span>    sp<span class="token operator">-></span>id <span class="token operator">=</span> <span class="token number">005</span><span class="token punctuation">;</span>    <span class="token punctuation">(</span><span class="token operator">*</span>sp<span class="token punctuation">)</span><span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"id=%ld age=%d name=%s \n"</span><span class="token punctuation">,</span> stu5<span class="token punctuation">.</span>id<span class="token punctuation">,</span> stu5<span class="token punctuation">.</span>age<span class="token punctuation">,</span> stu5<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../image/Snipaste_2023-02-16_10-19-38.png"></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">Student</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">Student</span> <span class="token operator">*</span>next<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> Student1<span class="token punctuation">,</span> <span class="token operator">*</span>StudentPtr<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    StudentPtr s1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Student</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Student</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    StudentPtr s2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Student</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Student</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    s1<span class="token operator">-></span>next <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Student</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Student</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    s2<span class="token operator">-></span>next <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Student</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Student</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    s1<span class="token operator">-></span>age <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>    s2<span class="token operator">-></span>age <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> s1<span class="token operator">-></span>age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../image/Snipaste_2023-02-16_10-21-09.png"></p><h3 id="结构体大小"><a href="#结构体大小" class="headerlink" title="结构体大小"></a>结构体大小</h3><p>大小是遵循下面的规则来进行计算的： 结构体中的各个数据要求字节对齐，规则如下：</p><ul><li>规则一：结构体中元素按照定义顺序依次置于内存中，但并不是紧密排列的。从结构体首地址开始依次将元素放入内存时，元素会被放置在其自身对齐大小的整数倍地址上（0默认是所有大小的整数倍）</li><li>规则二：如果结构体大小不是所有元素中最大对齐大小的整数倍，则结构体对齐到最大元素对齐大小的整数倍，填充空间放置到结构体末尾。</li><li>规则三：基本数据类型的对齐大小为其自身的大小，结构体数据类型的对齐大小为其元素中最大对齐大小元素的对齐大小。</li></ul><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">struct</span> <span class="token class-name">Object</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">char</span> a<span class="token punctuation">;</span>   <span class="token comment">//char占据1个字节</span>    <span class="token keyword">int</span> b<span class="token punctuation">;</span>   <span class="token comment">//int占据4个字节，因为前面存了一个char，按理说应该从第2个字节开始存放，但是根据规则一，必须在自己的整数倍位置上存放，所以2不是4的整数倍位置，这时离1最近的下一个整数倍地址就是4了，所以前面空3个字节的位置出来，然后再放置</span>    <span class="token keyword">short</span> c<span class="token punctuation">;</span> <span class="token comment">//前面存完int之后，就是从8开始了，刚好满足short（2字节）的整数倍，但是根据规则二，整个结构体大小必须是最大对齐大小的整数倍（这里最大对齐大小是int，所以是4），存完short之后，只有10个字节，所以屁股后面再补两个空字节，这样就可以了</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="结构体数组"><a href="#结构体数组" class="headerlink" title="结构体数组"></a>结构体数组</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">struct</span> <span class="token class-name">Student</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">struct</span> <span class="token class-name">Student</span> arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"小明"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token comment">// 声明一个结构体类型的数组，其实和基本类型声明数组是一样的</span>                             <span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token string">"小红"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token comment">// 多个结构体数据用逗号隔开</span>                             <span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"小刚"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 先通过arr[1]拿到第二个结构体，然后再通过同样的方式 .数据名称 就可以拿到对应的值了</span>    <span class="token keyword">struct</span> <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"小明"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">Student</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token operator">&amp;</span>student<span class="token punctuation">;</span> <span class="token comment">// 同样的，类型后面加上*就是一个结构体类型的指针了</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 由于.运算符优先级更高，所以需要先使用*p得到地址上的值，然后再去访问对应数据</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> p<span class="token operator">-></span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 使用 -> 运算符来快速将指针所指结构体的对应数据取出</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> c </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git Study</title>
      <link href="//2023/06/23/gitStudy/"/>
      <url>//2023/06/23/gitStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><h2 id="git进行push时-Please-make-sure-you-have-the-correct-access-rights-and-the-repository-exists"><a href="#git进行push时-Please-make-sure-you-have-the-correct-access-rights-and-the-repository-exists" class="headerlink" title="git进行push时:Please make sure you have the correct access rights and the repository exists."></a><code>git</code>进行push时:Please make sure you have the correct access rights and the repository exists.</h2><p>解决办法：</p><p>1.进入仓库路径</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"yourname"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"your@email.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.删除.ssh文件夹（直接搜索该文件夹）下的known_hosts(手动删除即可，不需要git）</p><p>3.再次git bash</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">"your@email.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.复制<code>id_rsa.pub</code>到github的ssh Keys中</p><p>5.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>6.<strong>退出</strong>，然后重新进</p><h2 id="pycharm-提交代码出现错误-remote-31mx-oauth-basic-Incorrect-username-or-password-access-token"><a href="#pycharm-提交代码出现错误-remote-31mx-oauth-basic-Incorrect-username-or-password-access-token" class="headerlink" title="pycharm 提交代码出现错误 remote: [31mx-oauth-basic: Incorrect username or password (access token)"></a><code>pycharm</code> 提交代码出现错误 remote: [31mx-oauth-basic: Incorrect username or password (access token)</h2><blockquote><p>解决办法：</p></blockquote><ul><li>第一步:控制台输入</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--system</span> <span class="token parameter variable">--unset</span> credential.helper<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>第二步:重启pycharm</li></ul>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang Study</title>
      <link href="//2023/06/23/GolangStudy/"/>
      <url>//2023/06/23/GolangStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop Study</title>
      <link href="//2023/06/23/HadoopStudy/"/>
      <url>//2023/06/23/HadoopStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Hadoop运行环境搭建"><a href="#Hadoop运行环境搭建" class="headerlink" title="Hadoop运行环境搭建"></a>Hadoop运行环境搭建</h1><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><h3 id="在进行xsync集群分发，已经安装rsync的情况下，执行xsync-bin出现指令找不到的错误"><a href="#在进行xsync集群分发，已经安装rsync的情况下，执行xsync-bin出现指令找不到的错误" class="headerlink" title="在进行xsync集群分发，已经安装rsync的情况下，执行xsync /bin出现指令找不到的错误"></a>在进行<code>xsync</code>集群分发，已经安装<code>rsync</code>的情况下，执行<code>xsync /bin</code>出现指令找不到的错误</h3><blockquote><p>解决办法： 将自己编写的&#x2F;bin文件拷贝到系统目录的bin下</p></blockquote><h3 id="but-there-is-no-HDFS-NAMENODE-USER-defined-Aborting-operation"><a href="#but-there-is-no-HDFS-NAMENODE-USER-defined-Aborting-operation" class="headerlink" title="but there is no HDFS_NAMENODE_USER defined. Aborting operation."></a>but there is no HDFS_NAMENODE_USER defined. Aborting operation.</h3><p>解决办法：</p><p>第一步：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/profile.d/my_env.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加以下内容</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">HDFS_NAMENODE_USER</span><span class="token operator">=</span>root<span class="token builtin class-name">export</span> <span class="token assign-left variable">HDFS_DATANODE_USER</span><span class="token operator">=</span>root<span class="token builtin class-name">export</span> <span class="token assign-left variable">HDFS_SECONDARYNAMENODE_USER</span><span class="token operator">=</span>root<span class="token builtin class-name">export</span> <span class="token assign-left variable">YARN_RESOURCEMANAGER_USER</span><span class="token operator">=</span>root<span class="token builtin class-name">export</span> <span class="token assign-left variable">YARN_NODEMANAGER_USER</span><span class="token operator">=</span>root<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>分发到集群</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">xsync /etc/profile.d/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="hadoop集群全部都启动了，但是还是访问不了网页的解决方法"><a href="#hadoop集群全部都启动了，但是还是访问不了网页的解决方法" class="headerlink" title="hadoop集群全部都启动了，但是还是访问不了网页的解决方法"></a><code>hadoop</code>集群全部都启动了，但是还是访问不了网页的解决方法</h3><blockquote><p>解决思路：去检查下防火墙情况，发现开了</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl status firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl stop firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl disable firewalld.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="HDFS"><a href="#HDFS" class="headerlink" title="HDFS"></a>HDFS</h1><h2 id="HDFS的API案例实操"><a href="#HDFS的API案例实操" class="headerlink" title="HDFS的API案例实操"></a>HDFS的API案例实操</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">edu<span class="token punctuation">.</span>wzq</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>conf<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>fs<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOUtils</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileOutputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URI</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URISyntaxException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HdfsClient</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/*        测试连接     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testMkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">URISyntaxException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1 获取文件系统</span>        <span class="token class-name">FileSystem</span> fs <span class="token operator">=</span> <span class="token class-name">FileSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URI</span><span class="token punctuation">(</span><span class="token string">"hdfs://hadoop100:8020"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 2 创建目录</span>        fs<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/xiyou/huaguoshan/"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 3 关闭资源</span>        fs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*        HDFS文件上传（测试参数优先级）     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCopyFromLocalFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">URISyntaxException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1 获取文件系统</span>        <span class="token class-name">Configuration</span> configuration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        configuration<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"dfs.replication"</span><span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileSystem</span> fs <span class="token operator">=</span> <span class="token class-name">FileSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URI</span><span class="token punctuation">(</span><span class="token string">"hdfs://hadoop100:8020"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> configuration<span class="token punctuation">,</span> <span class="token string">"root "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 2 上传文件</span>        fs<span class="token punctuation">.</span><span class="token function">copyFromLocalFile</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"D:/Hadoop/resources/sunwukong.txt"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/xiyou/huaguoshan/sunwukong.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 3 关闭资源</span>        fs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*    HDFS文件下载     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCopyToLocalFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">URISyntaxException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1 获取文件系统</span>        <span class="token class-name">Configuration</span> configuration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileSystem</span> fs <span class="token operator">=</span> <span class="token class-name">FileSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URI</span><span class="token punctuation">(</span><span class="token string">"hdfs://hadoop100:8020"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> configuration<span class="token punctuation">,</span> <span class="token string">"atguigu"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 2 执行下载操作</span>        <span class="token comment">// boolean delSrc 指是否将原文件删除</span>        <span class="token comment">// Path src 指要下载的文件路径</span>        <span class="token comment">// Path dst 指将文件下载到的路径</span>        <span class="token comment">// boolean useRawLocalFileSystem 是否开启文件校验</span>        fs<span class="token punctuation">.</span><span class="token function">copyToLocalFile</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/xiyou/huaguoshan"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"D:/Hadoop/resources/down_sunwukong.txt"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 3 关闭资源</span>        fs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*    HDFS文件更名和移动     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testRename</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">URISyntaxException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1 获取文件系统</span>        <span class="token class-name">Configuration</span> configuration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileSystem</span> fs <span class="token operator">=</span> <span class="token class-name">FileSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URI</span><span class="token punctuation">(</span><span class="token string">"hdfs://hadoop100:8020"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> configuration<span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 2 修改文件名称</span>        fs<span class="token punctuation">.</span><span class="token function">rename</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/xiyou/huaguoshan/sunwukong.txt"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/xiyou/huaguoshan/meihouwang.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 3 关闭资源</span>        fs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*    HDFS删除文件和目录     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">URISyntaxException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1 获取文件系统</span>        <span class="token class-name">Configuration</span> configuration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileSystem</span> fs <span class="token operator">=</span> <span class="token class-name">FileSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URI</span><span class="token punctuation">(</span><span class="token string">"hdfs://hadoop100:8020"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> configuration<span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 2 执行删除</span>        fs<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/xiyou"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 3 关闭资源</span>        fs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*    HDFS文件详情查看     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testListFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">URISyntaxException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1获取文件系统</span>        <span class="token class-name">Configuration</span> configuration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileSystem</span> fs <span class="token operator">=</span> <span class="token class-name">FileSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URI</span><span class="token punctuation">(</span><span class="token string">"hdfs://hadoop100:8020"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> configuration<span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 2 获取文件详情</span>        <span class="token class-name">RemoteIterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LocatedFileStatus</span><span class="token punctuation">></span></span> listFiles <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>listFiles<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">LocatedFileStatus</span> fileStatus <span class="token operator">=</span> listFiles<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"========"</span> <span class="token operator">+</span> fileStatus<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"========="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fileStatus<span class="token punctuation">.</span><span class="token function">getPermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fileStatus<span class="token punctuation">.</span><span class="token function">getOwner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fileStatus<span class="token punctuation">.</span><span class="token function">getGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fileStatus<span class="token punctuation">.</span><span class="token function">getLen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fileStatus<span class="token punctuation">.</span><span class="token function">getModificationTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fileStatus<span class="token punctuation">.</span><span class="token function">getReplication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fileStatus<span class="token punctuation">.</span><span class="token function">getBlockSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fileStatus<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取块信息</span>            <span class="token class-name">BlockLocation</span><span class="token punctuation">[</span><span class="token punctuation">]</span> blockLocations <span class="token operator">=</span> fileStatus<span class="token punctuation">.</span><span class="token function">getBlockLocations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>blockLocations<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 3 关闭资源</span>        fs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*    HDFS文件和文件夹判断     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testListStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">URISyntaxException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1 获取文件配置信息</span>        <span class="token class-name">Configuration</span> configuration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileSystem</span> fs <span class="token operator">=</span> <span class="token class-name">FileSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URI</span><span class="token punctuation">(</span><span class="token string">"hdfs://hadoop100:8020"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> configuration<span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 2 判断是文件还是文件夹</span>        <span class="token class-name">FileStatus</span><span class="token punctuation">[</span><span class="token punctuation">]</span> listStatus <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">listStatus</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">FileStatus</span> fileStatus <span class="token operator">:</span> listStatus<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 如果是文件</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>fileStatus<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"f:"</span> <span class="token operator">+</span> fileStatus<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"d:"</span> <span class="token operator">+</span> fileStatus<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 3 关闭资源</span>        fs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="报错-1"><a href="#报错-1" class="headerlink" title="报错"></a>报错</h1><h2 id="import-org-apache-commons-lang-StringUtils-的时候出错"><a href="#import-org-apache-commons-lang-StringUtils-的时候出错" class="headerlink" title="import org.apache.commons.lang.StringUtils;的时候出错"></a>import org.apache.commons.lang.StringUtils;的时候出错</h2><p><img src="/../image/Snipaste_2022-08-25_10-46-02.png"> 解决办法： 在lang后添加版本号3,即： <img src="/../image/Snipaste_2022-08-25_10-47-18.png"></p>]]></content>
      
      
      <categories>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java Study</title>
      <link href="//2023/06/23/javaStudy/"/>
      <url>//2023/06/23/javaStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><h2 id="java-io使用相对路径读取文件找不到文件"><a href="#java-io使用相对路径读取文件找不到文件" class="headerlink" title="java.io使用相对路径读取文件找不到文件"></a>java.io使用相对路径读取文件找不到文件</h2><p><strong>解决办法:</strong><br>检查run-&gt;edit Configuration-&gt;work directory中的默认路径<br><img src="/../image/Snipaste_2022-08-31_15-15-51.png"><br><img src="/../image/Snipaste_2022-08-31_15-21-15.png"></p><h2 id="IDEA中Spring配置错误"><a href="#IDEA中Spring配置错误" class="headerlink" title="IDEA中Spring配置错误"></a>IDEA中Spring配置错误</h2><blockquote><p>class path resource [applicationContext.xml] cannot be opened because it does not exist</p></blockquote><p><strong>解决办法1:</strong><br>1.把 .class 也放进 src 目录中,<br><kbd>注意：</kbd>不能直接把 applicationContext.xml 移至target目录下，因为 .xml 配置文件运行时也需要在 .java 文件中获取属性信息<br>2.修改 Output Path 到 src 目录下即可:<br>点击 File -&gt; Project Structure（或快捷键 Ctrl+Alt+Shift+S）<br><img src="/../image/Snipaste_2022-09-01_10-57-10.png"><br><strong>解决方法2:</strong><br>1.在src&#x2F;main目录下新建一个文件夹，建议取名resource<br>2.点击 File -&gt; Project Structure（或快捷键 Ctrl+Alt+Shift+S）<br>3.点击 Modules -&gt; Sources 将新建的文件夹标记为 Resources<br>4.将applicationContext.xml放入resources文件夹<br>5.重新编译运行即可</p><h1 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h1><h2 id="定义注解"><a href="#定义注解" class="headerlink" title="定义注解"></a>定义注解</h2><p>Java语言使用@interface语法来定义注解（Annotation），它的格式如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Report</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> <span class="token function">level</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">"info"</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">//System.out.println(arr[2][1]);</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> i <span class="token operator">:</span> arr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">:</span> i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="数据库连接"><a href="#数据库连接" class="headerlink" title="数据库连接"></a>数据库连接</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestJdbc</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">,</span> <span class="token class-name">SQLException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//注册JDBC驱动程序</span>        <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.cj.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//打开一个连接</span>        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>                <span class="token string">"jdbc:mysql://localhost:3306/world?&amp;userSSL=false"</span><span class="token punctuation">,</span>                <span class="token string">"root"</span><span class="token punctuation">,</span>                <span class="token string">"3033715900"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//执行一个查询</span>        <span class="token class-name">Statement</span> stat <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> stat<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token string">"select *from city where CountryCode='AFG'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//ResultSet rs = stmt.executeUpdate(sql); UPDATE，INSERT或DELETE语句</span>        <span class="token comment">// 从结果集中提取数据</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//Retrieve by column name</span>            <span class="token keyword">int</span> id <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"ID"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> name <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"Name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//Display values</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"ID: "</span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">", Name: "</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS Study</title>
      <link href="//2023/06/23/JSstudy/"/>
      <url>//2023/06/23/JSstudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JavaScript-显示方案"><a href="#JavaScript-显示方案" class="headerlink" title="JavaScript 显示方案"></a>JavaScript 显示方案</h1><p>JavaScript 能够以不同方式”显示”数据： * 使用 window.alert() 写入警告框 * 使用 document.write() 写入 HTML 输出 * 使用 innerHTML 写入 HTML 元素 * 使用 console.log() 写入浏览器控制台</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"demo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>我的第一张网页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>我的第一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">//在 HTML 文档完全加载后使用 document.write() 将删除所有已有的 HTML<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>我的第一张网页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>我的第一个段落<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript">document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>试一试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="let"><a href="#let" class="headerlink" title="let"></a>let</h1><h2 id="重新声明"><a href="#重新声明" class="headerlink" title="重新声明"></a>重新声明</h2><ul><li>允许在程序的任何位置使用 var 重新声明 JavaScript 变量：</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token comment">// 现在，x 为 10</span><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span><span class="token comment">// 现在，x 为 6</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在相同的作用域，或在相同的块中，通过 let 重新声明一个 var 变量是不允许的：</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>     <span class="token comment">// 允许</span><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>      <span class="token comment">// 不允许</span><span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>  <span class="token comment">// 允许</span>  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>   <span class="token comment">// 不允许</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在相同的作用域，或在相同的块中，通过 let 重新声明一个 let 变量是不允许的：</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token comment">// 允许</span><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>     <span class="token comment">// 不允许</span><span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>  <span class="token comment">// 允许</span>  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>   <span class="token comment">// 不允许</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在相同的作用域，或在相同的块中，通过 var 重新声明一个 let 变量是不允许的：</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token comment">// 允许</span><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>     <span class="token comment">// 不允许</span><span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>  <span class="token comment">// 允许</span>  <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>   <span class="token comment">// 不允许</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在不同的作用域或块中，通过 let 重新声明变量是允许的：</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>     <span class="token comment">// 允许</span><span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>   <span class="token comment">// 允许</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>   <span class="token comment">// 允许</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="提升"><a href="#提升" class="headerlink" title="提升"></a>提升</h2><ul><li>通过 var 声明的变量会提升到顶端。您可以在声明变量之前就使用它：</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 在此处，您可以使用 carName</span><span class="token keyword">var</span> carName<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>通过 let 定义的变量不会被提升到顶端。在声明 let 变量之前就使用它会导致 ReferenceError。变量从块的开头一直处于”暂时死区”，直到声明为止：</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 在此处，您不可以使用 carName</span><span class="token keyword">let</span> carName<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="const"><a href="#const" class="headerlink" title="const"></a>const</h1><h2 id="块作用域"><a href="#块作用域" class="headerlink" title="块作用域"></a>块作用域</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token comment">// 此处，x 为 10</span><span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>  <span class="token comment">// 此处，x 为 6</span><span class="token punctuation">&#125;</span><span class="token comment">// 此处，x 为 10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="JavaScript-const-变量必须在声明时赋值："><a href="#JavaScript-const-变量必须在声明时赋值：" class="headerlink" title="JavaScript const 变量必须在声明时赋值："></a>JavaScript const 变量必须在声明时赋值：</h2><h2 id="常量对象可以更改"><a href="#常量对象可以更改" class="headerlink" title="常量对象可以更改"></a>常量对象可以更改</h2><p>您可以更改常量对象的属性：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 您可以创建 const 对象：</span><span class="token keyword">const</span> car <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">"porsche"</span><span class="token punctuation">,</span> <span class="token literal-property property">model</span><span class="token operator">:</span><span class="token string">"911"</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span><span class="token string">"Black"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 您可以更改属性：</span>car<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">"White"</span><span class="token punctuation">;</span><span class="token comment">// 您可以添加属性：</span>car<span class="token punctuation">.</span>owner <span class="token operator">=</span> <span class="token string">"Bill"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是您无法重新为常量对象赋值：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> car <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">"porsche"</span><span class="token punctuation">,</span> <span class="token literal-property property">model</span><span class="token operator">:</span><span class="token string">"911"</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span><span class="token string">"Black"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>car <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">"Volvo"</span><span class="token punctuation">,</span> <span class="token literal-property property">model</span><span class="token operator">:</span><span class="token string">"XC60"</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span><span class="token string">"White"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">// ERROR</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="常量数组可以更改"><a href="#常量数组可以更改" class="headerlink" title="常量数组可以更改"></a>常量数组可以更改</h2><p>您可以更改常量数组的元素：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 您可以创建常量数组：</span><span class="token keyword">const</span> cars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Audi"</span><span class="token punctuation">,</span> <span class="token string">"BMW"</span><span class="token punctuation">,</span> <span class="token string">"porsche"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 您可以更改元素：</span>cars<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"Honda"</span><span class="token punctuation">;</span><span class="token comment">// 您可以添加元素：</span>cars<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"Volvo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是您无法重新为常量数组赋值：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> cars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Audi"</span><span class="token punctuation">,</span> <span class="token string">"BMW"</span><span class="token punctuation">,</span> <span class="token string">"porsche"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>cars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Honda"</span><span class="token punctuation">,</span> <span class="token string">"Toyota"</span><span class="token punctuation">,</span> <span class="token string">"Volvo"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// ERROR</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>考研</title>
      <link href="//2023/06/23/kaoYanGuiHua/"/>
      <url>//2023/06/23/kaoYanGuiHua/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="408"><a href="#408" class="headerlink" title="408"></a>408</h1><h2 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h2><h3 id="学习路线"><a href="#学习路线" class="headerlink" title="学习路线"></a>学习路线</h3><p><a href="https://www.bilibili.com/video/BV1Cm4y1d7Ur/?spm_id_from=333.1007.top_right_bar_window_view_later.content.click&vd_source=d8bedf7695bcaec19ce3cd2be13861d4">视频一</a> <img src="/../image/Snipaste_2023-02-25_19-49-21.png"></p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><h2 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h2><p><a href="https://www.bilibili.com/video/BV1xe4y1d7Ex/?spm_id_from=333.1007.top_right_bar_window_view_later.content.click">视频一</a> <img src="/../image/Snipaste_2023-02-25_19-54-59.png"></p><p><a href="https://www.bilibili.com/video/BV1c4411d7jb?p=1">视频二</a> <img src="/../image/Snipaste_2023-02-25_19-50-58.png"></p><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><p><a href="https://www.bilibili.com/video/BV1nJ411V7bd/?spm_id_from=333.1007.top_right_bar_window_view_later.content.click">视频一</a> <img src="/../image/Snipaste_2023-02-25_19-47-45.png"> <a href="https://www.icourse163.org/course/QDU-1206503801">视频二</a> <img src="/../image/Snipaste_2023-02-25_19-57-55.png"></p><h3 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h3><p><a href="https://www.hello-algo.com/">算法</a> <a href="https://www.luogu.com.cn/">刷题1</a> <a href="https://leetcode.cn/">刷题2</a></p><h2 id="计算机组成原理"><a href="#计算机组成原理" class="headerlink" title="计算机组成原理"></a>计算机组成原理</h2><p><a href="https://www.icourse163.org/course/NJU-1001625001">视频一</a> <img src="/../image/Snipaste_2023-02-25_19-58-25.png"></p>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kettle Use</title>
      <link href="//2023/06/23/kettle/"/>
      <url>//2023/06/23/kettle/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><h2 id="kettle连接mysql8-0以上版本"><a href="#kettle连接mysql8-0以上版本" class="headerlink" title="kettle连接mysql8.0以上版本"></a>kettle连接mysql8.0以上版本</h2><p>1、下载mysql8.0的jar驱动<br><a href="https://mvnrepository.com/artifact/mysql/mysql-connector-java/8.0.28">https://mvnrepository.com/artifact/mysql/mysql-connector-java/8.0.28</a><br>2、将下载好的mysql的驱动放到kettle安装文件中的lib下面，然后重启Spoon<br>3、连接的两种方式<br>第一种方式：(亲测可用)<br>数据库类型选择<kbd>Generic Database</kbd><br><img src="/../image/Snipaste_2022-10-13_22-30-39.png"><br>自定义连接URL填入：jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;sys?useUnicode&#x3D;true&amp;characterEncoding&#x3D;UTF-8&amp;useSSL&#x3D;false&amp;serverTimezone&#x3D;Asia&#x2F;Shanghai&amp;zeroDateTimeBehavior&#x3D;CONVERT_TO_NULL（注：sys是你的数据库名称）<br>自定义驱动类名称填入：com.mysql.cj.jdbc.Driver</p><p>第二种方式：在kettle的安装目录下data-integration\simple-jndi\jdbc.properties加入jdbc的连接信息</p><blockquote><p>MYSQL8_DB&#x2F;type&#x3D;javax.sql.DataSource<br>MYSQL8_DB&#x2F;driver&#x3D;com.mysql.cj.jdbc.Driver<br>MYSQL8_DB&#x2F;url&#x3D;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;sys?useUnicode&#x3D;true&amp;characterEncoding&#x3D;utf8&amp;useSSL&#x3D;false&amp;serverTimezone&#x3D;GMT &#x2F;&#x2F;（注：sys是你的数据库名称）<br>MYSQL8_DB&#x2F;user&#x3D;root &#x2F;&#x2F;（用户名）<br>MYSQL8_DB&#x2F;password&#x3D;root &#x2F;&#x2F;（密码）</p></blockquote><p>选择mysql连接，连接方式选择JNDI，JNDI名称填写MYSQL8_DB<br>点击测试之后：<br>写入SQL语句，预览信息</p>]]></content>
      
      
      <categories>
          
          <category> Kettle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kettle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Study</title>
      <link href="//2023/06/23/linuxStudy/"/>
      <url>//2023/06/23/linuxStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><h2 id="WSL"><a href="#WSL" class="headerlink" title="WSL"></a>WSL</h2><h3 id="远程桌面连接失败"><a href="#远程桌面连接失败" class="headerlink" title="远程桌面连接失败"></a>远程桌面连接失败</h3><blockquote><p>解决办法: 设置一下root密码试试</p></blockquote><h2 id="Ubuntu的IP地址不显示问题"><a href="#Ubuntu的IP地址不显示问题" class="headerlink" title="Ubuntu的IP地址不显示问题"></a>Ubuntu的IP地址不显示问题</h2><p>解决办法:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> dhclient ens33<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">ifconfig</span> ens33<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Command-“python-setup-py-egg-info”-failed-with-error-code-1-in-x2F-tmp-x2F-pip-build-Cc2yuK-x2F-pip-x2F"><a href="#Command-“python-setup-py-egg-info”-failed-with-error-code-1-in-x2F-tmp-x2F-pip-build-Cc2yuK-x2F-pip-x2F" class="headerlink" title="Command “python setup.py egg_info” failed with error code 1 in &#x2F;tmp&#x2F;pip-build-Cc2yuK&#x2F;pip&#x2F;"></a>Command “python setup.py egg_info” failed with error code 1 in &#x2F;tmp&#x2F;pip-build-Cc2yuK&#x2F;pip&#x2F;</h2><p>报错如下图所示：<br><img src="/../image/Snipaste_2022-10-23_13-56-11.png"><br>一般出现这个问题是由于pip版本太低或者pip有问题的原因</p><p>此时需要升级pip：</p><ul><li><p>pip3执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip3 <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> pip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>pip执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> pip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>如果上面升级失败，可以试试:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-m</span> pip <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> <span class="token parameter variable">--force</span> pip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p>解决方法1:<br>如果在升级过程中报标题中的错误，则通过gt-pip.py文件进行安装（以python2.7为例）：<br>先卸载安装的python-pip</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum remove python-pip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下载get-pip.py文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://bootstrap.pypa.io/pip/2.7/get-pip.py<span class="token function">sudo</span> python get-pip.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>解决方法2:<br>这种方法是在网上看到的，没有亲自试验，请自行尝试:<br>如果安装了python2-pip或者python-pip，先卸载<br>yum -y remove python2-pip python-pip<br>安装python2-pip<br>yum -y install python2-pip<br>安装zabbix-api<br>pip install zabbix-api</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷刷题</title>
      <link href="//2023/06/23/luoGu/"/>
      <url>//2023/06/23/luoGu/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="p1405-小鱼的游泳时间"><a href="#p1405-小鱼的游泳时间" class="headerlink" title="p1405 小鱼的游泳时间"></a>p1405 小鱼的游泳时间</h1><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">;</span>    cin<span class="token operator">>></span>a<span class="token operator">>></span>b<span class="token operator">>></span>c<span class="token operator">>></span>d<span class="token punctuation">;</span>    <span class="token keyword">int</span> x<span class="token operator">=</span>c<span class="token operator">-</span>a<span class="token punctuation">,</span>y<span class="token operator">=</span>d<span class="token operator">-</span>b<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>y<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>x<span class="token operator">--</span><span class="token punctuation">;</span>y<span class="token operator">+=</span><span class="token number">60</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>    cout<span class="token operator">&lt;&lt;</span>x<span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span>y<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> 洛谷 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown Study</title>
      <link href="//2023/06/23/markdownStudy/"/>
      <url>//2023/06/23/markdownStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'离不开的网'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><hr><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><hr><p><u>带下划线文本</u><br><del>删除线</del>  </p><hr><p><img src="/D:/html+css+javascript/Study/resource/QQ图片20220702202459.gif" alt="RUNOOB 图标">  </p><hr><p>这个链接用 1 作为网址变量 <a href="http://static.runoob.com/images/runoob-logo.png">RUNOOB</a>.<br>然后在文档的结尾为变量赋值（网址）</p><hr><p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p><hr><p>这是一个链接 <a href="https://www.baidu.com/">百度链接</a></p><hr><p><img src="https://www.baidu.com/img/bd_logo1.png" alt="baidu 图标" title="baidu"></p><hr><blockquote><p>最外层</p><blockquote><p>第一层嵌套</p><blockquote><p>第二层嵌套</p></blockquote></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql</title>
      <link href="//2023/06/23/mysql/"/>
      <url>//2023/06/23/mysql/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><h2 id="VScode连接Mysql配置过程中出现了出现错误："><a href="#VScode连接Mysql配置过程中出现了出现错误：" class="headerlink" title="VScode连接Mysql配置过程中出现了出现错误："></a>VScode连接Mysql配置过程中出现了出现错误：</h2><blockquote><p>ER_NOT_SUPPORTED_AUTH_MODE: Client does not support authentication protocol requested by server; consider upgrading MySQL client</p></blockquote><p>解决办法：</p><ul><li>Step1： 打开MySQL Workbench，在已有连接上执行Query：</li><li>Step2：先执行如下代码，更新用户密码：<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">USER</span> <span class="token string">'root'</span><span class="token variable">@'localhost'</span> IDENTIFIED <span class="token keyword">WITH</span> mysql_native_password <span class="token keyword">BY</span> <span class="token string">'password'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>Step3：再执行如下代码，刷新权限表：<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">flush <span class="token keyword">privileges</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>Step4：succeess</li></ul>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> VScode </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>paddlepaddle</title>
      <link href="//2023/06/23/paddlepaddle/"/>
      <url>//2023/06/23/paddlepaddle/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h1><blockquote><p>我的版本：<br>cuda：11.7<br>cuDNN：8.8<br>paddlepaddle：2.4.2.post117<br><img src="/../image/Snipaste_2023-05-09_00-22-36.png"></p></blockquote><h2 id="cuda"><a href="#cuda" class="headerlink" title="cuda"></a>cuda</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="首先看看电脑有没有nvidia-geforce-experience-没有就去官网安装一下，下载地址"><a href="#首先看看电脑有没有nvidia-geforce-experience-没有就去官网安装一下，下载地址" class="headerlink" title="首先看看电脑有没有nvidia geforce experience,没有就去官网安装一下，下载地址"></a>首先看看电脑有没有nvidia geforce experience,没有就去官网安装一下，<a href="https://www.nvidia.cn/geforce/geforce-experience/">下载地址</a></h4><p><img src="/../image/Snipaste_2023-05-08_23-56-59.png"></p><h4 id="查看CUDA支持最高版本"><a href="#查看CUDA支持最高版本" class="headerlink" title="查看CUDA支持最高版本"></a>查看CUDA支持最高版本</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nvidia-smi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../image/Snipaste_2023-05-08_23-54-28.png"></p><p>点击<a href="https://developer.nvidia.cn/cuda-toolkit-archive">下载地址</a><br>选择合适版本<br><img src="/../image/Snipaste_2023-05-09_00-09-12.png"></p><p><img src="/../image/Snipaste_2023-05-09_00-08-38.png"></p><h2 id="测试cuda是否安装成功"><a href="#测试cuda是否安装成功" class="headerlink" title="测试cuda是否安装成功"></a>测试cuda是否安装成功</h2><p>切换到下图目录并打开cmd</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.7\extras\demo_suite<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../image/Snipaste_2023-05-08_23-50-49.png"></p><h2 id="CUDNN"><a href="#CUDNN" class="headerlink" title="CUDNN"></a>CUDNN</h2><p>点击<a href="https://developer.nvidia.cn/rdp/cudnn-archive">下载地址</a><br>选择你cuda版本所对应的版本<br>可能要登录注册一下<br><img src="/../image/Snipaste_2023-05-09_00-24-37.png"><br>解压后把这三个文件夹内容分别复制到<code>cuda</code>安装路径对应的文件夹中<br><img src="/../image/Snipaste_2023-05-09_00-26-13.png"><br><img src="/../image/Snipaste_2023-05-09_00-28-07.png"></p><h2 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h2><p><img src="/../image/Snipaste_2023-05-08_23-40-14.png"><br>测试一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nvcc <span class="token parameter variable">-V</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../image/Snipaste_2023-05-09_00-31-00.png"><br>出现上图说明成功了</p><h2 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h2><p>下面用<code>pip</code>安装<code>paddlepaddle</code></p><h3 id="第一种：直接全局环境安装"><a href="#第一种：直接全局环境安装" class="headerlink" title="第一种：直接全局环境安装"></a>第一种：直接全局环境安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-m</span> pip <span class="token function">install</span> paddlepaddle-gpu<span class="token operator">==</span><span class="token number">2.4</span>.2.post117 <span class="token parameter variable">-f</span> https://www.paddlepaddle.org.cn/whl/windows/mkl/avx/stable.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> paddlepaddle<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>run_check<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/../image/Snipaste_2023-05-08_23-59-40.png"></p><h3 id="第二种：虚拟环境安装"><a href="#第二种：虚拟环境安装" class="headerlink" title="第二种：虚拟环境安装"></a>第二种：虚拟环境安装</h3><h4 id="新建一个project"><a href="#新建一个project" class="headerlink" title="新建一个project"></a>新建一个project</h4><p><img src="/../image/Snipaste_2023-05-09_00-36-45.png"></p><h4 id="打开一个terminal"><a href="#打开一个terminal" class="headerlink" title="打开一个terminal"></a>打开一个terminal</h4><p>然后<br><img src="/../image/Snipaste_2023-05-09_00-37-50.png"><br>然后<br><img src="/../image/Snipaste_2023-05-09_00-39-02.png"><br>安装成功</p><h4 id="测试一下"><a href="#测试一下" class="headerlink" title="测试一下"></a>测试一下</h4><p><img src="/../image/Snipaste_2023-05-09_00-39-18.png"><br><img src="/../image/Snipaste_2023-05-09_00-40-01.png"><br>成功了</p>]]></content>
      
      
      <categories>
          
          <category> paddlepaddle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> paddlepaddle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Study</title>
      <link href="//2023/06/23/pythonStudy/"/>
      <url>//2023/06/23/pythonStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h2 id="Python-import导入上级目录文件"><a href="#Python-import导入上级目录文件" class="headerlink" title="Python-import导入上级目录文件"></a>Python-import导入上级目录文件</h2><p>假设有如下目录结构：</p><blockquote><p>– dir0<br>　　| file1.py<br>　　| file2.py<br>　　| dir3<br>　　　| file3.py<br>　　| dir4<br>　　　| file4.py</p></blockquote><p>dir0文件夹下有file1.py、file2.py两个文件和dir3、dir4两个子文件夹，dir3中有file3.py文件，dir4中有file4.py文件。</p><h3 id="1-导入同级模块"><a href="#1-导入同级模块" class="headerlink" title="1.导入同级模块"></a>1.导入同级模块</h3><p>python导入同级模块（在同一个文件夹中的py文件）直接导入即可。</p><blockquote><p>import xxx</p></blockquote><p>如在file1.py中想导入file2.py，注意无需加后缀”.py”;</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">import file2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用file2中函数时需加上前缀”file2.”，即：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">file2.fuction_name()<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-导入下级模块"><a href="#2-导入下级模块" class="headerlink" title="2.导入下级模块"></a>2.导入下级模块</h3><p>导入下级目录模块也很容易，需在下级目录中新建一个空白的__init__.py文件再导入：</p><p>from dirname import xxx<br>如在file1.py中想导入dir3下的file3.py，首先要在dir3中新建一个空白的__init__.py文件。</p><blockquote><p>– dir0<br>　　| file1.py<br>　　| file2.py<br>　　| dir3<br>　　　| <strong>init</strong>.py<br>　　　| file3.py<br>　　| dir4<br>　　　| file4.py</p></blockquote><p>再使用如下语句：</p><ul><li><p>plan A</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">from dir3 import file3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>plan B</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">import dir3.file3# import dir3.file3 as df3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>但使用第二种方式则下文需要一直带着路径dir3书写，较为累赘，建议可以另起一个别名。</p></li></ul><h3 id="3-导入上级模块"><a href="#3-导入上级模块" class="headerlink" title="3.导入上级模块"></a>3.导入上级模块</h3><p>要导入上级目录下模块，可以使用sys.path： 　</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">import syssys.path.append(&quot;..&quot;)import xxx　<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如：在file4.py中想引入import上级目录下的file1.py：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> syssys<span class="token punctuation">.</span>path<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">".."</span><span class="token punctuation">)</span><span class="token keyword">import</span> file1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>sys.path的作用：当使用import语句导入模块时，解释器会搜索当前模块所在目录以及sys.path指定的路径去找需要import的模块，所以这里是直接把上级目录加到了sys.path里。</p><p>“..”的含义：等同于linux里的’..’，表示当前工作目录的上级目录。实际上python中的’.’也和linux中一致，表示当前目录。</p><h3 id="4-导入隔壁文件夹下的模块"><a href="#4-导入隔壁文件夹下的模块" class="headerlink" title="4.导入隔壁文件夹下的模块"></a>4.导入隔壁文件夹下的模块</h3><p>如在file4.py中想引入import在dir3目录下的file3.py。</p><p>这其实是前面两个操作的组合，其思路本质上是将上级目录加到sys.path里，再按照对下级目录模块的方式导入。<br>同样需要被引文件夹也就是dir3下有空的__init__.py文件。</p><blockquote><p>– dir<br>　　| file1.py<br>　　| file2.py<br>　　| dir3<br>　　　| <strong>init</strong>.py<br>　　　| file3.py<br>　　| dir4<br>　　　| file4.py</p></blockquote><p>同时也要将上级目录加到sys.path里：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">import syssys.path.append(&quot;..&quot;)from dir3 import file3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="5-常见错误及import原理"><a href="#5-常见错误及import原理" class="headerlink" title="5.常见错误及import原理:"></a>5.常见错误及import原理:</h4><blockquote><p>在使用直接从上级目录引入模块的操作时：<br>from .. import xxx<br>经常会报错:<br>ValueError: attempted relative import beyond top-level package</p></blockquote><p>这是由于相对导入时，文件夹实质上充当的是package，也就是包的角色（比如我们常用的numpy、pandas都是包）。如果python解释器没有认同该文件夹是package，那么这就是一个普通的文件夹，无法实现相对导入。</p><p>文件夹作为package需要满足如下两个条件：</p><blockquote><ul><li><p>文件夹中必须存在有__init__.py文件，可以为空。</p></li><li><p>不能作为顶层模块来执行该文件夹中的py文件。</p></li></ul></blockquote><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><h2 id="UserWarning-loaded-more-than-1-DLL-from-libs"><a href="#UserWarning-loaded-more-than-1-DLL-from-libs" class="headerlink" title="UserWarning: loaded more than 1 DLL from .libs"></a>UserWarning: loaded more than 1 DLL from .libs</h2><p>出现这个报错说明在你安装新的软件，或者更新numpy或者干什么的时候，旧的numpy没有卸载掉，两版numpy导致出现冲突.</p><blockquote><p><strong>解决办法:</strong><br>1.进入cmd 卸载掉numpy：pip uninstall numpy<br>2.重新安装numpy：pip install numpy<br>3.此时若numpy不可用，查看.libs文件夹，删除掉其中的另一个dll文件，应该可用</p></blockquote><h2 id="在使用pip-install-jupyter命令安装jupyter后，然后在cmd终端中输入“jupyter-notebook”后，提示-jupyter-notebook-not-found"><a href="#在使用pip-install-jupyter命令安装jupyter后，然后在cmd终端中输入“jupyter-notebook”后，提示-jupyter-notebook-not-found" class="headerlink" title="在使用pip install jupyter命令安装jupyter后，然后在cmd终端中输入“jupyter notebook”后，提示'jupyter-notebook' not found"></a>在使用pip install jupyter命令安装jupyter后，然后在cmd终端中输入“jupyter notebook”后，提示<kbd>'jupyter-notebook' not found</kbd></h2><blockquote><p><strong>解决办法:</strong><br>添加环境变量<br><img src="/../image/Snipaste_2022-09-01_13-38-18.png"></p></blockquote><p><kbd>注：如不能解决见下一报错</kbd></p><h2 id="进入jupyter-notebook报错，显示-No-module-named-‘pysqlite2’"><a href="#进入jupyter-notebook报错，显示-No-module-named-‘pysqlite2’" class="headerlink" title="进入jupyter notebook报错，显示 No module named ‘pysqlite2’"></a>进入jupyter notebook报错，显示 No module named ‘pysqlite2’</h2><p>查看对应的sessionmanager.py文件的对应报错位置，发现只有当无法import sqlite3时才会执行该句，所以问题症结出现在缺失sqlite3插件。结合在命令行所看到的【DLL load failed:找不到指定的程序】，所以可能不是缺失sqlite3包，而是缺失sqlite3所需要的dll文件。</p><blockquote><p><strong>解决方法：</strong></p></blockquote><p>1、去sqlite3官网，根据自己的系统和位数（32位还是64位）下载对应的插件：<br>sqlite3官网地址：<a href="https://www.sqlite.org/download.html">https://www.sqlite.org/download.html</a><br><img src="/../image/Snipaste_2022-09-01_13-25-47.png"><br>如果是64位Windows系统，则上图三个中的第二个插件。<br>2、下载完后，解压缩，将文件复制到Anaconda的DLLs目录下即可；<br>3、测试是否解决问题<br>在命令行输入juputer notebook，成功运行，问题解决。</p><h1 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h1><h2 id="Anaconda-换国内源"><a href="#Anaconda-换国内源" class="headerlink" title="Anaconda 换国内源"></a>Anaconda 换国内源</h2><h3 id="清华源"><a href="#清华源" class="headerlink" title="清华源:"></a>清华源:</h3><blockquote><p>在cmd 命令行中，输入添加以下命令（前提是要安装了Anaconda包管理工具）<br>conda config –add channels <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/</a><br>conda config –add channels <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge</a><br>conda config –add channels <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</a><br>conda config –add channels <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/</a><br>conda config –add channels <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</a><br>conda config –set show_channel_urls yes</p></blockquote><h3 id="中科大源"><a href="#中科大源" class="headerlink" title="中科大源:"></a>中科大源:</h3><blockquote><p>与上述操作一样，在cmd命令行进行安装<br>conda config –add channels <a href="https://mirrors.ustc.edu.cn/anaconda/pkgs/main/">https://mirrors.ustc.edu.cn/anaconda/pkgs/main/</a><br>conda config –add channels <a href="https://mirrors.ustc.edu.cn/anaconda/pkgs/free/">https://mirrors.ustc.edu.cn/anaconda/pkgs/free/</a><br>conda config –add channels <a href="https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/">https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/</a><br>conda config –add channels <a href="https://mirrors.ustc.edu.cn/anaconda/cloud/msys2/">https://mirrors.ustc.edu.cn/anaconda/cloud/msys2/</a><br>conda config –add channels <a href="https://mirrors.ustc.edu.cn/anaconda/cloud/bioconda/">https://mirrors.ustc.edu.cn/anaconda/cloud/bioconda/</a><br>conda config –add channels <a href="https://mirrors.ustc.edu.cn/anaconda/cloud/menpo/">https://mirrors.ustc.edu.cn/anaconda/cloud/menpo/</a><br>conda config –set show_channel_urls yes</p></blockquote><h3 id="恢复默认源"><a href="#恢复默认源" class="headerlink" title="恢复默认源:"></a>恢复默认源:</h3><blockquote><p>在cmd命令行使用下列命令即可<br>conda config –remove-key channels</p></blockquote><h3 id="查看源"><a href="#查看源" class="headerlink" title="查看源:"></a>查看源:</h3><blockquote><p>conda config –show<br>查看channels,出现了上述添加的过程则证明换成功了。</p></blockquote><blockquote><p>一些问题 :<br>如果还是无法安装第三方库或者很慢，则观察自己的源是否为上述添加的源，如果还夹杂着别的源，先进行恢复默认源（上述操作），然后再进行添加国内源（上述操作）。</p></blockquote><h1 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h1><h2 id="升级所有包"><a href="#升级所有包" class="headerlink" title="升级所有包"></a>升级所有包</h2><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">import pkg_resourcesfrom subprocess import callfor packages in [dist.project_name for dist in pkg_resources.working_set]:    call(&quot;pip3 install --upgrade &quot; + &#39;&#39;.join(packages) + &#39; --user&#39;, shell&#x3D;True)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Jupyter-Notebook"><a href="#Jupyter-Notebook" class="headerlink" title="Jupyter Notebook"></a>Jupyter Notebook</h1>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> Python </tag>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spark Study</title>
      <link href="//2023/06/23/sparkStudy/"/>
      <url>//2023/06/23/sparkStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h1><h2 id="统计不同电影类型的数量"><a href="#统计不同电影类型的数量" class="headerlink" title="统计不同电影类型的数量"></a>统计不同电影类型的数量</h2><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span></span><span class="token punctuation">&#123;</span>SparkConf<span class="token punctuation">,</span> SparkContext<span class="token punctuation">&#125;</span><span class="token keyword">object</span> rdd <span class="token punctuation">&#123;</span>  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">val</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> SparkConf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setMaster<span class="token punctuation">(</span><span class="token string">"yarn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setAppName<span class="token punctuation">(</span><span class="token string">"movies"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> SparkContext<span class="token punctuation">(</span>conf<span class="token punctuation">)</span>    <span class="token keyword">val</span> textRDD <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">"hdfs://hadoop201:8020/input/movies.csv"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> header <span class="token operator">=</span> textRDD<span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> moviesRDD <span class="token operator">=</span> textRDD<span class="token punctuation">.</span>filter<span class="token punctuation">(</span><span class="token operator">!</span>_<span class="token punctuation">.</span>equals<span class="token punctuation">(</span>header<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//过滤头部</span>    moviesRDD<span class="token punctuation">.</span>cache<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> total_films_count <span class="token operator">=</span> moviesRDD<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span>    println<span class="token punctuation">(</span><span class="token string">"电影总数:"</span><span class="token operator">+</span>total_films_count<span class="token punctuation">)</span>    <span class="token keyword">val</span> movies_genre_count <span class="token operator">=</span> moviesRDD<span class="token punctuation">.</span>flatMap<span class="token punctuation">(</span>line<span class="token keyword">=></span><span class="token punctuation">&#123;</span>      line<span class="token punctuation">.</span>substring<span class="token punctuation">(</span>line<span class="token punctuation">.</span>lastIndexOf<span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"\\|"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>reduceByKey<span class="token punctuation">(</span>_ <span class="token operator">+</span> _<span class="token punctuation">)</span><span class="token punctuation">.</span>collect<span class="token punctuation">(</span><span class="token punctuation">)</span>    movies_genre_count<span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="统计评分最高的电影"><a href="#统计评分最高的电影" class="headerlink" title="统计评分最高的电影"></a>统计评分最高的电影</h2><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token keyword">package</span> <span class="token namespace">cn<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>jit<span class="token punctuation">.</span>spark</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>SparkSession<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>types<span class="token punctuation">.</span></span><span class="token punctuation">&#123;</span>DataTypes<span class="token punctuation">,</span> StructType<span class="token punctuation">&#125;</span><span class="token keyword">object</span> sparksqldemo <span class="token punctuation">&#123;</span>  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">val</span> spark <span class="token operator">=</span> SparkSession      <span class="token punctuation">.</span>builder<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>master<span class="token punctuation">(</span><span class="token string">"yarn"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>appName<span class="token punctuation">(</span><span class="token string">"movies"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>getOrCreate<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> rating_schema <span class="token operator">=</span> <span class="token keyword">new</span> StructType<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"userId"</span><span class="token punctuation">,</span> DataTypes<span class="token punctuation">.</span>IntegerType<span class="token punctuation">)</span>      <span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"movieId"</span><span class="token punctuation">,</span>DataTypes<span class="token punctuation">.</span>IntegerType<span class="token punctuation">)</span>      <span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"rating"</span><span class="token punctuation">,</span>DataTypes<span class="token punctuation">.</span>FloatType<span class="token punctuation">)</span>      <span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"timestamp"</span><span class="token punctuation">,</span> DataTypes<span class="token punctuation">.</span>LongType<span class="token punctuation">)</span>    <span class="token keyword">val</span> movie_schema <span class="token operator">=</span> <span class="token keyword">new</span> StructType<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"movieId"</span><span class="token punctuation">,</span>DataTypes<span class="token punctuation">.</span>IntegerType<span class="token punctuation">)</span>      <span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">,</span>DataTypes<span class="token punctuation">.</span>StringType<span class="token punctuation">)</span>      <span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"genre"</span><span class="token punctuation">,</span>DataTypes<span class="token punctuation">.</span>StringType<span class="token punctuation">)</span>    <span class="token keyword">val</span> moviesDF <span class="token operator">=</span> spark<span class="token punctuation">.</span>read      <span class="token punctuation">.</span>option<span class="token punctuation">(</span><span class="token string">"header"</span><span class="token punctuation">,</span><span class="token string">"true"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>schema<span class="token punctuation">(</span>movie_schema<span class="token punctuation">)</span>      <span class="token punctuation">.</span>csv<span class="token punctuation">(</span><span class="token string">"hdfs://hadoop201:8020/input/movies.csv"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> ratingsDF <span class="token operator">=</span> spark<span class="token punctuation">.</span>read      <span class="token punctuation">.</span>option<span class="token punctuation">(</span><span class="token string">"header"</span><span class="token punctuation">,</span><span class="token string">"true"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>schema<span class="token punctuation">(</span>rating_schema<span class="token punctuation">)</span>      <span class="token punctuation">.</span>csv<span class="token punctuation">(</span><span class="token string">"hdfs://hadoop201:8020/input/ratings.csv"</span><span class="token punctuation">)</span>    <span class="token comment">// 找平均评分最高的10部电影 id 电影名 评分 要求评分人次大于1000一次</span>    ratingsDF<span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"ratings"</span><span class="token punctuation">)</span>    moviesDF<span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"movies"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> top10 <span class="token operator">=</span> spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |SELECT        |r.movieId,m.title,avg(rating) avg_rating,count(*) rating_cnt        |FROM ratings r JOIN movies m ON r.movieId = m.movieId        |GROUP BY r.movieId, m.title        |HAVING rating_cnt >= 1000        |ORDER BY avg_rating DESC        |limit 10        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span>   top10<span class="token punctuation">.</span>show<span class="token punctuation">(</span>truncate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment">/*这段代码是在使用Apache Spark SQL执行一条SQL查询语句，将结果存储在DataFrame对象top10中，并以表格形式打印出来。具体解释如下：- `spark.sql`是SparkSession上的一个方法，用于执行给定的SQL查询。- 该查询包含4个列：movieId、title、avg_rating和rating_cnt，其中，movieId和title分别来自movies表和ratings表，avg_rating表示每部电影的平均评分，rating_cnt表示评分次数。- `JOIN`关键字用于将ratings表和movies表连接起来，其条件为它们的movieId相等。- `GROUP BY`子句指示Spark对每个电影进行分组聚合操作，计算每部电影的平均评分和评分次数。- `HAVING rating_cnt >= 1000`子句用于过滤掉评分次数少于1000次的电影。- `ORDER BY avg_rating DESC`子句用于按照平均评分从高到低排序。- `limit 10`子句限制结果集大小为10，只返回平均评分最高的前10部电影的信息。- `top10.show(truncate = false)`方法用于以表格形式打印DataFrame top10中的结果，truncate参数设置为false表示不截取单元格中显示的内容，以便完全呈现所有结果。*/</span>    <span class="token keyword">val</span> top_cnt <span class="token operator">=</span>  spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |SELECT        |m.movieId,m.title,avg(r.rating) avg_rating,count(*) total_cnt        |FROM ratings r JOIN movies m on r.movieId = m.movieId        |GROUP BY m.movieId,m.title        |ORDER BY total_cnt DESC        |LIMIT 10        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span>    top_cnt<span class="token punctuation">.</span>show<span class="token punctuation">(</span>truncate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment">/*这段代码是在使用Apache Spark SQL执行一条SQL查询语句，将结果存储在DataFrame对象top_cnt中，然后以表格形式打印出来。具体解释如下：- `spark.sql`是SparkSession上的一个方法，用于执行给定的SQL查询。- SQL查询包含4个列：movieId、title、avg_rating和total_cnt。其中，movieId和title列来自movies表，avg_rating和total_cnt列来自ratings表。该查询的目的是计算每个电影的平均评分和评分次数（即记录总数），并仅返回评分次数最高的前10个电影。- `JOIN`关键字用于将两个表连接起来，其条件为ratings表的movieId与movies表的movieId相等。- GROUP BY子句指示Spark按照movieId和title进行聚合操作，并对每个聚合组计算其平均评分和评分次数。 - `ORDER BY total_cnt DESC`子句按total_cnt列进行降序排序，以便将电影按照评分次数从高到低排列。- `LIMIT 10`子句限制结果集的大小为10，只返回评分次数最高的10部电影的信息。- `top_cnt.show(truncate = false)`方法用于打印DataFrame top_cnt中的结果，truncate参数设置为false表示不截取单元格中显示的内容，以便完全呈现所有结果。*/</span>    spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |SELECT        |m.movieId,m.title,substring(substring(title,-6),2,4) movie_year,        |avg(r.rating) avg_rating,count(*) total_cnt        |FROM ratings r JOIN movies m ON r.movieId = m.movieId        |GROUP BY m.movieId,m.title,movie_year        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span><span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"t1"</span><span class="token punctuation">)</span><span class="token comment">/*这段代码是在使用Apache Spark SQL执行一条SQL查询语句并将结果存储在一个Spark临时视图中，具体解释如下：- `spark.sql`是SparkSession上的一个方法，用于执行给定的SQL查询。- SQL查询包含5个列：movieId、title、movie_year、avg_rating和total_cnt。其中，movieId、title、avg_rating和total_cnt的含义与上一段代码中的相同，movie_year则是通过对title列进行处理得到的电影年份信息。- `substring(substring(title,-6), 2, 4)`函数用于从title列中抽取出电影年份信息，具体来说，该函数连续调用了两次substring函数：   - 第一次substring函数将title列的后6个字符（即电影名中括号内的4位年份数字和后面的"）"字符）抽取出来。   - 第二次substring函数则从第一步得到的字符串中，从第2个字符开始抽取4个字符，即抽取年份数字部分。- `JOIN`、`GROUP BY`和`ORDER BY`的含义与上一段代码中的相同，只是在GROUP BY子句中增加了对movie_year列的聚合操作。- `createOrReplaceTempView("t1")`将查询结果存储在一个名为"t1"的Spark临时视图中，以便后续对该结果进行进一步处理和分析。注意，该方法不返回任何数据，仅负责将查询结果与一个临时视图相关联。*/</span>    spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |SELECT        |SUM(CASE movie_year WHEN 201 THEN 1 ELSE 0 END) YEAR10S,        |SUM(CASE movie_year WHEN 200 THEN 1 ELSE 0 END) YEAR00S,        |SUM(CASE movie_year WHEN 199 THEN 1 ELSE 0 END) YEAR90S        |        |FROM t1        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span><span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">/*这段代码是在使用Apache Spark SQL执行一条SQL查询语句，并将对临时视图"t1"中数据进行进一步聚合和分析。具体解释如下：- `spark.sql`是SparkSession上的一个方法，用于执行给定的SQL查询。- SQL查询包含3个列：YEAR10S、YEAR00S和YEAR90S，这些列是由三组`SUM(CASE ...)`语句计算出来的，表示电影年份为201x、200x和199x的电影总数。  - `CASE ... WHEN ... THEN ... ELSE ... END`语句是一个条件表达式，用于根据movie_year列的值选择相应的路径，可以理解为IF-THEN-ELSE逻辑判断的简化版：    - 当movie_year=201时，显式返回数字1。    - 否则，返回数字0。  - 将该条件表达式作为SUM函数的参数，即可实现对movie_year为某个特定值的电影数进行统计汇总的功能。  - Sql查询不允许select语句￥￥现未在group by字句或聚合函数中的列, movie_year格式存在问题, 不符合算术运算, 所以需要对year号进行case操作.- `FROM t1`指示Spark从名为"t1"的临时视图中获取数据，然后对其进行聚合操作。- 最终输出结果通过`show()`函数打印。注意，这段代码的执行依赖于之前定义的临时视图"t1"，该视图中存储了关于电影的信息，其中包括每部电影的标题、平均评分和发行年份（已转换为3位数字）。如果在执行本段代码之前未建立该视图，则会导致运行时错误。*/</span>    spark<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="高难度挑战"><a href="#高难度挑战" class="headerlink" title="高难度挑战"></a>高难度挑战</h2><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token keyword">package</span> <span class="token namespace">jit</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>SparkSession<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span></span><span class="token punctuation">&#123;</span>SparkConf<span class="token punctuation">,</span> SparkContext<span class="token punctuation">&#125;</span><span class="token keyword">object</span> UserReviewsByGenre <span class="token punctuation">&#123;</span>  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    System<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"D:/Libs/hadoop-3.2.4/bin/hadoop.dll"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> spark <span class="token operator">=</span> SparkSession<span class="token punctuation">.</span>builder      <span class="token punctuation">.</span>appName<span class="token punctuation">(</span><span class="token string">"ML"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>master<span class="token punctuation">(</span><span class="token string">"local[*]"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>getOrCreate<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">import</span> <span class="token namespace">spark<span class="token punctuation">.</span>implicits<span class="token punctuation">.</span></span>_    <span class="token keyword">val</span> ratingsDF <span class="token operator">=</span> spark<span class="token punctuation">.</span>read      <span class="token punctuation">.</span>option<span class="token punctuation">(</span><span class="token string">"header"</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>option<span class="token punctuation">(</span><span class="token string">"inferSchema"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>csv<span class="token punctuation">(</span><span class="token string">"file:///D:/Data/ml-latest/ratings.csv"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> moviesDF <span class="token operator">=</span> spark<span class="token punctuation">.</span>read      <span class="token punctuation">.</span>option<span class="token punctuation">(</span><span class="token string">"header"</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>option<span class="token punctuation">(</span><span class="token string">"inferSchema"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>csv<span class="token punctuation">(</span><span class="token string">"file:///D:/Data/ml-latest/movies.csv"</span><span class="token punctuation">)</span>    ratingsDF<span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"ratings"</span><span class="token punctuation">)</span>    moviesDF<span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"movies"</span><span class="token punctuation">)</span>    println<span class="token punctuation">(</span><span class="token string">"总数:"</span><span class="token punctuation">,</span>ratingsDF<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">"userId"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>distinct<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> validate_users <span class="token operator">=</span> spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |SELECT userId, COUNT(*) as total_count        |FROM ratings        |WHERE rating IN (1, 5)        |GROUP BY userId        |HAVING COUNT(*) > SUM(CASE WHEN rating IN (1, 5) THEN 1 ELSE 0 END) AND COUNT(*) > 10        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span>    validate_users<span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"validate_users"</span><span class="token punctuation">)</span><span class="token comment">/*这是一个Spark SQL查询语句，用于验证用户是否为“不良评分者”。具体来说，它会在名为“ratings”的表中查找将评分设置为1或5的所有评分，并根据每个用户对这些评分的数量进行分组和统计。然后，对于每个用户，该查询将比较他们所有的评分总数与只包含1或5评分的数量之和。如果前者大于后者且评分总数超过10，则该用户被认为是“不良评分者”。最终，查询将返回所有符合条件的用户的ID和对应的评分数量，存储在名为“validate_users”的变量中。*/</span>    <span class="token keyword">val</span> user_ratings_category_df <span class="token operator">=</span> spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |SELECT        |   userId,        |    SUM(CASE WHEN genres LIKE '%Action%' THEN 1 ELSE 0 END) AS Action,        |    SUM(CASE WHEN genres LIKE '%Adventure%' THEN 1 ELSE 0 END) AS Adventure,        |    SUM(CASE WHEN genres LIKE '%Animation%' THEN 1 ELSE 0 END) AS Animation,        |    SUM(CASE WHEN genres LIKE '%Children%' THEN 1 ELSE 0 END) AS Children,        |    SUM(CASE WHEN genres LIKE '%Comedy%' THEN 1 ELSE 0 END) AS Comedy,        |    SUM(CASE WHEN genres LIKE '%Crime%' THEN 1 ELSE 0 END) AS Crime,        |    SUM(CASE WHEN genres LIKE '%Documentary%' THEN 1 ELSE 0 END) AS Documentary,        |    SUM(CASE WHEN genres LIKE '%Drama%' THEN 1 ELSE 0 END) AS Drama,        |    SUM(CASE WHEN genres LIKE '%Fantasy%' THEN 1 ELSE 0 END) AS Fantasy,        |    SUM(CASE WHEN genres LIKE '%Film-Noir%' THEN 1 ELSE 0 END) AS FilmNoir,        |    SUM(CASE WHEN genres LIKE '%Horror%' THEN 1 ELSE 0 END) AS Horror,        |    SUM(CASE WHEN genres LIKE '%Musical%' THEN 1 ELSE 0 END) AS Musical,        |    SUM(CASE WHEN genres LIKE '%Mystery%' THEN 1 ELSE 0 END) AS Mystery,        |    SUM(CASE WHEN genres LIKE '%Romance%' THEN 1 ELSE 0 END) AS Romance,        |    SUM(CASE WHEN genres LIKE '%Sci-Fi%' THEN 1 ELSE 0 END) AS SciFi,        |    SUM(CASE WHEN genres LIKE '%Thriller%' THEN 1 ELSE 0 END) AS Thriller,        |    SUM(CASE WHEN genres LIKE '%War%' THEN 1 ELSE 0 END) AS War,        |    SUM(CASE WHEN genres LIKE '%Western%' THEN 1 ELSE 0 END) AS Western        |FROM (        |  SELECT explode(split(genres, "\\|")) AS genre, *        |  FROM ratings r JOIN movies m ON r.movieId = m.movieId        |) t        |GROUP BY userId        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span>    user_ratings_category_df<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">/*这是一段 Scala 代码，用于使用 Apache Spark 计算用户对电影不同类型的评分总数。以下是代码的主要步骤：1. 从 ratings 和 movies 表中选择电影和其评分信息2. 按 | 分隔 genres 列并展开，以将一个电影的不同 genre 序列化为多个行。3. 对所有的展开后的行按 userId 进行分组，并计算每个人给每个 genre 类型的电影的评分总数。具体来说，代码使用了 Spark SQL 中的 API，主要实现步骤如下：1.``SELECT`` 部分：对 userId 进行聚合，并使用``CASE WHEN`` 函数计算每种电影 genre 的评分总数。2. 子查询块 ``FROM``：在电影和其评分表格"ratings"和"movies"之间执行一个内部联接操作``, JOIN movies m ON r.movieId = m.movieId``，连接条件是电影 ID。3. 使用``explode()``函数拆分``genres``栏，生成新的列``genre``，包含展开的单个分类。4. 聚合结果：将同一用户和所有 genre 的评分汇总在一起``GROUP BY userId`` ，统计总节数量（通过求和聚合函数）最终结果将是一个 DataFrame，它显示了每个用户对每种电影类型的评分总数。*/</span>         spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |SELECT m.title, AVG(r.rating) AS avg_rating, VARIANCE(r.rating) AS rating_variance        |FROM ratings r JOIN movies m ON r.movieId = m.movieId        |GROUP BY m.title        |HAVING COUNT(r.userId) > 100        |ORDER BY rating_variance DESC        |LIMIT 10;        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span><span class="token punctuation">.</span>show<span class="token punctuation">(</span>truncate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment">/*这是一个Spark SQL查询语句，用于计算电影评分的平均值和方差。以下是该查询语句的解释：- 通过将评分r和电影m连接在一起，使用JOIN指令来联结ratings表和movies表。使用ON指令来指定电影ID匹配。- 使用GROUP BY指令将结果按电影标题进行分组。- 利用AVG聚合函数计算每个电影的平均评分，并利用VARIANCE聚合函数计算每个电影评分的方差。- COUNT函数用于过滤只有小于等于100人评分的电影；HAVING子句筛选掉低于100的电影数量- 对电影按照评分方差降序排列，并用LIMIT限制结果集为前10项。通过使用.show(truncate = false)，输出结果显示时不截断行。*/</span>    spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |SELECT m.title,        |       COUNT(r.rating) AS num_ratings,        |       SUM(CASE WHEN r.rating = 1 THEN 1 ELSE 0 END) AS num_1_ratings,        |       SUM(CASE WHEN r.rating = 2 THEN 1 ELSE 0 END) AS num_2_ratings,        |       SUM(CASE WHEN r.rating = 3 THEN 1 ELSE 0 END) AS num_3_ratings,        |       SUM(CASE WHEN r.rating = 4 THEN 1 ELSE 0 END) AS num_4_ratings,        |       SUM(CASE WHEN r.rating = 5 THEN 1 ELSE 0 END) AS num_5_ratings,        |       AVG(r.rating) AS avg_rating,        |       SQRT(SUM(POWER(r.rating - t.avg_rating, 2)) / COUNT(r.rating)) AS std_dev        |FROM ratings r        |JOIN movies m ON r.movieId = m.movieId        |JOIN (SELECT movieId, AVG(rating) AS avg_rating        |      FROM ratings        |      GROUP BY movieId        |      HAVING COUNT(rating) >= 100) t        |ON r.movieId = t.movieId        |GROUP BY m.title        |ORDER BY std_dev DESC        |LIMIT 10;        |        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span><span class="token punctuation">.</span>show<span class="token punctuation">(</span>truncate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment">/*这是一个Spark SQL查询语句。其目的是分析电影评分数据集中每部电影的平均评分，以及评分标准差和各个评分等级所占的比例。具体来说，这个查询将评分数据集ratings和电影数据集movies进行了JOIN操作，并对评分数据进行聚合分析，得到了每部电影的平均评分、评分标准差、不同评分等级对应的评分人数。最后，按照评分标准差倒序排序，并显示前10条记录。具体解释如下：首先选取电影名m.title作为输出结果的列，并定义除此之外还有8个计算列，分别是num_ratings、num_1_ratings、num_2_ratings、num_3_ratings、num_4_ratings、num_5_ratings、avg_rating和std_dev。其中，num_ratings表示某一电影的评分数量，num_i_ratings表示给该电影打了 i 分的评分数量，而avg_rating则是该电影的平均评分。这段代码的核心在于通过计算标准差std_dev来度量电影的评分分布。具体来说，std_dev等于所有评分离平均值的偏差平方和的平均数，再开方得到的结果。也就是公式中的sqrt( Σ(rating - avg_rating)^2 / count(rating) )。这里采用了一个子查询t，用来计算每个电影的平均评分avg_rating。注意，这里只选择评分记录数大于等于100次的电影进行计算，即HAVING COUNT(rating) >= 100。最后，按照std_dev从大到小排序，输出前10个电影的结果，其中truncate=false表示不要截断输出结果。*/</span>    spark<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> spark </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> spark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法作业</title>
      <link href="//2023/06/23/suanFaZuoYe/"/>
      <url>//2023/06/23/suanFaZuoYe/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="理论题"><a href="#理论题" class="headerlink" title="理论题"></a>理论题</h1><h2 id="1-题型与分值分布："><a href="#1-题型与分值分布：" class="headerlink" title="1.题型与分值分布："></a>1.题型与分值分布：</h2><p>一、填空题： 本题10空，每空1分，共10分 二、单选题：本题共10小题，每题2分，共20分 三、判断题：本题共10小题，每小题1分，共10分 四、简答题：本题6小题，每题5分，共30分 五、编程题：本题3小题，每题10分，共30分</p><h2 id="2-复习要点"><a href="#2-复习要点" class="headerlink" title="2.复习要点"></a>2.复习要点</h2><h3 id="1-算法的定义"><a href="#1-算法的定义" class="headerlink" title="1.算法的定义"></a>1.算法的定义</h3><p>算法(algorithm)是指在解决问题时,按照某种机械步骤一定可以得到问题结果(有解时给出问题的解,无解时给出无解的结论)的处理过程。当面临某个问题时,需要找到用计算机解决这个问题的方法和步骤,算法就是对解决这个问题的方法和步骤的描述 。</p><p>所谓机械步骤是指,算法中有待执行的运算和操作必须是相当基本的换言之,它们都是能够精确地被计算机运行的算法 ,执行者(计算机)甚至不需要掌握算法的含义,即可根据该算法的每一步骤要求 ,进行操作并最终得出正确的结果 。</p><h3 id="2-算法具有的特性"><a href="#2-算法具有的特性" class="headerlink" title="2.算法具有的特性"></a>2.算法具有的特性</h3><p>算法必须满足以下5个重要特性: (1)有穷性。一个算法在地行有穷步之化必须结束 , 也就是说 一 个算法它所包含 的计算步骤是有限的 ,即算法中的每个步骤都能在有限时间内完成 。 (2)确定性。对于每种情况下所应地行的操作,在算法中都有确切的规定 , 使算 法的地行者或阅读者都能明确其含义及如何地行 。并且在任何条件下 , 算法都只有 一 条地行路径 。 (3)可行性。算法中描述的操作都可以通过已经实现的基本操作运算有限次的实现 。 (4)算法有零个或多个的输人。有输人作为算法加工对象的数据,通常体现为算 法中的一组变量。有些输人量需要在算法地行过程中输人,而有的算法表面上可以没有输人,实际上输人已被嵌人算法之中。 (5)算法有一个或多个的输出。输出是一组与输人有确定关系的量值,是算法进 行信息加工化得到的结果。</p><h3 id="3-算法设计和分析的步骤"><a href="#3-算法设计和分析的步骤" class="headerlink" title="3.算法设计和分析的步骤"></a>3.算法设计和分析的步骤</h3><p>第一步”问题分析”：对问题进行认真分析后，确认问题中数据的逻辑结构和问题的基本功能，并在数学、物理等与问题领域相关知识的基础上建立数学建模。</p><p>第二步”算法设计”：找出解决问题的处理步骤。</p><p>第三步”算法分析”：对数学模型的建立、数据结构的选择及算法设计工作的评价、总结。</p><h3 id="4-回溯算法的定义"><a href="#4-回溯算法的定义" class="headerlink" title="4.回溯算法的定义"></a>4.回溯算法的定义</h3><p>回溯算法是一种组织搜索的一般技术，有”通用的解题法”之称，用它可以系统地搜索一个问题的所有解或任一解。</p><h3 id="5-贪心算法的定义"><a href="#5-贪心算法的定义" class="headerlink" title="5.贪心算法的定义"></a>5.贪心算法的定义</h3><p>贪心法 (GredyAlogorithm)又叫贪婪逢法 、登山算法 ,它的根本思想是逐步到达山顶 , 即逐步获得最优解 ,是解决最优化问题时的一种简单但适用范围有限的策略 。</p><p>贪心算法是一种对某些求最优解问题的最简单、最迅速的设计技术某些问题的 最优解可以通过一系列局部最优的选择即贪心选择来达到。根据当前状态做出的当前 看来是最好的选择,即局部最优解选择 , 然后再去解做出这个选择后产生的相应的子问题。每做一次贪心选择就将所求问题简化为一个规模更小的子问题,最终可得到问题的一个整体最优解。这种局部最优选择并不总能获得整体最优解,但通常能获得近似最优解 。 贪心算法，又名贪婪法，是寻找最优解问题的常用方法，这种方法模式一般将求解过程分成 若干个步骤，但每个步骤都应用贪心原则，选取当前状态下最好&#x2F;最优的选择（局部最有利的选择），并以此希望最后堆叠出的结果也是最好&#x2F;最优的解。</p><h3 id="6-贪心算法的基本特征有哪些？"><a href="#6-贪心算法的基本特征有哪些？" class="headerlink" title="6.贪心算法的基本特征有哪些？"></a>6.贪心算法的基本特征有哪些？</h3><p>贪心算法的特征:</p><p>①最优子结构性质,即当一个问题的最优解包含其子问题的最优解时 ,称此问题具有最优子结构性质,也称此问题满足最优性原理 。</p><p>②贪心选择性质,是指问题的整体最优解可以通过一系列局部最优的选择,即贪 心选择来得到。注意:动态规划法通常以自底向上的方式求解各个子问题, 而贪心法 则通常以 自顶向下的方式做出一系列的贪心选择。</p><h3 id="7-动态规划算法的定义"><a href="#7-动态规划算法的定义" class="headerlink" title="7.动态规划算法的定义"></a>7.动态规划算法的定义</h3><p>动态规划通常用于求解具有某种最优性质的问题。先将待求解问题分解成若干个子问题，先求解子问题，然后从这些子问题的解得到原问题的解。</p><h3 id="8-最优子结构的定义"><a href="#8-最优子结构的定义" class="headerlink" title="8.最优子结构的定义"></a>8.最优子结构的定义</h3><p>问题的最优解包含其子问题的最优解</p><h3 id="9-算法的有穷性是指什么"><a href="#9-算法的有穷性是指什么" class="headerlink" title="9.算法的有穷性是指什么"></a>9.算法的有穷性是指什么</h3><p>一个算法在地行有穷步之化必须结束,也就是说一个算法它所包含的计算步骤是有限的,即算法中的每个步骤都能在有限时间内完成。</p><h3 id="10-背包问题的贪心算法所需的计算时间是多少"><a href="#10-背包问题的贪心算法所需的计算时间是多少" class="headerlink" title="10.背包问题的贪心算法所需的计算时间是多少"></a>10.背包问题的贪心算法所需的计算时间是多少</h3><p>O(nlogn)</p><h3 id="11-贪心算法与动态规划算法的主要区别是什么"><a href="#11-贪心算法与动态规划算法的主要区别是什么" class="headerlink" title="11.贪心算法与动态规划算法的主要区别是什么"></a>11.贪心算法与动态规划算法的主要区别是什么</h3><p>动态规划算法中，每步所做的选择往往依赖于相关子问题的解，因而只有在解出相关子问题时才能做出选择。而贪心算法，仅在当前状态下做出最好选择，即局部最优选择，然后再去解做出这个选择后产生的相应的子问题。 动态规划算法通常以自底向上的方式解各子问题，而贪心算法则通常自顶向下的方式进行。</p><h3 id="12-以深度优先方式系统搜索问题解的算法称为什么"><a href="#12-以深度优先方式系统搜索问题解的算法称为什么" class="headerlink" title="12.以深度优先方式系统搜索问题解的算法称为什么"></a>12.以深度优先方式系统搜索问题解的算法称为什么</h3><p>回溯法</p><h3 id="13-二分法所能解决的问题一般具有哪些特征？"><a href="#13-二分法所能解决的问题一般具有哪些特征？" class="headerlink" title="13.二分法所能解决的问题一般具有哪些特征？"></a>13.二分法所能解决的问题一般具有哪些特征？</h3><p>不同于现实中对问题(或工作)的分解 ,需要考虑问题(或工作)的重点、难点 、承担人员的能力等来进行问题的分解和分配。在算法设计中每次一个问题分解成的子问题个数一般是固定的 ,每个子问题的规模也是平均分配的。当每次都将问题分解为原问题规模的一半时 ,称为二分法 。 二分法是分治法较常用的分解策略 ,数据结构课程中的折半查找 、归并排序等算法都是采用此策略实现的 。</p><p>分治法所能解决的问题一般具有以下几个特征： 1.可缩性。问题的规模缩小到一定的程度就可以容易地解决； 2.最有子结构性。问题可以分解为若干个规模较小的相同问题； 3.可合性。利用该问题分解出的子问题的解可以合并为该问题的解； 4.独立性。该问题所分解出的各个子问题是相互独立的，即子问 题之间不包含公共的子子问题。</p><h3 id="14-贪心算法的基本要素是什么"><a href="#14-贪心算法的基本要素是什么" class="headerlink" title="14.贪心算法的基本要素是什么"></a>14.贪心算法的基本要素是什么</h3><p>最优子结构性质、贪心选择性质</p><h3 id="15-可用动态规划算法或贪心算法求解的关键特征是什么"><a href="#15-可用动态规划算法或贪心算法求解的关键特征是什么" class="headerlink" title="15.可用动态规划算法或贪心算法求解的关键特征是什么"></a>15.可用动态规划算法或贪心算法求解的关键特征是什么</h3><p>当一个问题具有最优子结构性质时，可用动态规划法求解</p><h3 id="16-算法的三种基本结构是什么"><a href="#16-算法的三种基本结构是什么" class="headerlink" title="16.算法的三种基本结构是什么"></a>16.算法的三种基本结构是什么</h3><p>算法由操作、控制结构、数据结构3要素组成 。<br>(1)操作。算法实现平台尽管有许多种类,它们的函数库、类库也有较大差异,但必须具备的最基本的操作功能是相同的。这些操作包括以下几个方面 。<br>①算术运算:加、减、乘、除 。<br>②关系比较: 大于、小于、等于、不等于 。<br>③逻辑运算: 与、或、非 。<br>④数据传送:输人、输出(计算)、赋值(计算)。<br>(2)算法的控制结构 。一个算法功能的实现不仅取决于所选用的操作,还取决于 各操作之间的执行顺序,即控制结构。算法的控制结构给出了算法的框架,决定了各操作的执行次序。这些结构包括以下几个方面 。<br>①顺序结构:各操作是依次执行的 。<br>②选择结构:由条件是否成立来决定是否执行 。<br>③循环结构:有些操作要重复执行,直到满足某个条件时才结束,这种控制结构也称为重复或迭代结构 。<br>④本书认为模块间的调用也是一种控制结构 , 特别是模块自身的直接或间接调用 是递归结构 ,是一种功能很强的控制重复的结构 。 (3)数据结构。算法操作的对象是数据,数据间的逻辑关系、数据的存储方式及 处理方式就是数据的数据结构。它与算法设计是紧密相关的 。</p><h3 id="17-衡量一个算法好坏的标准是什么"><a href="#17-衡量一个算法好坏的标准是什么" class="headerlink" title="17.衡量一个算法好坏的标准是什么"></a>17.衡量一个算法好坏的标准是什么</h3><p>时间复杂度、空间复杂度</p><h3 id="18-分治法的基本思想和基本步骤是哪些"><a href="#18-分治法的基本思想和基本步骤是哪些" class="headerlink" title="18.分治法的基本思想和基本步骤是哪些"></a>18.分治法的基本思想和基本步骤是哪些</h3><p>分治法求解问题的过程是,将整个问题分解成若干个小问题后再分而治之。如果分解得到的子问题相对来说还太大,则可反复使用分治策略将这些子问题分成更小的 同类型子问题 ,直至产生出方便求解的子问题 ,必要时逐步合并这些子问题的解 ,从而得到问题的解 。 由算法思路可知 ,分治法求解很自然地可以用一个递归过程来表示。可以这样说,分治法就是一种找大规模问题与小规模问题关系的方法,是递归设计方法的一种具体策略。分治法在每一层递归上都有 3个步骤 。 (1)分解:将原问题分解为若干个规模较小,相互独立 ,与原问题形式相同的子问题; (2)解决:若子问题规模较小而容易被解决则直接解,否则再继续分解为更小的子问题 ,直到容易解决; (3)合并:将已求解的各个子问题的解 ,逐步合并为原问题的解 。 多数问题需要所有子问题的解 ,并由子问题的解 ,使用恰当的方法合并成为整个问题的解 ,例如合并排序 ,就是不断将子问题中已排好序的子问题的解合并成较大规模的有序子集 。</p><h3 id="19-什么是分治法，其思想和步骤包括哪些，其所能解决的问题具有哪些特征"><a href="#19-什么是分治法，其思想和步骤包括哪些，其所能解决的问题具有哪些特征" class="headerlink" title="19.什么是分治法，其思想和步骤包括哪些，其所能解决的问题具有哪些特征"></a>19.什么是分治法，其思想和步骤包括哪些，其所能解决的问题具有哪些特征</h3><p>分治法就是一种找大规模问题与小规模问题关系的方法,是递归设计方法的一种具体策略。 当求解一个输人规模为n且取值又相当大的问题时,用蛮力策略效率一般得不到 保证。若问题能满足以下几个条件 ,就能用分治法来提高解决问题的效率 。 (1) 能将这n个数据分解成k个不同子集合 ,且得到的k个子集合是可以独立求解 的子问题 ,其中 1&lt;k≤n。 (2) 分解所得到的子问题与原问题具有相似的结构 ,便于利用递归或循环机制 。 (3) 在求出这些子问题的解之后 ,就可以推解出原问题的解 。</p><h3 id="20-生活中常见的算法设计策略有哪些"><a href="#20-生活中常见的算法设计策略有哪些" class="headerlink" title="20.生活中常见的算法设计策略有哪些"></a>20.生活中常见的算法设计策略有哪些</h3><p>分治、动态规划、贪心、回溯、分支界限</p><h3 id="21-算法分析的两个主要方面是是什么"><a href="#21-算法分析的两个主要方面是是什么" class="headerlink" title="21.算法分析的两个主要方面是是什么"></a>21.算法分析的两个主要方面是是什么</h3><p>空间复杂度、时间复杂度</p><h3 id="22-百钱买百鸡问题常采用什么算法实现。"><a href="#22-百钱买百鸡问题常采用什么算法实现。" class="headerlink" title="22.百钱买百鸡问题常采用什么算法实现。"></a>22.百钱买百鸡问题常采用什么算法实现。</h3><p>蛮力法（枚举法）</p><h3 id="23-数列极差问题常采用啥算法实现。"><a href="#23-数列极差问题常采用啥算法实现。" class="headerlink" title="23.数列极差问题常采用啥算法实现。"></a>23.数列极差问题常采用啥算法实现。</h3><p>贪心算法</p><h3 id="24-分支限界法与回溯法的相同点与不同点有哪些"><a href="#24-分支限界法与回溯法的相同点与不同点有哪些" class="headerlink" title="24.分支限界法与回溯法的相同点与不同点有哪些"></a>24.分支限界法与回溯法的相同点与不同点有哪些</h3><p>相同点：二者都是一种在问题的解空间树T上搜索问题解的算法。 不同点：1.分支限界法与回溯法的求解目标不同。 回溯法的求解目标是找出T中满足约束条件的所有解，而分支限界法的求解目标则是找出满足约束条件的一个解，或是在满足约束条件的解中找出使某一目标函数值达到极大或极小的解，即在某种意义下的最优解。 2.回溯法与分支限界法对解空间的搜索方式不同，回溯法通常采用深度优先搜索，而分支限界法则通常采用广度优先搜索。</p><h3 id="25-动态规划法与分治法的异同点"><a href="#25-动态规划法与分治法的异同点" class="headerlink" title="25.动态规划法与分治法的异同点"></a>25.动态规划法与分治法的异同点</h3><p>共同点 ：二者都要求原问题具有最优子结构性质,都是将原问题分而治之,分解成若干个规模较小(小到很容易解决的程序)的子问题.然后将子问题的解合并,形成原问题的解. 不同点：分治法将分解后的子问题看成相互独立的，通过用递归来做。 动态规划将分解后的子问题理解为相互间有联系,有重叠部分，需要记忆，通常用迭代来做</p><h3 id="26-贪心算法与动态规划法的异同点"><a href="#26-贪心算法与动态规划法的异同点" class="headerlink" title="26.贪心算法与动态规划法的异同点"></a>26.贪心算法与动态规划法的异同点</h3><p>基本要素都有最优子结构性质 动态规划法通常以自底向上的方式求解各个子问题 , 而贪心法则通常以自顶向下的方式做出一系列的贪心选择。 动态规划算法中，每步所做的选择往往依赖于相关子问题的解，因而只有在解出相关子问题时才能做出选择。而贪心算法，仅在当前状态下做出最好选择，即局部最优选择，然后再去解做出这个选择后产生的相应的子问题。 动态规划算法通常以自底向上的方式解各子问题，而贪心算法则通常自顶向下的方式进行。</p><h3 id="27-什么是易解问题？什么是难解问题？难解问题分为哪两类？"><a href="#27-什么是易解问题？什么是难解问题？难解问题分为哪两类？" class="headerlink" title="27.什么是易解问题？什么是难解问题？难解问题分为哪两类？"></a>27.什么是易解问题？什么是难解问题？难解问题分为哪两类？</h3><p>所有复杂度为多项式时间的问题为易解问题，否则为难解问题 1）易解问题:人们将存在多项式时间算法的问题称为易解问题; 2）难解问题:将需要在指数时间内解决的问题称为难解问题; 3）难解问题有两类:①不可判定问题； ②非决定的难处理问题；</p><h3 id="28-评价一个算法时间性能的主要指标是什么"><a href="#28-评价一个算法时间性能的主要指标是什么" class="headerlink" title="28.评价一个算法时间性能的主要指标是什么"></a>28.评价一个算法时间性能的主要指标是什么</h3><p>时间复杂度</p><h3 id="29-残缺棋盘覆盖问题常采用啥算法实现。"><a href="#29-残缺棋盘覆盖问题常采用啥算法实现。" class="headerlink" title="29.残缺棋盘覆盖问题常采用啥算法实现。"></a>29.残缺棋盘覆盖问题常采用啥算法实现。</h3><p>分治算法</p><h3 id="30-n皇后问题常采用啥算法实现。"><a href="#30-n皇后问题常采用啥算法实现。" class="headerlink" title="30.n皇后问题常采用啥算法实现。"></a>30.n皇后问题常采用啥算法实现。</h3><p>回溯法</p><h3 id="31-描述算法的语言有哪几种"><a href="#31-描述算法的语言有哪几种" class="headerlink" title="31.描述算法的语言有哪几种"></a>31.描述算法的语言有哪几种</h3><p>表示算法的方式主要有 : 自然语言 、流程图 、盒图 、PAD 图 、伪代码和计算机程序设计语言 。</p><h3 id="32-在使用计算机处理数据的过程中，所谓排序指的是什么意思"><a href="#32-在使用计算机处理数据的过程中，所谓排序指的是什么意思" class="headerlink" title="32.在使用计算机处理数据的过程中，所谓排序指的是什么意思"></a>32.在使用计算机处理数据的过程中，所谓排序指的是什么意思</h3><p>把杂乱无章的数据变为有序的数据</p><h3 id="33-计算机程序由哪些部分组成"><a href="#33-计算机程序由哪些部分组成" class="headerlink" title="33.计算机程序由哪些部分组成"></a>33.计算机程序由哪些部分组成</h3><p>常量、变量、表达式、语句、函数</p><h3 id="34-实现最长公共子序列利用的算法是哪种"><a href="#34-实现最长公共子序列利用的算法是哪种" class="headerlink" title="34.实现最长公共子序列利用的算法是哪种"></a>34.实现最长公共子序列利用的算法是哪种</h3><p>动态规划</p><h3 id="35-实现循环赛日程表利用的算法是哪种"><a href="#35-实现循环赛日程表利用的算法是哪种" class="headerlink" title="35.实现循环赛日程表利用的算法是哪种"></a>35.实现循环赛日程表利用的算法是哪种</h3><p>分治算法</p><h3 id="36-常见的两种分支限界法是哪两种"><a href="#36-常见的两种分支限界法是哪两种" class="headerlink" title="36.常见的两种分支限界法是哪两种"></a>36.常见的两种分支限界法是哪两种</h3><p>从活结点表中选择下一个活结点作为新的扩展结点,根据选择方式的不同 , 分支 限界算法通常可以分为以下两种形式: (1) FIFO分支限界算法 。按照先进先出( FirstInFirstOut,FIFO)原则选择下一个活结点作为扩展结点,即从活结点表中取出结点的顺序与加人结点的顺序相同 。 (2) 最小耗费或最大收益分支限界算法。在这种情况下,每个结点都有 一 个耗费或收益。如果要查找一个具有最小耗费的解,那么要选择的下一个扩展结点就是活结点表中具有最小耗费的活结点; 如果要查找一个具有最大收益的解 ,那么要选择的下一个扩展结点就是活结点表中具有最大收益的活结点。</p><h3 id="37-求方程的近似解常采用什么算法"><a href="#37-求方程的近似解常采用什么算法" class="headerlink" title="37.求方程的近似解常采用什么算法"></a>37.求方程的近似解常采用什么算法</h3><p>迭代法（近似迭代）</p><h3 id="38-二叉树的遍历问题常采用啥算法实现"><a href="#38-二叉树的遍历问题常采用啥算法实现" class="headerlink" title="38.二叉树的遍历问题常采用啥算法实现"></a>38.二叉树的遍历问题常采用啥算法实现</h3><p>分治算法</p><h3 id="39-0-1背包问题常采用啥算法实现。"><a href="#39-0-1背包问题常采用啥算法实现。" class="headerlink" title="39.0-1背包问题常采用啥算法实现。"></a>39.0-1背包问题常采用啥算法实现。</h3><p>动态规划算法</p><h3 id="40-哈夫曼树构造问题常采用啥算法实现。"><a href="#40-哈夫曼树构造问题常采用啥算法实现。" class="headerlink" title="40.哈夫曼树构造问题常采用啥算法实现。"></a>40.哈夫曼树构造问题常采用啥算法实现。</h3><p>贪心</p><h3 id="41-应用蛮力算法解决问题的时候，需要找出哪些基本条件？"><a href="#41-应用蛮力算法解决问题的时候，需要找出哪些基本条件？" class="headerlink" title="41.应用蛮力算法解决问题的时候，需要找出哪些基本条件？"></a>41.应用蛮力算法解决问题的时候，需要找出哪些基本条件？</h3><p>用蛮力法解决问题，通常可以从两个方面进行算法设计: 1、找出枚举范围：分析问题所涉及的各种情况； 2、找出约束条件：分析问题的解需要满足的条件，并用逻辑表达式表示。</p><p>蛮力法的优缺点 优点： 1、逻辑清晰，编写程序简洁； 2、对于一些重要的问题(比如：排序、查找、矩阵乘法和字符串匹配)，可以产生一些合理的算法； 3、解决问题的实例很少时，可以花费较少的代价； 4、可以解决一些小规模的问题(使用优化的算法没有必要，而且某些优化算法本身较复杂)； 5、可以作为其他高效算法的衡量标准； 缺点: 用蛮力法设计的算法其时间性能往往也是最低的, 典型的指数时间算法一般都是通过蛮力搜索而得到的 使用蛮力法的几种情况 1、搜索所有的解空间；2、搜索所有的路径； 3、直接计算；4、模拟和仿真；</p><h2 id="19算法"><a href="#19算法" class="headerlink" title="19算法"></a>19算法</h2><ul><li><p>填空题 1、一个算法的优劣可以用(时间复杂度)与(空间复杂度)与来衡量。 2、回溯法在问题的解空间中，按(深度优先方式)从根结点出发搜索解空间树。 3、直接或间接地调用自身的算法称为(递归算法)。 4、θ记号在算法复杂性的表示法中表示(渐进确界或紧致界)。 5、在分治法中，使子问题规模大致相等的做法是出自一种(平衡(banlancing)子问题)的思想。 6、动态规划算法适用于解(具有某种最优性质)问题。 7、贪心算法做出的选择只是(在某种意义上的局部)最优选择。 8、最优子结构性质的含义是(问题的最优解包含其子问题的最优解)。 9、回溯法按(深度优先)策略从根结点出发搜索解空间树。 10、拉斯维加斯算法找到的解一定是(正确解))。 11、按照符号O的定义O()+O(g)等于O(max{f(n)-g(n)})。 12、二分搜索技术是运用(分治)策略的典型例子。 13、动态规划算法中，通常不同子问题的个数随问题规模呈(多项式)级增长。 14、(最优子结构性质)) 和 (子问题重叠性质)是采用动态规划算法的两个基本 要素。 15、(最优子结构性质)和(贪心选择性质)是贪心算法的基本要素。 16、(选择能产生最优解的贪心准则)是设计贪心算法的核心问题。 17、分支限界法常以(广度优先)或(以最小耗费(最大效益)优先)的方式搜 索问题的解空间树。 18、贪心选择性质是指所求问题的整体 最优解可以通过一系列(局部最优) 的 选择，即贪心选择达到。 19、按照活结点表的组织方式的不同,分支限界法包括(队列式(FIFO)分支限 界法) 和 (优先队列式分支限界法)两种形式。 20、如果对于同一实例，蒙特卡洛算法不会给出两个不同的正确解答，则称该 蒙特卡洛算法是(一致的)。 21、哈夫曼编码可利用(贪心法)算法实现。 22、概率算法有数值概率算法，蒙特卡罗(MonteCarlo)算法，拉斯维加斯 (LasVegas)算法和舍伍德(Sherwood)算法 23、以自顶向下的方式求解最优解的有(贪心算法) 24、下列算法中通常以自顶向下的方式求解最优解的是(C)。 A、分治法 B、动态规划法 C、贪心法 D、回溯法 25、在对问题的解空间树进行搜索的方法中，一个活结点有多次机会成为活结点 的是(回溯法) 26、旅行售货员问题不能用()解决。 可以用回溯法解决，分支限界法，NP完全性理论与近似算法 27、贪心算法不能解决(0-1背包问题 N皇后问题),可以解决背包问题 28、投点法是(概率算法)的一种。 29、若线性规划问题存在最优解，它一定不在(可行域内部) 30、n皇后问题可以用(回溯法)解决。 31、若L是一个NP完全问题，L经过多项式时间变换后得到问题1,则1是(P类问题). 32、算法与程序在性质上有所不同，下列性质中，程序可以不满足哪个性质： ()。有限性。 算法的四个性质：输入；输出；确定性；有限性； 33、回溯法在解空间树T上的搜索方式：(分支限界法)。 34、动态规划算法的基本步骤不包括下列哪一步：()。 包括：划分阶段；选择状态；确定决策并写出状态转移方程；写出规划方程(包括边界条件): 35、在调试程序过程中，下列哪一种错误是计算机检查不出来的：(逻辑错误) 36、分治算法不包括以下哪项内容：()。 包括：二分搜索技术；大整数乘法；Strassen矩阵乘法；棋盘覆盖；合并排序和快速排序；线性时间选择；最接近点对问题；循环赛日程表； 37、贪心算法不能解决(0-1背包问题N皇后问题)。 38、舍伍德算法是(数值概率算法)的一种。 39、若线性规划问题存在最优解，它一定不在(可行域内部)。 40、回溯法可以解决的问题包括(N皇后问题；装载问题；批处理作业调度；符号三角形问题；n后问题；0-1背包问题；最大团问题；图的m着色问题；旅行售货 员问题；圆排列问题；电路板排列问题；连续邮资问题)</p></li><li><p>判断题(每小题3分，共15分) 1)分支限界法类似于回溯法，也是一种在问题的解空间树T上搜索问题解的算法， 两者的求解目标是相同的。 <font color="CadetBlue">对；</font> 2)优先队列式的分支限界法将活结点表组织成一个优先队列，并按优先队列中规 定的结点优先级选取优先级最高的下一个结点称为当前扩展结点。 <font color="CadetBlue">对；</font> 3)回溯法求解问题的所有解时，要回溯到根，且根结点的所有子树都被搜索遍才结束。 <font color="CadetBlue">错，搜索到一个解就可结束；</font>； 4)动态规划法用一个表来记录所有已解决的子问题的答案。不管该子问题以后是否被用到，只要它被计算过，就将其结果 填入表中。 <font color="CadetBlue">对；</font> 5)一个直接或间接地调用自身的算法称为递归算法，而一个使用函数自身给出定义的函数称为递归函数。定义递归函数时 可以没有初始值。 <font color="CadetBlue"> 错，应该有初始值；</font>； 6)动态规划法用一个表来记录所有已解决的子问题的答案。不管该子问题以后是否 被用到，只要它被计算过，就将其结果填入表中。在需要时从表中找出以求得的答案。 <font color="CadetBlue">对；</font> 7)动态规划算法是用于解最优化问题，采用自顶向下的方式计算出最优解。 <font color="CadetBlue">错；</font>； 8)贪心算法和动态规划算法都要求问题必须具有最优子结构性质和贪心选择性质。 <font color="CadetBlue">错；</font> 9)队列式分支限界法将活结点表组织成一个优先队列，并按队列的先进现出原则选取下一个结点称为当前扩展结点。 <font color="CadetBlue">错；</font></p></li><li><p>算法设计 说明：任意选择所使用的算法策略； 要求： 说明所使用的算法策略；写出算法实现的主要步骤；分析算法的时间复杂性。 0-1背包问题 第三章，第五章，第六章； 单源最短路径问题 第四章，第六章；</p><ul><li><p>0-1背包问题： 算法策略： 动态规划算法。 动态规划算法基本思想是将待求解问题分解成若干个子问题， 但是经分解得到的子问题往往不是互相独立的。不同子问题的数目常常只有多项式量级。 步骤： 1找出最优解的性质，并刻划其结构特征。 2递归地定义最优值。 3以自底向上的方式计算出最优值。 4根据计算最优值时得到的信息，构造最优解。 时间复杂度：改进后算法的计算时间复杂 性为O(2^n)。当所给物品的重量w(1≤i≤n)是整数时，|lp[i]|≤c+1,(1≤i≤n)。 在这种情况下，改进后算法的计算时间复杂性为O(min(nc,2^n})。</p></li><li><p>单源最短路径问题： 算法策略：贪心算法。贪心算法总是作出在当前看来最好的选择。也就是说贪心算法并 不从整体最优考虑，它所作出的选择只是在 某种意义上的局部最优选择。当然，希望贪心算法得到的最终结果也是整体最优的。虽 然贪心算法不能对所有问题都得到整体最优解，但对许多问题它能产生整体最优解。如 单源最短路经问题，最小生成树问题等。在一些情况下。即使贪心算法不能得到整体最 优解，其最终结果却是最优解的很好近似。 贪心算法则通常以自顶向下的方式进行，以 迭代的方式作出相继的贪心选择，每作一次 贪心选择就将所求问题简化为规模更小的子 问题。 步骤：Dijkstra算法是解单源最短路径问题的 贪心算法。其基本思想是，设置顶点集合S 并不断地作贪心选择来扩充这个集合。 一个 顶点属于集合S当且仅当从源到该顶点的最 短路径长度已知。初始时，S中仅含有源。 设u是G的某一个顶点，把从源到u且中间 只经过S中顶点的路称为从源到u的特殊路 径，并用数组dist记录当前每个顶点所对应 的最短特殊路径长度。Djkstra算法每次从 V-S中取出具有最短特殊路长度的顶点u, 将u添加到S中，同时对数组dist作必要的 修改。 一旦S包含了所有V中顶点，dist就 记录了从源到所有其它顶点之间的最短路径 长度。 时间复杂度： 对于具有n个顶点和e条边的 带权有向图，如果用带权邻接矩阵表示这个图，那么Djjkstra算法的主循环体需要O(n)时间。这个循环需要执行n-1次，所以完成循环需要O(n^2)时间。算法的其余部分所需要时间不超过O(n^2)。</p></li></ul></li></ul><h1 id="编程题"><a href="#编程题" class="headerlink" title="编程题"></a>编程题</h1><h2 id="1-1"><a href="#1-1" class="headerlink" title="1-1"></a>1-1</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Object</span><span class="token punctuation">&#123;</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token keyword">int</span> weight<span class="token punctuation">;</span>    <span class="token keyword">int</span> price<span class="token punctuation">;</span>    <span class="token keyword">float</span> d<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MaxHeapQNode</span><span class="token punctuation">&#123;</span><span class="token keyword">public</span><span class="token operator">:</span>    MaxHeapQNode <span class="token operator">*</span>parent<span class="token punctuation">;</span>    <span class="token keyword">int</span> lchild<span class="token punctuation">;</span>    <span class="token keyword">int</span> upprofit<span class="token punctuation">;</span>    <span class="token keyword">int</span> profit<span class="token punctuation">;</span>    <span class="token keyword">int</span> weight<span class="token punctuation">;</span>    <span class="token keyword">int</span> lev<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">struct</span> <span class="token class-name">cmp</span><span class="token punctuation">&#123;</span>    <span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>MaxHeapQNode <span class="token operator">*</span><span class="token operator">&amp;</span>a<span class="token punctuation">,</span> MaxHeapQNode <span class="token operator">*</span><span class="token operator">&amp;</span>b<span class="token punctuation">)</span> <span class="token keyword">const</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> a<span class="token operator">-></span>upprofit <span class="token operator">&lt;</span> b<span class="token operator">-></span>upprofit<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">bool</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token keyword">const</span> Object <span class="token operator">&amp;</span>a<span class="token punctuation">,</span> <span class="token keyword">const</span> Object <span class="token operator">&amp;</span>b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> a<span class="token punctuation">.</span>d <span class="token operator">>=</span> b<span class="token punctuation">.</span>d<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> c<span class="token punctuation">;</span><span class="token keyword">int</span> cw<span class="token punctuation">;</span><span class="token keyword">int</span> cp<span class="token punctuation">;</span><span class="token keyword">int</span> bestp<span class="token punctuation">;</span>Object obj<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> bestx<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">InPut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"num W:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d %d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>n<span class="token punctuation">,</span> <span class="token operator">&amp;</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"price weight:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d %d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>price<span class="token punctuation">,</span> <span class="token operator">&amp;</span>obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>weight<span class="token punctuation">)</span><span class="token punctuation">;</span>        obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">=</span> i<span class="token punctuation">;</span>        obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>d <span class="token operator">=</span> <span class="token number">1.0</span> <span class="token operator">*</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>price <span class="token operator">/</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>weight<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">sort</span><span class="token punctuation">(</span>obj <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> obj <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> compare<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//    for(int i = 1; i &lt;= n; ++i)</span>    <span class="token comment">//        cout &lt;&lt; obj[i].d &lt;&lt; " ";</span>    <span class="token comment">//    cout &lt;&lt; endl &lt;&lt; "InPut Complete" &lt;&lt; endl;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">Bound</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> tmp_cleft <span class="token operator">=</span> c <span class="token operator">-</span> cw<span class="token punctuation">;</span>    <span class="token keyword">int</span> tmp_cp <span class="token operator">=</span> cp<span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>tmp_cleft <span class="token operator">>=</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>weight <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        tmp_cleft <span class="token operator">-=</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>weight<span class="token punctuation">;</span>        tmp_cp <span class="token operator">+=</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>price<span class="token punctuation">;</span>        i<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> n<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        tmp_cp <span class="token operator">+=</span> tmp_cleft <span class="token operator">*</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>d<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> tmp_cp<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">AddAliveNode</span><span class="token punctuation">(</span>priority_queue<span class="token operator">&lt;</span>MaxHeapQNode <span class="token operator">*</span><span class="token punctuation">,</span> vector<span class="token operator">&lt;</span>MaxHeapQNode <span class="token operator">*</span><span class="token operator">></span><span class="token punctuation">,</span> cmp<span class="token operator">></span> <span class="token operator">&amp;</span>q<span class="token punctuation">,</span> MaxHeapQNode <span class="token operator">*</span>E<span class="token punctuation">,</span> <span class="token keyword">int</span> up<span class="token punctuation">,</span> <span class="token keyword">int</span> wt<span class="token punctuation">,</span> <span class="token keyword">int</span> curp<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> ch<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    MaxHeapQNode <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token keyword">new</span> MaxHeapQNode<span class="token punctuation">;</span>    p<span class="token operator">-></span>parent <span class="token operator">=</span> E<span class="token punctuation">;</span>    p<span class="token operator">-></span>lchild <span class="token operator">=</span> ch<span class="token punctuation">;</span>    p<span class="token operator">-></span>weight <span class="token operator">=</span> wt<span class="token punctuation">;</span>    p<span class="token operator">-></span>upprofit <span class="token operator">=</span> up<span class="token punctuation">;</span>    p<span class="token operator">-></span>profit <span class="token operator">=</span> curp<span class="token punctuation">;</span>    p<span class="token operator">-></span>lev <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//    cout &lt;&lt; "加入点的信息为 " &lt;&lt; endl;</span>    <span class="token comment">//    cout &lt;&lt; "p->lev = " &lt;&lt; p->lev &lt;&lt; " p->upprofit = " &lt;&lt; p->upprofit &lt;&lt; " p->weight =  " &lt;&lt; p->weight &lt;&lt; " p->profit =  " &lt;&lt; p->profit &lt;&lt; endl;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">MaxKnapsack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    priority_queue<span class="token operator">&lt;</span>MaxHeapQNode <span class="token operator">*</span><span class="token punctuation">,</span> vector<span class="token operator">&lt;</span>MaxHeapQNode <span class="token operator">*</span><span class="token operator">></span><span class="token punctuation">,</span> cmp<span class="token operator">></span> q<span class="token punctuation">;</span> <span class="token comment">// 大顶堆</span>    MaxHeapQNode <span class="token operator">*</span>E <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>    cw <span class="token operator">=</span> cp <span class="token operator">=</span> bestp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> up <span class="token operator">=</span> <span class="token function">Bound</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Bound(i)函数计算的是i还未处理时候的上限值</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> wt <span class="token operator">=</span> cw <span class="token operator">+</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>weight<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>wt <span class="token operator">&lt;=</span> c<span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>bestp <span class="token operator">&lt;</span> cp <span class="token operator">+</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>price<span class="token punctuation">)</span>                bestp <span class="token operator">=</span> cp <span class="token operator">+</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>price<span class="token punctuation">;</span>            <span class="token function">AddAliveNode</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> E<span class="token punctuation">,</span> up<span class="token punctuation">,</span> cw <span class="token operator">+</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>weight<span class="token punctuation">,</span> cp <span class="token operator">+</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>price<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        up <span class="token operator">=</span> <span class="token function">Bound</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//注意这里 up != up - obj[i].price而且 up >= up - obj[i].price</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>up <span class="token operator">>=</span> bestp<span class="token punctuation">)</span>   <span class="token comment">//注意这里必须是大于等于</span>        <span class="token punctuation">&#123;</span>            <span class="token function">AddAliveNode</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> E<span class="token punctuation">,</span> up<span class="token punctuation">,</span> cw<span class="token punctuation">,</span> cp<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        E <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        q<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cw <span class="token operator">=</span> E<span class="token operator">-></span>weight<span class="token punctuation">;</span>        cp <span class="token operator">=</span> E<span class="token operator">-></span>profit<span class="token punctuation">;</span>        up <span class="token operator">=</span> E<span class="token operator">-></span>upprofit<span class="token punctuation">;</span>        i <span class="token operator">=</span> E<span class="token operator">-></span>lev<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> n<span class="token punctuation">;</span> j <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token operator">--</span>j<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        bestx<span class="token punctuation">[</span>obj<span class="token punctuation">[</span>E<span class="token operator">-></span>lev <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> E<span class="token operator">-></span>lchild<span class="token punctuation">;</span>        E <span class="token operator">=</span> E<span class="token operator">-></span>parent<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">OutPut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"最优装入量为 %d\n"</span><span class="token punctuation">,</span> bestp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"装入的物品为 \n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>bestx<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d "</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">InPut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MaxKnapsack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">OutPut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-2"><a href="#1-2" class="headerlink" title="1-2"></a>1-2</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;queue></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">max_m</span> <span class="token expression"><span class="token number">3</span> </span><span class="token comment">//最大机器数</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">max_t</span> <span class="token expression"><span class="token number">5</span> </span><span class="token comment">//最大任务数</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">INF</span> <span class="token expression"><span class="token number">1000</span></span></span><span class="token keyword">int</span> n<span class="token punctuation">;</span>                 <span class="token comment">//实际任务数</span><span class="token keyword">int</span> t_m<span class="token punctuation">[</span>max_t<span class="token punctuation">]</span><span class="token punctuation">[</span>max_m<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//存储机器与任务的矩阵</span><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">Node</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> sum1<span class="token punctuation">;</span>    <span class="token keyword">int</span> sum2<span class="token punctuation">;</span>    <span class="token keyword">int</span> lb<span class="token punctuation">;</span>    <span class="token keyword">int</span> t_num<span class="token punctuation">;</span>           <span class="token comment">//已执行任务数</span>    <span class="token keyword">int</span> t<span class="token punctuation">;</span>               <span class="token comment">//当前任务</span>    <span class="token keyword">bool</span> visited<span class="token punctuation">[</span>max_t<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//标记已执行任务</span>    <span class="token keyword">int</span> es<span class="token punctuation">[</span>max_t<span class="token punctuation">]</span><span class="token punctuation">;</span>       <span class="token comment">//执行序列</span>    <span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token keyword">const</span> Node <span class="token operator">&amp;</span>p<span class="token punctuation">)</span> <span class="token keyword">const</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> p<span class="token punctuation">.</span>lb <span class="token operator">&lt;</span> lb<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> Node<span class="token punctuation">;</span>priority_queue<span class="token operator">&lt;</span>Node<span class="token operator">></span> pp<span class="token punctuation">;</span><span class="token keyword">int</span> up<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">get_up</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//获取上界，任务从1到4按序执行</span><span class="token punctuation">&#123;</span>    up <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> max_t<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        up <span class="token operator">+=</span> t_m<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>max_m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> max_m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        up <span class="token operator">+=</span> t_m<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">get_lb</span><span class="token punctuation">(</span>Node node<span class="token punctuation">)</span> <span class="token comment">//获取目标函数值</span><span class="token punctuation">&#123;</span>    node<span class="token punctuation">.</span>lb <span class="token operator">=</span> node<span class="token punctuation">.</span>sum2<span class="token punctuation">;</span>    <span class="token keyword">int</span> min <span class="token operator">=</span> INF<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">.</span>visited<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> node<span class="token punctuation">.</span>t<span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                node<span class="token punctuation">.</span>lb <span class="token operator">+=</span> t_m<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//加上剩余任务在第二个机器上完成时间和</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>t_m<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> min<span class="token punctuation">)</span>                    min <span class="token operator">=</span> t_m<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    node<span class="token punctuation">.</span>lb <span class="token operator">+=</span> min<span class="token punctuation">;</span> <span class="token comment">//加上剩余任务中执行时间最短的一个</span>    <span class="token keyword">return</span> node<span class="token punctuation">.</span>lb<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">solve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">get_up</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> sequence<span class="token punctuation">[</span>max_t<span class="token punctuation">]</span><span class="token punctuation">;</span>    Node first<span class="token punctuation">;</span> <span class="token comment">//初始化第一个节点</span>    first<span class="token punctuation">.</span>t_num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    first<span class="token punctuation">.</span>lb <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    first<span class="token punctuation">.</span>t <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    first<span class="token punctuation">.</span>sum1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    first<span class="token punctuation">.</span>sum2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        first<span class="token punctuation">.</span>visited<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        first<span class="token punctuation">.</span>es<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    pp<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>pp<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        Node tmp <span class="token operator">=</span> pp<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        pp<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>tmp<span class="token punctuation">.</span>t_num <span class="token operator">==</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> ans<span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                sequence<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">.</span>es<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tmp<span class="token punctuation">.</span>visited<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//找到最后一个未执行任务</span>                    ans <span class="token operator">=</span> i<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            sequence<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> ans<span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span>        <span class="token punctuation">&#123;</span>            Node next<span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>                next<span class="token punctuation">.</span>visited<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tmp<span class="token punctuation">.</span>visited<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token punctuation">&#123;</span>                    next<span class="token punctuation">.</span>t_num <span class="token operator">=</span> tmp<span class="token punctuation">.</span>t_num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>                    next<span class="token punctuation">.</span>t <span class="token operator">=</span> i<span class="token punctuation">;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token comment">//继承执行序列</span>                        next<span class="token punctuation">.</span>es<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">.</span>es<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                    next<span class="token punctuation">.</span>es<span class="token punctuation">[</span>next<span class="token punctuation">.</span>t_num <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>                    next<span class="token punctuation">.</span>sum1 <span class="token operator">=</span> tmp<span class="token punctuation">.</span>sum1 <span class="token operator">+</span> t_m<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>next<span class="token punctuation">.</span>sum1 <span class="token operator">></span> tmp<span class="token punctuation">.</span>sum2<span class="token punctuation">)</span>                        next<span class="token punctuation">.</span>sum2 <span class="token operator">=</span> next<span class="token punctuation">.</span>sum1 <span class="token operator">+</span> t_m<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token keyword">else</span>                        next<span class="token punctuation">.</span>sum2 <span class="token operator">=</span> tmp<span class="token punctuation">.</span>sum2 <span class="token operator">+</span> t_m<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>                        next<span class="token punctuation">.</span>visited<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">.</span>visited<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//继承任务操作标记</span>                    next<span class="token punctuation">.</span>visited<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    next<span class="token punctuation">.</span>lb <span class="token operator">=</span> <span class="token function">get_lb</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>next<span class="token punctuation">.</span>lb <span class="token operator">&lt;=</span> up<span class="token punctuation">)</span>                    <span class="token punctuation">&#123;</span>                        pp<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"最优解任务执行序列为："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d "</span><span class="token punctuation">,</span> sequence<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入任务数："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入任务-机器矩阵：\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> max_m<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>t_m<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> max_m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>                <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token function">solve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-1"><a href="#2-1" class="headerlink" title="2-1"></a>2-1</h2><blockquote><p>福尔摩斯到某古堡探险，看到门上写着一个奇怪的算式： ABCDE * ? &#x3D; EDCBA 其中ABCDE应该代表不同的数字，问号也代表某个数字,请编程程序找出满足上述要求的式子。</p></blockquote><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> e<span class="token punctuation">,</span> f<span class="token punctuation">;</span>  <span class="token keyword">int</span> i<span class="token punctuation">,</span> wenhao<span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">99999</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    a <span class="token operator">=</span> i <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>          <span class="token comment">//万位</span>    b <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">10000</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">;</span> <span class="token comment">//千位</span>    c <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>   <span class="token comment">//百位</span>    d <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span>     <span class="token comment">//十位</span>    e <span class="token operator">=</span> i <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>             <span class="token comment">//个位</span>    f <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">10</span> <span class="token operator">*</span> b <span class="token operator">+</span> <span class="token number">100</span> <span class="token operator">*</span> c <span class="token operator">+</span> <span class="token number">1000</span> <span class="token operator">*</span> d <span class="token operator">+</span> <span class="token number">10000</span> <span class="token operator">*</span> e<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">!=</span> b <span class="token operator">&amp;&amp;</span> a <span class="token operator">!=</span> c <span class="token operator">&amp;&amp;</span> a <span class="token operator">!=</span> d <span class="token operator">&amp;&amp;</span> a <span class="token operator">!=</span> e <span class="token operator">&amp;&amp;</span> b <span class="token operator">!=</span> c <span class="token operator">&amp;&amp;</span> b <span class="token operator">!=</span> d <span class="token operator">&amp;&amp;</span> b <span class="token operator">!=</span> e <span class="token operator">&amp;&amp;</span> c <span class="token operator">!=</span> d <span class="token operator">&amp;&amp;</span> c <span class="token operator">!=</span> e <span class="token operator">&amp;&amp;</span> d <span class="token operator">!=</span> e<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span>wenhao <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> wenhao <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> wenhao<span class="token operator">++</span><span class="token punctuation">)</span>      <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">*</span> wenhao <span class="token operator">==</span> f<span class="token punctuation">)</span>          <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d*%d=%d"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> wenhao<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-2"><a href="#2-2" class="headerlink" title="2-2"></a>2-2</h2><blockquote><p>韩信在点兵的时候，为了知道有多少个兵，同时又能保住军事机密，便让士兵排队报数。 按从1至5报数,记下最末一个士兵报的数为1； 再按从1至6报数,记下最末一个士兵报的数为5； 再按1至7报数,记下最末一个报的数为4； 最后按1至11报数,最末一个士兵报的数为10。 你知道韩信至少有多少兵？请编写程序求出至少的士兵数。</p></blockquote><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">4500</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> i <span class="token operator">%</span> <span class="token number">6</span> <span class="token operator">==</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> i <span class="token operator">%</span> <span class="token number">7</span> <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> i <span class="token operator">%</span> <span class="token number">11</span> <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-1"><a href="#3-1" class="headerlink" title="3-1"></a>3-1</h2><blockquote><p>给定由n个数组成的序列a1，a2，……，an，序列中可能有负数，要在这n个数中选取相邻的一段ai， ai+1，……，aj（1≤i≤j≤n）使其和最大，并输出最大的和。当所有的数均为负数时，定义最大子段和为0。其中数据个数n和n个数据都通过键盘输入，要求使用动态规划算法实现。</p></blockquote><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token function">maxSum</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> <span class="token operator">*</span>index<span class="token punctuation">;</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span>    index <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    index<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    index<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> index<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            b<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> b<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span>        <span class="token punctuation">&#123;</span>            b<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            index<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> index<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            index<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            index<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> index<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> <span class="token operator">*</span>max<span class="token punctuation">;</span>    <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> b<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    max <span class="token operator">=</span> <span class="token function">maxSum</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"The largest subsection sum is:"</span> <span class="token operator">&lt;&lt;</span> max<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Start at:"</span> <span class="token operator">&lt;&lt;</span> max<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"End at:"</span> <span class="token operator">&lt;&lt;</span> max<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-2"><a href="#3-2" class="headerlink" title="3-2"></a>3-2</h2><blockquote><p>参加拔河比赛的12个同学的体重如下： 48，43，57，64，50，52，18，34，39，56，16，61 为使比赛公平，要求参赛的两组每组6个人，且每组同学的体重之和相等，使用回溯算法求出所有可能的分组情况）</p></blockquote><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;math.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;time.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> j<span class="token punctuation">,</span> k<span class="token punctuation">,</span> m<span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">long</span> s1<span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> b<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>s <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> k <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> <span class="token number">12</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        s <span class="token operator">+=</span> b<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d,"</span><span class="token punctuation">,</span> b<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n以上12个整数总和为%d \n"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>        s1 <span class="token operator">=</span> s <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"和为奇数，无法平分！\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">8</span><span class="token punctuation">;</span> a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">;</span> a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> a<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> a<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">)</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> a<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">11</span><span class="token punctuation">;</span> a<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">)</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> a<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">12</span><span class="token punctuation">;</span> a<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#123;</span>                        <span class="token keyword">for</span> <span class="token punctuation">(</span>s <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> k <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> <span class="token number">6</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>                            s <span class="token operator">=</span> s <span class="token operator">+</span> b<span class="token punctuation">[</span>a<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">==</span> s1<span class="token punctuation">)</span> <span class="token comment">/*满足均分条件时输出*/</span>                        <span class="token punctuation">&#123;</span>                            m<span class="token operator">++</span><span class="token punctuation">;</span>                            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"NO%d:"</span><span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token number">6</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>                                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d,"</span><span class="token punctuation">,</span> b<span class="token punctuation">[</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"共有以上%d种分法\n"</span><span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"无法实现二维均分\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-3"><a href="#3-3" class="headerlink" title="3-3"></a>3-3</h2><blockquote><p>从1、2、3……9九个数中选择五个各不相同的数放入下方框中，并使该等式成立。 _ _ + _ &#x3D; _ _ 例如14+9&#x3D;23，要求使用回溯算法求出所有可能的情况。</p></blockquote><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> visitlist<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>a<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> a<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d + %d = %d\n"</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> a<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>visitlist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            visitlist<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>            a<span class="token punctuation">[</span>len<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>            <span class="token function">dfs</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            visitlist<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">dfs</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Algorithms </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> Algorithms </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="//2023/06/23/usingNote/"/>
      <url>//2023/06/23/usingNote/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="hue"><a href="#hue" class="headerlink" title="hue"></a>hue</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">docker</span> run <span class="token punctuation">\</span><span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> hue <span class="token punctuation">\</span><span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token punctuation">\</span><span class="token parameter variable">-p</span> <span class="token number">8888</span>:8888 <span class="token punctuation">\</span><span class="token parameter variable">-h</span> hue-docker-1 <span class="token punctuation">\</span><span class="token parameter variable">-v</span> /home/container/hue-docker-1:/home/hue-docker-1-remote <span class="token punctuation">\</span>gethue/hue:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-ti</span> <span class="token parameter variable">--user</span> root hue <span class="token function">bash</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/share/hue/build/env/bin/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#设置db</span>./hue syncdb  <span class="token comment">#初始化数据 </span>./hue migrate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="kafka"><a href="#kafka" class="headerlink" title="kafka"></a>kafka</h1><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> zookeeper <span class="token parameter variable">-p</span> <span class="token number">2181</span>:2181 <span class="token parameter variable">-t</span> wurstmeister/zookeeper <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> kafka <span class="token parameter variable">--publish</span> <span class="token number">9092</span>:9092 <span class="token parameter variable">--link</span> zookeeper <span class="token punctuation">\</span><span class="token parameter variable">--env</span> <span class="token assign-left variable">KAFKA_ZOOKEEPER_CONNECT</span><span class="token operator">=</span>zookeeper:2181 <span class="token punctuation">\</span><span class="token parameter variable">--env</span> <span class="token assign-left variable">KAFKA_ADVERTISED_HOST_NAME</span><span class="token operator">=</span>localhost <span class="token punctuation">\</span><span class="token parameter variable">--env</span> <span class="token assign-left variable">KAFKA_ADVERTISED_PORT</span><span class="token operator">=</span><span class="token number">9092</span> <span class="token punctuation">\</span>wurstmeister/kafka:latest <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> kafka <span class="token function">bash</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /opt/kafka/bin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="python"><a href="#python" class="headerlink" title="python"></a>python</h2><h3 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h3><p>打开两个jupyter窗口</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> kafka <span class="token keyword">import</span> KafkaProducer<span class="token punctuation">,</span> KafkaConsumer<span class="token keyword">from</span> kafka<span class="token punctuation">.</span>errors <span class="token keyword">import</span> kafka_errors<span class="token keyword">import</span> traceback<span class="token keyword">import</span> json<span class="token keyword">def</span> <span class="token function">producer_demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 假设生产的消息为键值对（不是一定要键值对），且序列化方式为json</span>    producer <span class="token operator">=</span> KafkaProducer<span class="token punctuation">(</span>        bootstrap_servers<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'localhost:9092'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>         key_serializer<span class="token operator">=</span><span class="token keyword">lambda</span> k<span class="token punctuation">:</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        value_serializer<span class="token operator">=</span><span class="token keyword">lambda</span> v<span class="token punctuation">:</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 发送三条消息</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        future <span class="token operator">=</span> producer<span class="token punctuation">.</span>send<span class="token punctuation">(</span>            <span class="token string">'kafka_demo'</span><span class="token punctuation">,</span>            key<span class="token operator">=</span><span class="token string">'count_num'</span><span class="token punctuation">,</span>  <span class="token comment"># 同一个key值，会被送至同一个分区</span>            value<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>            partition<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># 向分区1发送消息</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"send &#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            future<span class="token punctuation">.</span>get<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment"># 监控是否发送成功           </span>        <span class="token keyword">except</span> kafka_errors<span class="token punctuation">:</span>  <span class="token comment"># 发送失败抛出kafka_errors</span>            traceback<span class="token punctuation">.</span>format_exc<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">consumer_demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    consumer <span class="token operator">=</span> KafkaConsumer<span class="token punctuation">(</span>        <span class="token string">'kafka_demo'</span><span class="token punctuation">,</span>         bootstrap_servers<span class="token operator">=</span><span class="token string">':9092'</span><span class="token punctuation">,</span>        group_id<span class="token operator">=</span><span class="token string">'test'</span>    <span class="token punctuation">)</span>    <span class="token keyword">for</span> message <span class="token keyword">in</span> consumer<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"receive, key: &#123;&#125;, value: &#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>            json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>message<span class="token punctuation">.</span>key<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>message<span class="token punctuation">.</span>value<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span>        <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">producer_demo<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">consumer_demo<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="gradle"><a href="#gradle" class="headerlink" title="gradle"></a>gradle</h1><h2 id="settings-gradle-kts-更换阿里云镜像源"><a href="#settings-gradle-kts-更换阿里云镜像源" class="headerlink" title="settings.gradle.kts 更换阿里云镜像源"></a>settings.gradle.kts 更换阿里云镜像源</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">pluginManagement &#123;    repositories &#123;        // 改为阿里云的镜像地址        maven &#123; setUrl("https://maven.aliyun.com/repository/central") &#125;        maven &#123; setUrl("https://maven.aliyun.com/repository/jcenter") &#125;        maven &#123; setUrl("https://maven.aliyun.com/repository/google") &#125;        maven &#123; setUrl("https://maven.aliyun.com/repository/gradle-plugin") &#125;        maven &#123; setUrl("https://maven.aliyun.com/repository/public") &#125;        maven &#123; setUrl("https://jitpack.io") &#125;        gradlePluginPortal()        google()        mavenCentral()    &#125;&#125;dependencyResolutionManagement &#123;    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)    repositories &#123;        // 改为阿里云的镜像地址        maven &#123; setUrl("https://maven.aliyun.com/repository/central") &#125;        maven &#123; setUrl("https://maven.aliyun.com/repository/jcenter") &#125;        maven &#123; setUrl("https://maven.aliyun.com/repository/google") &#125;        maven &#123; setUrl("https://maven.aliyun.com/repository/gradle-plugin") &#125;        maven &#123; setUrl("https://maven.aliyun.com/repository/public") &#125;        maven &#123; setUrl("https://jitpack.io") &#125;        google()        mavenCentral()    &#125;&#125;rootProject.name = "DN_Compose"include ':app'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="vnc"><a href="#vnc" class="headerlink" title="vnc"></a>vnc</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">vncserver<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h1><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><h3 id="使用yum-update或yum-groupinstall-“GNOME-Desktop”等yum安装命令出现Error-Package-avahi-libs-0-6-31-13-el7-x86-64-anaconda-系列错误"><a href="#使用yum-update或yum-groupinstall-“GNOME-Desktop”等yum安装命令出现Error-Package-avahi-libs-0-6-31-13-el7-x86-64-anaconda-系列错误" class="headerlink" title="使用yum update或yum groupinstall “GNOME Desktop”等yum安装命令出现Error: Package: avahi-libs-0.6.31-13.el7.x86_64 (@anaconda)系列错误"></a>使用yum update或yum groupinstall “GNOME Desktop”等yum安装命令<strong>出现Error: Package: avahi-libs-0.6.31-13.el7.x86_64 (@anaconda)系列错误</strong></h3><blockquote><p>输入以下命令</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>、yum <span class="token function">install</span> yum-utils   <span class="token comment">#如果这条命令也出错，就忽略这条</span><span class="token comment">#清除之前未完成的事务</span><span class="token number">2</span>、yum-complete-transaction   yum <span class="token function">history</span> redo last  <span class="token comment">#清除可能存在的重复包</span><span class="token number">3</span>、package-cleanup <span class="token parameter variable">--dupes</span><span class="token comment">#清除可能存在的损坏包</span><span class="token number">4</span>、package-cleanup <span class="token parameter variable">--problems</span><span class="token comment">#清除重复包的老版本：</span><span class="token number">5</span>、package-cleanup <span class="token parameter variable">--cleandupes</span><span class="token comment">#以上完成后，在把yum重新更新</span>yum clean all  <span class="token comment">#清空yum</span>yum <span class="token parameter variable">-y</span> upgrade  <span class="token comment">#重新更新yum</span><span class="token comment">#解决！</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">netsh winsock reset<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="fish"><a href="#fish" class="headerlink" title="fish"></a>fish</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><h3 id="对于-CentOS-7，请以根用户-root-运行下面命令"><a href="#对于-CentOS-7，请以根用户-root-运行下面命令" class="headerlink" title="对于 CentOS 7，请以根用户 root 运行下面命令"></a>对于 <strong>CentOS 7</strong>，请以根用户 <strong>root</strong> 运行下面命令</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /etc/yum.repos.d/<span class="token function">wget</span> https://download.opensuse.org/repositories/shells:fish:release:3/CentOS_7/shells:fish:release:3.repoyum <span class="token function">install</span> fish<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="对于-CentOS-9-Stream，请以根用户-root-运行下面命令"><a href="#对于-CentOS-9-Stream，请以根用户-root-运行下面命令" class="headerlink" title="对于 CentOS-9 Stream，请以根用户 root 运行下面命令"></a>对于 <strong>CentOS-9 Stream</strong>，请以根用户 <strong>root</strong> 运行下面命令</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /etc/yum.repos.d/<span class="token function">wget</span> https://download.opensuse.org/repositories/shells:fish:release:3/CentOS-9_Stream/shells:fish:release:3.repoyum <span class="token function">install</span> fish<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="maven"><a href="#maven" class="headerlink" title="maven"></a>maven</h1><h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mvn archetype:generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 配置阿里云仓库 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>aliyun-repos<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://maven.aliyun.com/repository/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepositories</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepository</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>aliyun-repos<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://maven.aliyun.com/repository/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepository</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepositories</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>aliyunmaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>阿里云公共仓库<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://maven.aliyun.com/repository/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Go"><a href="#Go" class="headerlink" title="Go"></a>Go</h1><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">setx GOPATH c:<span class="token punctuation">\</span>Codes<span class="token punctuation">\</span>goCode<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h1><h2 id="报错-1"><a href="#报错-1" class="headerlink" title="报错"></a>报错</h2><h3 id="解决ssh或ftp下root用户认证失败问题"><a href="#解决ssh或ftp下root用户认证失败问题" class="headerlink" title="解决ssh或ftp下root用户认证失败问题"></a>解决ssh或ftp下root用户认证失败问题</h3><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230714104109.png]]</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">passwd</span> root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> openssh-server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Flink"><a href="#Flink" class="headerlink" title="Flink"></a>Flink</h1><h2 id="测试程序"><a href="#测试程序" class="headerlink" title="测试程序"></a>测试程序</h2><h3 id="stand-alone模式"><a href="#stand-alone模式" class="headerlink" title="stand alone模式"></a>stand alone模式</h3><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">flink run /opt/app/flink-1.14.5/examples/batch/WordCount.jar <span class="token parameter variable">--input</span> hdfs://hadoop201:8020/input/test.txt  <span class="token parameter variable">--output</span> hdfs://hadoop201/output/test1.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="yarn模式"><a href="#yarn模式" class="headerlink" title="yarn模式"></a>yarn模式</h3><h4 id="Session模式"><a href="#Session模式" class="headerlink" title="Session模式"></a><em><strong>Session模式</strong></em></h4><h1 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yarn-session.sh <span class="token parameter variable">-n</span> <span class="token number">2</span> <span class="token parameter variable">-tm</span> <span class="token number">800</span> <span class="token parameter variable">-s</span> <span class="token number">1</span> <span class="token parameter variable">-d</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">flink run /opt/app/flink-1.14.5/examples/batch/WordCount.jar <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>说明: 申请2个CPU、1600M内存</p></blockquote><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>-n</td><td>表示申请2个容器，这里指的就是多少个taskmanager</td></tr><tr><td>-tm</td><td>表示每个TaskManager的内存大小</td></tr><tr><td>-s</td><td>表示每个TaskManager的slots数量</td></tr><tr><td>-d</td><td>表示以后台程序方式运行</td></tr></tbody></table><h1 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">flink run <span class="token parameter variable">-m</span> yarn-cluster <span class="token parameter variable">-yjm</span> <span class="token number">1024</span> <span class="token parameter variable">-ytm</span> <span class="token number">1024</span> /opt/app/flink-1.14.5/examples/batch/WordCount.jar <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>-m  jobmanager的地址<br>-yjm 1024 指定jobmanager的内存信息<br>-ytm 1024 指定taskmanager的内存信息</p></blockquote><h1 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h1><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> root@22.22.22.22 <span class="token parameter variable">-p</span> <span class="token number">54321</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">function</span> ssh-copy-id<span class="token punctuation">(</span><span class="token punctuation">[</span>string<span class="token punctuation">]</span><span class="token variable">$userAtMachine</span>, <span class="token variable">$args</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token variable">$publicKey</span> <span class="token operator">=</span> <span class="token string">"<span class="token variable">$ENV</span>:USERPROFILE"</span> + <span class="token string">"/.ssh/id_rsa.pub"</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>Test-Path <span class="token string">"<span class="token variable">$publicKey</span>"</span><span class="token punctuation">))</span><span class="token punctuation">&#123;</span>        Write-Error <span class="token string">"ERROR: failed to open ID file '<span class="token variable">$publicKey</span>': No such file"</span>                <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token operator">&amp;</span> <span class="token function">cat</span> <span class="token string">"<span class="token variable">$publicKey</span>"</span> <span class="token operator">|</span> <span class="token function">ssh</span> <span class="token variable">$args</span> <span class="token variable">$userAtMachine</span> <span class="token string">"umask 077; test -d .ssh || mkdir .ssh ; cat >> .ssh/authorized_keys || exit 1"</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-copy-id root@192.168.150.129<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="报错-2"><a href="#报错-2" class="headerlink" title="报错"></a>报错</h2><h3 id="Ubuntu20-04-之SSH-Connection-refused-问题的解决"><a href="#Ubuntu20-04-之SSH-Connection-refused-问题的解决" class="headerlink" title="Ubuntu20.04 之SSH Connection refused 问题的解决"></a>Ubuntu20.04 之SSH Connection refused 问题的解决</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> openssh-server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> pull <span class="token parameter variable">--all</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/LookSeeWatch/GardenerOS.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token function">add</span> LookSeeWatch-GardenerOS https://github.com/LookSeeWatch/GardenerOS.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>(输入token)</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push LookSeeWatch-GardenerOS<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">"实验1"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> shiYan1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch <span class="token parameter variable">-D</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230726230100.png]]</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">docker</span> run <span class="token punctuation">\</span><span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> c7-d-1 <span class="token punctuation">\</span><span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token punctuation">\</span><span class="token parameter variable">-p</span> <span class="token number">10022</span>:22 <span class="token parameter variable">-p</span> <span class="token number">10080</span>:80 <span class="token punctuation">\</span><span class="token parameter variable">-h</span> c7-docker-1 <span class="token punctuation">\</span><span class="token parameter variable">-v</span> /home/container/c7-d-1:/home/c7-d-1-remote <span class="token punctuation">\</span>centos:7 /usr/sbin/init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>参数：</th><th>说明：</th></tr></thead><tbody><tr><td>-d</td><td>后台运行方式</td></tr><tr><td>–name</td><td>创建的容器名，方便启动、关闭、重启、删除容器等操作</td></tr><tr><td>–privileged&#x3D;true</td><td>加上之后容器内部权限更多，不会出现权限问题</td></tr><tr><td>-p 10022:22 -p 10080:80</td><td>指定端口映射，可同时放通多个端口</td></tr><tr><td>-h c7-docker-1</td><td>指定容器主机名</td></tr><tr><td>-v &#x2F;home&#x2F;fd&#x2F;container&#x2F;c7-d-1:&#x2F;home&#x2F;c7-d1-ys</td><td>宿主机目录映射到容器内部目录</td></tr><tr><td>centos:7</td><td>本地centos镜像版本</td></tr><tr><td>&#x2F;usr&#x2F;sbin&#x2F;init</td><td>启动方式</td></tr></tbody></table><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> c7-d-1 /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> <span class="token parameter variable">-p</span> <span class="token number">10022</span>  root@localhost<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl status <span class="token function">docker</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> system prune <span class="token parameter variable">-a</span> <span class="token parameter variable">--volumes</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> start afad86ff0343<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> afad86ff0343  /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230624132348.png]]</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token function">ps</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230624132431.png]]</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token function">cp</span> /root/GardenerOS/bootloader afad86ff0343:/root/mnt/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token function">rm</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">-q</span><span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> images<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> rmi <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> images <span class="token parameter variable">-q</span><span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> rmi <span class="token parameter variable">-f</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> images <span class="token parameter variable">-q</span><span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="MarkDown"><a href="#MarkDown" class="headerlink" title="MarkDown"></a>MarkDown</h1><h2 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h2><ul><li>[!] 注意</li><li><input checked disabled type="checkbox"> 完成</li><li>[?] 疑问</li><li><input disabled type="checkbox"> ⏫ 📅 2023-03-20 🛫 2023-03-20 ⏳ 2023-03-20</li></ul><h1 id="MatPlotLib"><a href="#MatPlotLib" class="headerlink" title="MatPlotLib"></a>MatPlotLib</h1><h2 id="报错-3"><a href="#报错-3" class="headerlink" title="报错"></a>报错</h2><h3 id="绘图显示缺少中文字体－RuntimeWarning-Glyph-8722-missing-from-current-font"><a href="#绘图显示缺少中文字体－RuntimeWarning-Glyph-8722-missing-from-current-font" class="headerlink" title="绘图显示缺少中文字体－RuntimeWarning: Glyph 8722 missing from current font"></a>绘图显示缺少中文字体－RuntimeWarning: Glyph 8722 missing from current font</h3><pre class="line-numbers language-text" data-language="text"><code class="language-text">D:\Projects\Python\torchDemo\torch-venv\Lib\site-packages\matplotlib\mpl-data\fonts\ttf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib    <span class="token keyword">print</span><span class="token punctuation">(</span>matplotlib<span class="token punctuation">.</span>matplotlib_fname<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">import</span> matplotlib<span class="token keyword">print</span><span class="token punctuation">(</span>matplotlib<span class="token punctuation">.</span>get_cachedir<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> matplotlibmatplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.family'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'SimHei'</span>matplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.size'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">10</span>matplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'axes.unicode_minus'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">False</span><span class="token triple-quoted-string string">''' 使用下面语句也可以plt.rcParams['font.family'] = 'SimHei'plt.rcParams['font.size'] = 10plt.rcParams['axes.unicode_minus']=False'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230528004750.png]]</p><h1 id="maven-1"><a href="#maven-1" class="headerlink" title="maven"></a>maven</h1><pre class="line-numbers language-text" data-language="text"><code class="language-text">D:\java\maven\apache-maven-3.8.4-bin\apache-maven-3.8.4\conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Android-studio"><a href="#Android-studio" class="headerlink" title="Android studio"></a>Android studio</h1><h2 id="openCV"><a href="#openCV" class="headerlink" title="openCV"></a>openCV</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">javah <span class="token parameter variable">-encoding</span> UTF-8 com.example.opencvdemo.MainActivity<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="报错-4"><a href="#报错-4" class="headerlink" title="报错"></a>报错</h2><h3 id="打不开"><a href="#打不开" class="headerlink" title="打不开"></a>打不开</h3><p>删除</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">C:\Users\30337\AppData\Roaming\Google<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>和</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">C:\Users\30337\AppData\Local\Google<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>文件夹下面的<br>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230518194505.png]]<br>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230518195402.png]]</p><h1 id="openVino"><a href="#openVino" class="headerlink" title="openVino"></a>openVino</h1><h2 id="Download-a-Model-and-Convert-it-into-OpenVINO™-IR-Format"><a href="#Download-a-Model-and-Convert-it-into-OpenVINO™-IR-Format" class="headerlink" title="Download a Model and Convert it into OpenVINO™ IR Format"></a>Download a Model and Convert it into OpenVINO™ IR Format</h2><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230902123011.png]]</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">omz_downloader <span class="token parameter variable">--name</span> <span class="token operator">&lt;</span>model_name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">omz_converter <span class="token parameter variable">--name</span> <span class="token operator">&lt;</span>model_name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="测试-3"><a href="#测试-3" class="headerlink" title="测试"></a>测试</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mo <span class="token parameter variable">-h</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h1><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">service</span> redis-server start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">redis-cli <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token function">ping</span>PONG<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h1><h2 id="源"><a href="#源" class="headerlink" title="源"></a>源</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda config <span class="token parameter variable">--set</span> show_channel_urls <span class="token function">yes</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-json" data-language="json"><code class="language-json">ssl_verify<span class="token operator">:</span> <span class="token boolean">true</span>channels<span class="token operator">:</span>  - defaultsshow_channel_urls<span class="token operator">:</span> <span class="token boolean">true</span>default_channels<span class="token operator">:</span>  - http<span class="token operator">:</span><span class="token comment">//mirrors.aliyun.com/anaconda/pkgs/main</span>  - http<span class="token operator">:</span><span class="token comment">//mirrors.aliyun.com/anaconda/pkgs/r</span>  - http<span class="token operator">:</span><span class="token comment">//mirrors.aliyun.com/anaconda/pkgs/msys2</span>custom_channels<span class="token operator">:</span>  conda-forge<span class="token operator">:</span> http<span class="token operator">:</span><span class="token comment">//mirrors.aliyun.com/anaconda/cloud</span>  msys2<span class="token operator">:</span> http<span class="token operator">:</span><span class="token comment">//mirrors.aliyun.com/anaconda/cloud</span>  bioconda<span class="token operator">:</span> http<span class="token operator">:</span><span class="token comment">//mirrors.aliyun.com/anaconda/cloud</span>  menpo<span class="token operator">:</span> http<span class="token operator">:</span><span class="token comment">//mirrors.aliyun.com/anaconda/cloud</span>  pytorch<span class="token operator">:</span> http<span class="token operator">:</span><span class="token comment">//mirrors.aliyun.com/anaconda/cloud</span>  simpleitk<span class="token operator">:</span> http<span class="token operator">:</span><span class="token comment">//mirrors.aliyun.com/anaconda/cloud</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230514222057.png]]</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda clean <span class="token parameter variable">-i</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h1><h2 id="启动-1"><a href="#启动-1" class="headerlink" title="启动"></a>启动</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mongod <span class="token parameter variable">-dbpath</span> D:<span class="token punctuation">\</span>MongoDB<span class="token punctuation">\</span>data<span class="token punctuation">\</span>db<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mongosh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mongodb://127.0.0.1:27017/?directConnection<span class="token operator">=</span>true<span class="token operator">&amp;</span><span class="token assign-left variable">serverSelectionTimeoutMS</span><span class="token operator">=</span><span class="token number">2000</span><span class="token operator">&amp;</span><span class="token assign-left variable">appName</span><span class="token operator">=</span>mongosh+1.8.2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="SQLserver"><a href="#SQLserver" class="headerlink" title="SQLserver"></a>SQLserver</h1><h2 id="报错-5"><a href="#报错-5" class="headerlink" title="报错"></a>报错</h2><h3 id="用户’sa’登录失败（错误18456）"><a href="#用户’sa’登录失败（错误18456）" class="headerlink" title="用户’sa’登录失败（错误18456）"></a>用户’sa’登录失败（错误18456）</h3><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230503091809.png]]</p><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230503091940.png]]</p><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="端口监听"><a href="#端口监听" class="headerlink" title="端口监听"></a>端口监听</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">netstat</span> <span class="token parameter variable">-ntlp</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl status firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl disable firewalld.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="MapReduce"><a href="#MapReduce" class="headerlink" title="MapReduce"></a>MapReduce</h1><h1 id="测试-4"><a href="#测试-4" class="headerlink" title="测试"></a>测试</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hadoop jar /opt/app/hadoop-3.2.0/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar  wordcount /demo/wordCount.txt /demo/output<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="报错-6"><a href="#报错-6" class="headerlink" title="报错"></a>报错</h2><h3 id="x2F-bin-x2F-bash-x2F-bin-x2F-java-No-such-file-or-directory"><a href="#x2F-bin-x2F-bash-x2F-bin-x2F-java-No-such-file-or-directory" class="headerlink" title="&#x2F;bin&#x2F;bash: &#x2F;bin&#x2F;java: No such file or directory"></a>&#x2F;bin&#x2F;bash: &#x2F;bin&#x2F;java: No such file or directory</h3><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ln</span> <span class="token parameter variable">-s</span> /opt/app/jdk1.8.0_361/bin/java  /bin/java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="hbase"><a href="#hbase" class="headerlink" title="hbase"></a>hbase</h1><h2 id="phoenix"><a href="#phoenix" class="headerlink" title="phoenix"></a>phoenix</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">python <span class="token operator">/</span>opt<span class="token operator">/</span>app<span class="token operator">/</span>phoenix<span class="token operator">-</span>hbase<span class="token operator">-</span><span class="token number">2.5</span><span class="token operator">-</span><span class="token number">5.1</span><span class="token number">.3</span><span class="token operator">-</span><span class="token builtin">bin</span><span class="token operator">/</span><span class="token builtin">bin</span><span class="token operator">/</span>sqlline<span class="token punctuation">.</span>py hadoop201<span class="token punctuation">,</span>hadoop202<span class="token punctuation">,</span>hadoop203<span class="token punctuation">:</span><span class="token number">2181</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="报错-7"><a href="#报错-7" class="headerlink" title="报错"></a>报错</h2><h3 id="ERROR-KeeperErrorCode-x3D-NoNode-for-x2F-hbase-x2F-master"><a href="#ERROR-KeeperErrorCode-x3D-NoNode-for-x2F-hbase-x2F-master" class="headerlink" title="ERROR: KeeperErrorCode &#x3D; NoNode for &#x2F;hbase&#x2F;master"></a>ERROR: KeeperErrorCode &#x3D; NoNode for &#x2F;hbase&#x2F;master</h3><h1 id="解决办法-1"><a href="#解决办法-1" class="headerlink" title="解决办法"></a>解决办法</h1><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230428013103.png]]</p><p><a href="https://blog.csdn.net/qq_50869885/article/details/127576186?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-127576186-blog-99863987.235%5Ev32%5Epc_relevant_default_base3&spm=1001.2101.3001.4242.1&utm_relevant_index=3">(25条消息) ERROR: KeeperErrorCode &#x3D; NoNode for &#x2F;hbase&#x2F;master与Path does not exist on HDFS or WebHDFS is disabled-CSDN博客</a></p><h1 id="hive"><a href="#hive" class="headerlink" title="hive"></a>hive</h1><h2 id="JDBC连接"><a href="#JDBC连接" class="headerlink" title="JDBC连接"></a>JDBC连接</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hive <span class="token parameter variable">--service</span> hiveserver2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hive <span class="token parameter variable">--service</span> metastore<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">beeline <span class="token parameter variable">-u</span> jdbc:hive2://hadoop201:10000 <span class="token parameter variable">-n</span> root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="报错-8"><a href="#报错-8" class="headerlink" title="报错"></a>报错</h2><h3 id="Permission-denied-user-x3D-anonymous-access-x3D-EXECUTE-inode-x3D-”-x2F-tmp-x2F-hadoop-yarn”-root-supergroup-drwxrwx—"><a href="#Permission-denied-user-x3D-anonymous-access-x3D-EXECUTE-inode-x3D-”-x2F-tmp-x2F-hadoop-yarn”-root-supergroup-drwxrwx—" class="headerlink" title="Permission denied: user&#x3D;anonymous, access&#x3D;EXECUTE, inode&#x3D;”&#x2F;tmp&#x2F;hadoop-yarn”:root:supergroup:drwxrwx—"></a>Permission denied: user&#x3D;anonymous, access&#x3D;EXECUTE, inode&#x3D;”&#x2F;tmp&#x2F;hadoop-yarn”:root:supergroup:drwxrwx—</h3><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230429003639.png]]</p><h1 id="解决办法-2"><a href="#解决办法-2" class="headerlink" title="解决办法"></a>解决办法</h1><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230429003853.png]]</p><p><code>hdfs-site.xml</code></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.permissions.enabled<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230429003722.png]]</p><h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><h2 id="报错-9"><a href="#报错-9" class="headerlink" title="报错"></a>报错</h2><h3 id="无法远程连接"><a href="#无法远程连接" class="headerlink" title="无法远程连接"></a>无法远程连接</h3><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230716200321.png]]</p><p><code>解决办法</code><br>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230716200432.png]]</p><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230716200304.png]]</p><h2 id="启动-2"><a href="#启动-2" class="headerlink" title="启动"></a>启动</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl <span class="token builtin class-name">enable</span> mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mysql <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="spark"><a href="#spark" class="headerlink" title="spark"></a>spark</h1><p><img src="/./saprk"></p><h2 id="测试程序-1"><a href="#测试程序-1" class="headerlink" title="测试程序"></a>测试程序</h2><h3 id="yarn模式-1"><a href="#yarn模式-1" class="headerlink" title="yarn模式"></a>yarn模式</h3><h1 id="测试-5"><a href="#测试-5" class="headerlink" title="测试"></a>测试</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">spark-submit <span class="token parameter variable">--class</span> org.apache.spark.examples.SparkPi <span class="token parameter variable">--master</span> <span class="token function">yarn</span> --deploy-mode cluster /opt/app/spark-3.2.3-bin-hadoop3.2/examples/jars/spark-examples_2.12-3.2.3.jar  <span class="token number">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="spark-shell"><a href="#spark-shell" class="headerlink" title="spark shell"></a>spark shell</h3><h1 id="测试-6"><a href="#测试-6" class="headerlink" title="测试"></a>测试</h1><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala">sc<span class="token punctuation">.</span>parallelize<span class="token punctuation">(</span>List<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">(</span>e<span class="token keyword">=></span>e<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reduce<span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token keyword">=></span>a<span class="token operator">+</span>b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="maven依赖"><a href="#maven依赖" class="headerlink" title="maven依赖"></a>maven依赖</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>spark.demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark.demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>inceptionYear</span><span class="token punctuation">></span></span>2008<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>inceptionYear</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scala.version</span><span class="token punctuation">></span></span>2.12.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scala.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--引入Scala依赖库--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.scala-lang<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>scala-library<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.12.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- Spark各组件库================================================================== --></span>        <span class="token comment">&lt;!--Spark核心库--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark-core_2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.2.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--Spark SQL所需库--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark-sql_2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.2.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--Spark Streaming所需库--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark-streaming_2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.2.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.kafka<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>kafka-clients<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.2.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--Spark Streaming针对Kafka的依赖库--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark-streaming-kafka-0-10_2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.2.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.spark/spark-sql-kafka-0-10 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark-sql-kafka-0-10_2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.2.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--Graphx的依赖库--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark-graphx_2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.2.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- Spark读写HBase所需库================================================================== --></span>        <span class="token comment">&lt;!-- Hadoop通用API --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.hadoop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hadoop-common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- Hadoop客户端API --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.hadoop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hadoop-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- HBase客户端API --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.hbase<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hbase-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.4.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- HBase针对MapReduce的API --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.hbase<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hbase-mapreduce<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.4.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.hbase<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hbase-server<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.4.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.specs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>specs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.scala-tools/maven-scala-plugin --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.scala-tools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-scala-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-eclipse-plugin --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-eclipse-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.5.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h1><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip  <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> jupyter<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="报错-10"><a href="#报错-10" class="headerlink" title="报错"></a>报错</h2><h3 id="ERROR-Can-not-perform-a-‘–user‘-install-User-site-packages-are-not-visible-in-this-virtualenv"><a href="#ERROR-Can-not-perform-a-‘–user‘-install-User-site-packages-are-not-visible-in-this-virtualenv" class="headerlink" title="ERROR: Can not perform a ‘–user‘ install. User site-packages are not visible in this virtualenv"></a>ERROR: Can not perform a ‘–user‘ install. User site-packages are not visible in this virtualenv</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-m</span> pip <span class="token function">install</span> tensorflow<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="ModuleNotFoundError-No-module-named-‘pip’"><a href="#ModuleNotFoundError-No-module-named-‘pip’" class="headerlink" title="ModuleNotFoundError: No module named ‘pip’"></a>ModuleNotFoundError: No module named ‘pip’</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-m</span> ensurepip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="pip-conf"><a href="#pip-conf" class="headerlink" title="pip.conf"></a>pip.conf</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token parameter variable">-v</span> config list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230331003943.png]]</p><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">global</span><span class="token punctuation">]</span></span><span class="token key attr-name">index-url</span> <span class="token punctuation">=</span> <span class="token value attr-value">https://mirrors.aliyun.com/pypi/simple/</span><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">install</span><span class="token punctuation">]</span></span><span class="token key attr-name">trusted-host</span><span class="token punctuation">=</span><span class="token value attr-value">mirrors.aliyun.com</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230331004300.png]]</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip3 config <span class="token builtin class-name">set</span> global.extra-index-url http://mirrors.aliyun.com/pypi/simple<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="cache"><a href="#cache" class="headerlink" title="cache"></a>cache</h2><ul><li>清除命令</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip cache purge<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>缓存目录</li></ul><pre class="line-numbers language-text" data-language="text"><code class="language-text">C:\Users\30337\AppData\Local\pip\cache<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="源-1"><a href="#源-1" class="headerlink" title="源"></a>源</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token parameter variable">-i</span> https://pypi.mirrors.ustc.edu.cn/simple<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Sublime"><a href="#Sublime" class="headerlink" title="Sublime"></a>Sublime</h1><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="CoolFormat"><a href="#CoolFormat" class="headerlink" title="CoolFormat"></a>CoolFormat</h3><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230420230848.png]]</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span>    <span class="token property">"caption"</span><span class="token operator">:</span> <span class="token string">"CoolFormat"</span><span class="token punctuation">,</span>    <span class="token property">"children"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"caption"</span><span class="token operator">:</span> <span class="token string">"CoolFormat: Quick Format"</span><span class="token punctuation">,</span>        <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"coolformat"</span><span class="token punctuation">,</span>        <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"action"</span><span class="token operator">:</span> <span class="token string">"quickFormat"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"caption"</span><span class="token operator">:</span> <span class="token string">"CoolFormat: Selected Format"</span><span class="token punctuation">,</span>        <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"coolformat"</span><span class="token punctuation">,</span>        <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"action"</span><span class="token operator">:</span> <span class="token string">"selectedFormat"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"caption"</span><span class="token operator">:</span> <span class="token string">"CoolFormat: Formatter Settings"</span><span class="token punctuation">,</span>        <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"coolformat"</span><span class="token punctuation">,</span>        <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"action"</span><span class="token operator">:</span> <span class="token string">"formatterSettings"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span> <span class="token property">"font_face"</span><span class="token operator">:</span> <span class="token string">"Ubuntu Mono"</span><span class="token punctuation">,</span> <span class="token property">"font_size"</span><span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token property">"font_options"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"no_italic"</span><span class="token punctuation">,</span><span class="token string">"gdi"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"word_wrap"</span><span class="token operator">:</span> <span class="token string">"true"</span><span class="token punctuation">,</span>    <span class="token property">"theme"</span><span class="token operator">:</span> <span class="token string">"Default.sublime-theme"</span><span class="token punctuation">,</span>    <span class="token property">"color_scheme"</span><span class="token operator">:</span> <span class="token string">"Celeste.sublime-color-scheme"</span><span class="token punctuation">,</span>    <span class="token property">"save_on_focus_lost"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token property">"ignored_packages"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"Vintage"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"auto_complete"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="中文字体异常"><a href="#中文字体异常" class="headerlink" title="中文字体异常"></a>中文字体异常</h2><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"font_face"</span><span class="token operator">:</span> <span class="token string">"Source Code Pro"</span><span class="token punctuation">,</span><span class="token property">"font_size"</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span><span class="token property">"font_options"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"gdi"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="torch"><a href="#torch" class="headerlink" title="torch"></a>torch</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip3 <span class="token function">install</span> torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu117<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="环境测试"><a href="#环境测试" class="headerlink" title="环境测试"></a>环境测试</h2><h1 id="测试-7"><a href="#测试-7" class="headerlink" title="测试"></a>测试</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> osos<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">"CUDA_VISIBLE_DEVICES"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"0"</span><span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>device_count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>backends<span class="token punctuation">.</span>cudnn<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>cuda_version<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>backends<span class="token punctuation">.</span>cudnn<span class="token punctuation">.</span>version<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="visdom"><a href="#visdom" class="headerlink" title="visdom"></a>visdom</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-m</span> visdom.server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="启动Dive-into-DL-PyTorch"><a href="#启动Dive-into-DL-PyTorch" class="headerlink" title="启动Dive-into-DL-PyTorch"></a>启动<code>Dive-into-DL-PyTorch</code></h2><p>首先进入目录，<br>然后，</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docsify serve docs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="报错-11"><a href="#报错-11" class="headerlink" title="报错"></a>报错</h2><h3 id="pytorch安装之后不能使用cuda"><a href="#pytorch安装之后不能使用cuda" class="headerlink" title="pytorch安装之后不能使用cuda"></a>pytorch安装之后不能使用cuda</h3><p>安装torch版本不对</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip3 <span class="token function">install</span> <span class="token assign-left variable">torch</span><span class="token operator">==</span><span class="token number">1.11</span>.0+cu113 <span class="token assign-left variable">torchvision</span><span class="token operator">==</span><span class="token number">0.12</span>.0+cu113 <span class="token assign-left variable">torchaudio</span><span class="token operator">==</span><span class="token number">0.11</span>.0+cu113 <span class="token parameter variable">-f</span> https://download.pytorch.org/whl/cu113/torch_stable.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="import-torch报错-NameError-name-‘-C-’-is-not-defined"><a href="#import-torch报错-NameError-name-‘-C-’-is-not-defined" class="headerlink" title="import torch报错 NameError: name ‘ _ C ’ is not defined"></a>import torch报错 NameError: name ‘ _ C ’ is not defined</h3><p>![[Pasted image 20230314143711.png]]<br><a href="https://blog.csdn.net/Paramagnetism/article/details/121253575">(13条消息) import pytorch报错 NameError: name ‘_C‘ is not defined_name ‘_c’ is not defined_Steven山椒鱼的博客-CSDN博客</a></p><h1 id="paddle"><a href="#paddle" class="headerlink" title="paddle"></a>paddle</h1><h2 id="GPU加速"><a href="#GPU加速" class="headerlink" title="GPU加速"></a>GPU加速</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> paddle<span class="token keyword">print</span><span class="token punctuation">(</span>paddle<span class="token punctuation">.</span>device<span class="token punctuation">.</span>get_device<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>paddle<span class="token punctuation">.</span>device<span class="token punctuation">.</span>set_device<span class="token punctuation">(</span><span class="token string">'gpu:0'</span><span class="token punctuation">)</span> <span class="token comment"># 把get—device的结果直接复制进去</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="pip-1"><a href="#pip-1" class="headerlink" title="pip"></a>pip</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-m</span> pip <span class="token function">install</span> paddlepaddle-gpu<span class="token operator">==</span><span class="token number">2.4</span>.2.post117 <span class="token parameter variable">-f</span> https://www.paddlepaddle.org.cn/whl/windows/mkl/avx/stable.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="环境测试-1"><a href="#环境测试-1" class="headerlink" title="环境测试"></a>环境测试</h3><h1 id="测试-8"><a href="#测试-8" class="headerlink" title="测试"></a>测试</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> paddlepaddle<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>run_check<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="报错-12"><a href="#报错-12" class="headerlink" title="报错"></a>报错</h2><h3 id="AssertionError-In-PaddlePaddle-2-x-we-turn-on-dynamic-graph-mode-by-default-and-‘data-‘-is-only"><a href="#AssertionError-In-PaddlePaddle-2-x-we-turn-on-dynamic-graph-mode-by-default-and-‘data-‘-is-only" class="headerlink" title="AssertionError: In PaddlePaddle 2.x, we turn on dynamic graph mode by default, and ‘data()‘ is only"></a>AssertionError: In PaddlePaddle 2.x, we turn on dynamic graph mode by default, and ‘data()‘ is only</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> paddlepaddle<span class="token punctuation">.</span>enable_static<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如下图<br>![[Pasted image 20230315195446.png]]</p><h1 id="各种DLL文件下载方法"><a href="#各种DLL文件下载方法" class="headerlink" title="各种DLL文件下载方法"></a>各种DLL文件下载方法</h1><h2 id="直接在网站https-www-dll-files-com-search-下载"><a href="#直接在网站https-www-dll-files-com-search-下载" class="headerlink" title="直接在网站https://www.dll-files.com/search/下载"></a>直接在网站<a href="https://www.dll-files.com/search/">https://www.dll-files.com/search/</a>下载</h2><p>各种DLL文件下载官网<a href="https://www.dll-files.com/search/">https://www.dll-files.com/search/</a></p><h1 id="CUDA"><a href="#CUDA" class="headerlink" title="CUDA"></a>CUDA</h1><h1 id="镜像-1"><a href="#镜像-1" class="headerlink" title="镜像"></a>镜像</h1><p>国内镜像<br><a href="https://developer.nvidia.cn/downloads">https://developer.nvidia.cn/downloads</a></p><h2 id="查看CUDA版本"><a href="#查看CUDA版本" class="headerlink" title="查看CUDA版本"></a>查看CUDA版本</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nvidia-smi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nvcc <span class="token parameter variable">-V</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="查看基本信息"><a href="#查看基本信息" class="headerlink" title="查看基本信息"></a>查看基本信息</h2><pre class="line-numbers language-none"><code class="language-none">C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.7\extras\demo_suite&gt;deviceQuery.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230527001906.png]]</p><h2 id="测试安装成功"><a href="#测试安装成功" class="headerlink" title="测试安装成功"></a>测试安装成功</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.7\extras\demo_suite<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>![[Pasted image 20230314140743.png]]</p><h2 id="‘nvcc’-不是内部或外部命令，也不是可运行的程序或批处理文件"><a href="#‘nvcc’-不是内部或外部命令，也不是可运行的程序或批处理文件" class="headerlink" title="‘nvcc’ 不是内部或外部命令，也不是可运行的程序或批处理文件"></a>‘nvcc’ 不是内部或外部命令，也不是可运行的程序或批处理文件</h2><p>![[Pasted image 20230314151433.png]]</p><p>![[Pasted image 20230314151607.png]]</p><h2 id="Clion配置CUDA"><a href="#Clion配置CUDA" class="headerlink" title="Clion配置CUDA"></a>Clion配置CUDA</h2><p>![[Pasted image 20230314150751.png]]</p><p>![[Pasted image 20230314150716.png]]</p><p><a href="https://blog.csdn.net/zmh657628320/article/details/126443355">(13条消息) CLION配置CUDA环境_clion cuda_衍生动物的博客-CSDN博客</a></p><h1 id="jupyter-notebook"><a href="#jupyter-notebook" class="headerlink" title="jupyter notebook"></a>jupyter notebook</h1><h2 id="报错-13"><a href="#报错-13" class="headerlink" title="报错"></a>报错</h2><h3 id="启动闪退"><a href="#启动闪退" class="headerlink" title="启动闪退"></a>启动闪退</h3><blockquote><p>ImportError: cannot import name ‘ensure_async’ from ‘jupyter_core.utils’ (D:\Anaconda\lib\site-packages\jupyter_core\utils_<em>init</em>_.py)</p></blockquote><p>跟换版本成功启动<br>如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> <span class="token assign-left variable">jupyter_core</span><span class="token operator">==</span><span class="token number">5.1</span>.2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="pycharm连接报错"><a href="#pycharm连接报错" class="headerlink" title="pycharm连接报错"></a>pycharm连接报错</h3><p>”ImportError: DLL load failed: 找不到指定的模块”</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> pyzmq --force-reinstall<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://blog.csdn.net/Studywithme/article/details/120561188?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-120561188-blog-123649644.pc_relevant_multi_platform_whitelistv4&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-120561188-blog-123649644.pc_relevant_multi_platform_whitelistv4&utm_relevant_index=1">(13条消息) 启动jupyter notebook时提示“ImportError: DLL load failed: 找不到指定的模块”_StudywithDyn的博客-CSDN博客</a></p><p>然后<br>报错显示 No module named ‘pysqlite2’</p><p><a href="https://www.sqlite.org/download.html">SQLite Download Page</a></p><p>![[Pasted image 20230314143057.png]]</p><h2 id="更换默认路径"><a href="#更换默认路径" class="headerlink" title="更换默认路径"></a>更换默认路径</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">jupyter notebook --generate-config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>打开配置文件并修改为</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">c<span class="token punctuation">.</span>NotebookApp<span class="token punctuation">.</span>notebook_dir <span class="token operator">=</span> <span class="token string">'D:\\myJupyterFile'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后，<br>![[Pasted image 20230314134232.png]]</p><h1 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h1><h2 id="有错误说是npm版本问题，npm7在编译的时候会更加严格"><a href="#有错误说是npm版本问题，npm7在编译的时候会更加严格" class="headerlink" title="有错误说是npm版本问题，npm7在编译的时候会更加严格"></a>有错误说是npm版本问题，npm7在编译的时候会更加严格</h2><p>我换成npm6和npm8都不行。并尝试了多个版本的npm替代包——cnpm、pnpm。</p><p>最终的解决方案是:<br>1.npm源换成腾讯源（taobao的地址都install不了 ，试试可以更换其他的registry源地址。)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry http://mirrors.cloud.tencent.com/npm/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.然后这个编译命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --legacy-peer-deps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.启动</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> run serve <span class="token parameter variable">--fix</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="WSL"><a href="#WSL" class="headerlink" title="WSL"></a>WSL</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">wsl <span class="token parameter variable">--list</span> <span class="token parameter variable">--verbose</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://blog.csdn.net/xmh19936688/article/details/90212960">(8条消息) Windows10访问Ubuntu子系统（WSL）的桌面环境_-_-void的博客-CSDN博客</a></p><h2 id="报错-14"><a href="#报错-14" class="headerlink" title="报错"></a>报错</h2><h3 id="x2F-usr-x2F-lib-x2F-wsl-x2F-lib-x2F-libcuda-so-1-is-not-a-symbolic-link"><a href="#x2F-usr-x2F-lib-x2F-wsl-x2F-lib-x2F-libcuda-so-1-is-not-a-symbolic-link" class="headerlink" title="&#x2F;usr&#x2F;lib&#x2F;wsl&#x2F;lib&#x2F;libcuda.so.1 is not a symbolic link"></a>&#x2F;usr&#x2F;lib&#x2F;wsl&#x2F;lib&#x2F;libcuda.so.1 is not a symbolic link</h3><p>其实原因就是libcuda.so.1的文件软链接出了问题。因此，正确且更简单的办法是：  </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/lib/wsl/lib/ <span class="token comment"># 进入报错的这个文件夹；  </span><span class="token function">sudo</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> libcuda.so.1 libcuda.so <span class="token comment"># 删除这2个软链接的文件；  </span><span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> libcuda.so.1.1 libcuda.so.1  <span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> libcuda.so.1.1 libcuda.so <span class="token comment"># 重新建立软链接  </span><span class="token function">sudo</span> ldconfig <span class="token comment">#验证下结果</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>![[..&#x2F;..&#x2F;40 - Obsidian&#x2F;附件&#x2F;Pasted image 20230713223313.png]]</p><h3 id="出现错误-0x80070003-或错误-0x80370102"><a href="#出现错误-0x80070003-或错误-0x80370102" class="headerlink" title="出现错误 0x80070003 或错误 0x80370102"></a>出现错误 <code>0x80070003</code> 或错误 <code>0x80370102</code></h3><p>可能原因：<br>1.计算机BIOS未启用虚拟化；<br>2.VMware与WSL冲突。</p><p>解决方法：<br>1.BIOS启用虚拟化，具体流程可自行百度；<br>2.这是我遇到的问题，没有找到共存的办法，一次只能择一使用。<br>若要启用WSL，使用：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bcdedit /set hypervisorlaunchtype auto<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>若要启用VMware，使用：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bcdedit /set hypervisorlaunchtype off<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="启动-3"><a href="#启动-3" class="headerlink" title="启动"></a>启动</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">service</span> xrdp restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> google-chrome --no-sandbox<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">fish_config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="源-2"><a href="#源-2" class="headerlink" title="源"></a>源</h2><p>下载对应版本最新的源列表：<br><a href="https://mirrors.ustc.edu.cn/repogen/">LUG’s repo file generator (ustc.edu.cn)</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
