<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PicoGo</title>
      <link href="//2023/06/23/PicoGo/"/>
      <url>//2023/06/23/PicoGo/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>vscode快捷键<br><code>ctrl</code>+<code>alt</code>+<code>U</code></p><h1 id="图片示例"><a href="#图片示例" class="headerlink" title="图片示例"></a>图片示例</h1><p><img src="https://cdn.jsdelivr.net/gh/wprofilew/imgs@master/PicoGoDemo.png" alt="PicoGoDemo.png"></p>]]></content>
      
      
      <categories>
          
          <category> PicoGo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PicoGo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Algorithm Study</title>
      <link href="//2023/06/23/Algorithm/"/>
      <url>//2023/06/23/Algorithm/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="leetcode"><a href="#leetcode" class="headerlink" title="leetcode"></a>leetcode</h1><h2 id="problem1"><a href="#problem1" class="headerlink" title="problem1"></a>problem1</h2><blockquote><p>给定一个整数数组 <code>nums</code> 和一个整数目标值 <code>target</code>，请你在该数组中找出和为目标值 <code>target</code>的那两个整数，并返回它们的数组下标。</p></blockquote><h3 id="暴力枚举"><a href="#暴力枚举" class="headerlink" title="暴力枚举"></a>暴力枚举</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>i<span class="token punctuation">,</span> j<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">problem1</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> hashtable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>hashtable<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>target <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>hashtable<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            hashtable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h1><h2 id="对数阶-O-log-n"><a href="#对数阶-O-log-n" class="headerlink" title="对数阶 $O(\log n)$"></a>对数阶 $O(\log n)$</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/* 对数阶（循环实现） */</span><span class="token keyword">int</span> <span class="token function">logarithmic</span><span class="token punctuation">(</span><span class="token keyword">float</span> n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        n <span class="token operator">=</span> n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        count<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> count<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>问题规模为n,操作数为x</p><p>$$<br>2^x&#x3D;n\ \Rightarrow<br>x&#x3D;\log_{2}{n}<br>$$</p><h1 id="空间复杂度"><a href="#空间复杂度" class="headerlink" title="空间复杂度"></a>空间复杂度</h1><h2 id="算法相关空间"><a href="#算法相关空间" class="headerlink" title="算法相关空间"></a>算法相关空间</h2><p>算法运行中，使用的内存空间主要有以下几种：</p><ul><li>「输入空间」用于存储算法的输入数据；</li><li>「暂存空间」用于存储算法运行中的变量、对象、函数上下文等数据；</li><li>「输出空间」用于存储算法的输出数据；</li></ul><blockquote><p>通常情况下，空间复杂度统计范围是「暂存空间」+「输出空间」。</p></blockquote><p>暂存空间可分为三个部分：</p><ul><li>「暂存数据」用于保存算法运行中的各种 常量、变量、对象 等。</li><li>「栈帧空间」用于保存调用函数的上下文数据。系统每次调用函数都会在栈的顶部创建一个栈帧，函数返回时，栈帧空间会被释放。</li><li>「指令空间」用于保存编译后的程序指令，在实际统计中一般忽略不计。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> Study </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Study</title>
      <link href="//2023/06/23/AndroidStudy/"/>
      <url>//2023/06/23/AndroidStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="openCV"><a href="#openCV" class="headerlink" title="openCV"></a>openCV</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">javah <span class="token parameter variable">-encoding</span> UTF-8 com.example.opencvdemo.MainActivity<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Kotlin"><a href="#Kotlin" class="headerlink" title="Kotlin"></a>Kotlin</h1><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><h2 id="AndroidStudio-图标双击没有反应-打不开"><a href="#AndroidStudio-图标双击没有反应-打不开" class="headerlink" title="AndroidStudio 图标双击没有反应,打不开"></a>AndroidStudio 图标双击没有反应,打不开</h2><p><img src="https://cdn.jsdelivr.net/gh/WprofileW/imgs@master/blog/img20231015165705.png" alt="20231015165705"></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++语言学习</title>
      <link href="//2023/06/23/cppStudy/"/>
      <url>//2023/06/23/cppStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="struct"><a href="#struct" class="headerlink" title="struct"></a>struct</h1><p><a href="https://blog.csdn.net/a_forever_dream/article/details/88867801">(9条消息) c++中struct构造函数_c++ struct 构造函数_Hypoc_的博客-CSDN博客</a></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span><span class="token keyword">struct</span> <span class="token class-name">node</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> x<span class="token punctuation">;</span>    <span class="token function">node</span><span class="token punctuation">(</span><span class="token keyword">int</span> z<span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">x</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token function">node</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    node a<span class="token punctuation">;</span>    node <span class="token function">b</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d %d\n"</span><span class="token punctuation">,</span>a<span class="token punctuation">.</span>x<span class="token punctuation">,</span>b<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="template"><a href="#template" class="headerlink" title="template"></a>template</h1><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token comment">// template 关键字告诉C++编译器 下面是个泛型模板</span><span class="token comment">// 数据类型T 参数化数据类型</span><span class="token keyword">template</span> <span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">T</span><span class="token operator">></span><span class="token keyword">void</span> <span class="token function">generic_swap</span><span class="token punctuation">(</span>T <span class="token operator">&amp;</span>a<span class="token punctuation">,</span> T <span class="token operator">&amp;</span>b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Initial value: "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> <span class="token string">" : "</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    T tmp<span class="token punctuation">;</span>    tmp <span class="token operator">=</span> b<span class="token punctuation">;</span>    b <span class="token operator">=</span> a<span class="token punctuation">;</span>    a <span class="token operator">=</span> tmp<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>    <span class="token function">generic_swap</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"excute the swap():"</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> <span class="token string">" : "</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token char">'A'</span><span class="token punctuation">,</span> d <span class="token operator">=</span> <span class="token char">'B'</span><span class="token punctuation">;</span>    <span class="token function">generic_swap</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"excute the swap():"</span> <span class="token operator">&lt;&lt;</span> c <span class="token operator">&lt;&lt;</span> <span class="token string">" : "</span> <span class="token operator">&lt;&lt;</span> d <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    string e <span class="token operator">=</span> <span class="token string">"Jacky"</span><span class="token punctuation">,</span> f <span class="token operator">=</span> <span class="token string">"Lucy"</span><span class="token punctuation">;</span>    <span class="token function">generic_swap</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"excute the swap():"</span> <span class="token operator">&lt;&lt;</span> e <span class="token operator">&lt;&lt;</span> <span class="token string">" : "</span> <span class="token operator">&lt;&lt;</span> f <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">double</span> j <span class="token operator">=</span> <span class="token number">1.314</span><span class="token punctuation">,</span> k <span class="token operator">=</span> <span class="token number">5.12</span><span class="token punctuation">;</span>    <span class="token function">generic_swap</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"excute the swap():"</span> <span class="token operator">&lt;&lt;</span> j <span class="token operator">&lt;&lt;</span> <span class="token string">" : "</span> <span class="token operator">&lt;&lt;</span> k <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../image/Snipaste_2023-03-05_00-18-39.png"></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token comment">//注意：模板头和类头是一个整体，可以换行，但是中间不能有分号</span><span class="token keyword">template</span><span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">T1</span><span class="token punctuation">,</span> <span class="token keyword">typename</span> <span class="token class-name">T2</span><span class="token operator">></span>  <span class="token comment">//这里不能有分号</span><span class="token keyword">class</span> <span class="token class-name">Point</span> <span class="token punctuation">&#123;</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token function">Point</span><span class="token punctuation">(</span>T1 x<span class="token punctuation">,</span> T2 y<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">m_x</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">m_y</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span class="token keyword">public</span><span class="token operator">:</span>    T1 <span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>  <span class="token comment">//获取x坐标</span>    <span class="token keyword">void</span> <span class="token function">setX</span><span class="token punctuation">(</span>T1 x<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//设置x坐标</span>    T2 <span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>  <span class="token comment">//获取y坐标</span>    <span class="token keyword">void</span> <span class="token function">setY</span><span class="token punctuation">(</span>T2 y<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//设置y坐标</span><span class="token keyword">private</span><span class="token operator">:</span>    T1 m_x<span class="token punctuation">;</span>  <span class="token comment">//x坐标</span>    T2 m_y<span class="token punctuation">;</span>  <span class="token comment">//y坐标</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">//下面就对 Point 类的成员函数进行定义</span><span class="token keyword">template</span><span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">T1</span><span class="token punctuation">,</span> <span class="token keyword">typename</span> <span class="token class-name">T2</span><span class="token operator">></span> T1 <span class="token class-name">Point</span><span class="token operator">&lt;</span>T1<span class="token punctuation">,</span> T2<span class="token operator">></span><span class="token double-colon punctuation">::</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> m_x<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">template</span><span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">T1</span><span class="token punctuation">,</span> <span class="token keyword">typename</span> <span class="token class-name">T2</span><span class="token operator">></span> <span class="token keyword">void</span> <span class="token class-name">Point</span><span class="token operator">&lt;</span>T1<span class="token punctuation">,</span> T2<span class="token operator">></span><span class="token double-colon punctuation">::</span><span class="token function">setX</span><span class="token punctuation">(</span>T1 x<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    m_x <span class="token operator">=</span> x<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">template</span><span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">T1</span><span class="token punctuation">,</span> <span class="token keyword">typename</span> <span class="token class-name">T2</span><span class="token operator">></span> T2 <span class="token class-name">Point</span><span class="token operator">&lt;</span>T1<span class="token punctuation">,</span> T2<span class="token operator">></span><span class="token double-colon punctuation">::</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> m_y<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">template</span><span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">T1</span><span class="token punctuation">,</span> <span class="token keyword">typename</span> <span class="token class-name">T2</span><span class="token operator">></span> <span class="token keyword">void</span> <span class="token class-name">Point</span><span class="token operator">&lt;</span>T1<span class="token punctuation">,</span> T2<span class="token operator">></span><span class="token double-colon punctuation">::</span><span class="token function">setY</span><span class="token punctuation">(</span>T2 y<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    m_y <span class="token operator">=</span> y<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 与函数模板不同的是，类模板在实例化时必须显式地指明数据类型</span>    <span class="token comment">// 编译器不能根据给定的数据推演出数据类型</span>    Point<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">></span> <span class="token function">p1</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"x="</span> <span class="token operator">&lt;&lt;</span> p1<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">", y="</span> <span class="token operator">&lt;&lt;</span> p1<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    Point<span class="token operator">&lt;</span><span class="token keyword">float</span><span class="token punctuation">,</span> <span class="token keyword">float</span><span class="token operator">></span> <span class="token function">p2</span><span class="token punctuation">(</span><span class="token number">12.88</span><span class="token punctuation">,</span> <span class="token number">129.65</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"x="</span> <span class="token operator">&lt;&lt;</span> p2<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">", y="</span> <span class="token operator">&lt;&lt;</span> p2<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    Point<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> string<span class="token operator">></span> <span class="token function">p3</span><span class="token punctuation">(</span><span class="token string">"E180"</span><span class="token punctuation">,</span><span class="token string">"N210"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"x="</span> <span class="token operator">&lt;&lt;</span> p3<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">", y="</span> <span class="token operator">&lt;&lt;</span> p3<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    Point<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">float</span><span class="token operator">></span> <span class="token function">p4</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">129.65</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"x="</span> <span class="token operator">&lt;&lt;</span> p4<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">", y="</span> <span class="token operator">&lt;&lt;</span> p4<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    Point<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">></span> <span class="token function">p5</span><span class="token punctuation">(</span><span class="token string">"hello,world!"</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"x="</span> <span class="token operator">&lt;&lt;</span> p5<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">", y="</span> <span class="token operator">&lt;&lt;</span> p5<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token comment">//除了对象变量，我们也可以使用对象指针的方式来实例化</span>    Point<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">></span><span class="token operator">*</span> p7 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token generic-function"><span class="token function">Point</span><span class="token generic class-name"><span class="token operator">&lt;</span>string<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token string">"hello,world!"</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"x="</span> <span class="token operator">&lt;&lt;</span> p7<span class="token operator">-></span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">", y="</span> <span class="token operator">&lt;&lt;</span> p7<span class="token operator">-></span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">delete</span> p7<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../image/2023-03-04-23-37-03-image.png"></p>]]></content>
      
      
      <categories>
          
          <category> cpp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cpp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSAPP</title>
      <link href="//2023/06/23/CSapp/"/>
      <url>//2023/06/23/CSapp/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="易混点"><a href="#易混点" class="headerlink" title="易混点"></a>易混点</h1><h2 id="数据量的度量单位"><a href="#数据量的度量单位" class="headerlink" title="数据量的度量单位"></a>数据量的度量单位</h2><p><img src="/../image/Snipaste_2023-01-27_19-32-16.png"></p>]]></content>
      
      
      <categories>
          
          <category> CSAPP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSAPP </tag>
            
            <tag> books </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c语言学习</title>
      <link href="//2023/06/23/cStudy/"/>
      <url>//2023/06/23/cStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><h3 id="创建和使用结构体"><a href="#创建和使用结构体" class="headerlink" title="创建和使用结构体"></a>创建和使用结构体</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">struct</span> <span class="token class-name">Student</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 使用 (struct关键字 + 结构体类型名称)</span>    <span class="token comment">// 来声明结构体类型，这种类型是我们自己创建的（同样也可以作为函数的参数、返回值之类的）</span>    <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token comment">// 结构体中可以包含多个不同类型的数据，这些数据共同组成了整个结构体类型（当然结构体内部也能包含结构体类型的变量）</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token comment">// 用户名可以用指针指向一个字符串，也可以用char数组来存，如果是指针的话，那么数据不会存在结构体中，只会存放字符串的地址，但是如果是数组的话，数据会存放在结构体中</span>    <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">struct</span> <span class="token class-name">Student</span> stu0 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">000</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">"Liang0"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"id=%d age=%d name=%s \n"</span><span class="token punctuation">,</span> stu0<span class="token punctuation">.</span>id<span class="token punctuation">,</span> stu0<span class="token punctuation">.</span>age<span class="token punctuation">,</span> stu0<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    stu0<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"Studentc"</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"id=%d age=%d name=%s \n"</span><span class="token punctuation">,</span> stu0<span class="token punctuation">.</span>id<span class="token punctuation">,</span> stu0<span class="token punctuation">.</span>age<span class="token punctuation">,</span> stu0<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../image/Snipaste_2023-02-16_10-17-46.png"></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">struct</span> <span class="token class-name">student</span><span class="token punctuation">&#123;</span>    <span class="token keyword">long</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> stu2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">002</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">"Liang2"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> stu4<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"id=%ld age=%d name=%s \n"</span><span class="token punctuation">,</span> stu2<span class="token punctuation">.</span>id<span class="token punctuation">,</span> stu2<span class="token punctuation">.</span>age<span class="token punctuation">,</span> stu2<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">student</span> stu0 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">000</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">"Liang0"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"id=%ld age=%d name=%s \n"</span><span class="token punctuation">,</span> stu0<span class="token punctuation">.</span>id<span class="token punctuation">,</span> stu0<span class="token punctuation">.</span>age<span class="token punctuation">,</span> stu0<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">student</span> stu1<span class="token punctuation">;</span> <span class="token comment">// 定义了一个student类型的变量stu1</span>    stu1<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">001</span><span class="token punctuation">;</span>       <span class="token comment">// 通过成员运算符'.'来访问结构体的成员变量</span>    stu1<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">21</span><span class="token punctuation">;</span>    <span class="token function">strcpy</span><span class="token punctuation">(</span>stu1<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">"Liang1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 因为数组在非初始化时，不能直接通过数组名直接赋值，strcpy函数需要包含头文件string.h</span>    <span class="token comment">// 错误的写法：stu1.name = "Liang";</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"id=%ld age=%d name=%s \n"</span><span class="token punctuation">,</span> stu1<span class="token punctuation">.</span>id<span class="token punctuation">,</span> stu1<span class="token punctuation">.</span>age<span class="token punctuation">,</span> stu1<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">student</span> stu3 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">003</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"Liang3"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"id=%ld age=%d name=%s \n"</span><span class="token punctuation">,</span> stu3<span class="token punctuation">.</span>id<span class="token punctuation">,</span> stu3<span class="token punctuation">.</span>age<span class="token punctuation">,</span> stu3<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">student</span> stu5<span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">student</span> <span class="token operator">*</span>sp <span class="token operator">=</span> <span class="token operator">&amp;</span>stu5<span class="token punctuation">;</span>    sp<span class="token operator">-></span>id <span class="token operator">=</span> <span class="token number">005</span><span class="token punctuation">;</span>    <span class="token punctuation">(</span><span class="token operator">*</span>sp<span class="token punctuation">)</span><span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"id=%ld age=%d name=%s \n"</span><span class="token punctuation">,</span> stu5<span class="token punctuation">.</span>id<span class="token punctuation">,</span> stu5<span class="token punctuation">.</span>age<span class="token punctuation">,</span> stu5<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../image/Snipaste_2023-02-16_10-19-38.png"></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">Student</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">Student</span> <span class="token operator">*</span>next<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> Student1<span class="token punctuation">,</span> <span class="token operator">*</span>StudentPtr<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    StudentPtr s1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Student</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Student</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    StudentPtr s2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Student</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Student</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    s1<span class="token operator">-></span>next <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Student</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Student</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    s2<span class="token operator">-></span>next <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Student</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Student</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    s1<span class="token operator">-></span>age <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>    s2<span class="token operator">-></span>age <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> s1<span class="token operator">-></span>age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../image/Snipaste_2023-02-16_10-21-09.png"></p><h3 id="结构体大小"><a href="#结构体大小" class="headerlink" title="结构体大小"></a>结构体大小</h3><p>大小是遵循下面的规则来进行计算的： 结构体中的各个数据要求字节对齐，规则如下：</p><ul><li>规则一：结构体中元素按照定义顺序依次置于内存中，但并不是紧密排列的。从结构体首地址开始依次将元素放入内存时，元素会被放置在其自身对齐大小的整数倍地址上（0默认是所有大小的整数倍）</li><li>规则二：如果结构体大小不是所有元素中最大对齐大小的整数倍，则结构体对齐到最大元素对齐大小的整数倍，填充空间放置到结构体末尾。</li><li>规则三：基本数据类型的对齐大小为其自身的大小，结构体数据类型的对齐大小为其元素中最大对齐大小元素的对齐大小。</li></ul><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">struct</span> <span class="token class-name">Object</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">char</span> a<span class="token punctuation">;</span>   <span class="token comment">//char占据1个字节</span>    <span class="token keyword">int</span> b<span class="token punctuation">;</span>   <span class="token comment">//int占据4个字节，因为前面存了一个char，按理说应该从第2个字节开始存放，但是根据规则一，必须在自己的整数倍位置上存放，所以2不是4的整数倍位置，这时离1最近的下一个整数倍地址就是4了，所以前面空3个字节的位置出来，然后再放置</span>    <span class="token keyword">short</span> c<span class="token punctuation">;</span> <span class="token comment">//前面存完int之后，就是从8开始了，刚好满足short（2字节）的整数倍，但是根据规则二，整个结构体大小必须是最大对齐大小的整数倍（这里最大对齐大小是int，所以是4），存完short之后，只有10个字节，所以屁股后面再补两个空字节，这样就可以了</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="结构体数组"><a href="#结构体数组" class="headerlink" title="结构体数组"></a>结构体数组</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">struct</span> <span class="token class-name">Student</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">struct</span> <span class="token class-name">Student</span> arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"小明"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token comment">// 声明一个结构体类型的数组，其实和基本类型声明数组是一样的</span>                             <span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token string">"小红"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token comment">// 多个结构体数据用逗号隔开</span>                             <span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"小刚"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 先通过arr[1]拿到第二个结构体，然后再通过同样的方式 .数据名称 就可以拿到对应的值了</span>    <span class="token keyword">struct</span> <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"小明"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">Student</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token operator">&amp;</span>student<span class="token punctuation">;</span> <span class="token comment">// 同样的，类型后面加上*就是一个结构体类型的指针了</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 由于.运算符优先级更高，所以需要先使用*p得到地址上的值，然后再去访问对应数据</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> p<span class="token operator">-></span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 使用 -> 运算符来快速将指针所指结构体的对应数据取出</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> c </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git Study</title>
      <link href="//2023/06/23/gitStudy/"/>
      <url>//2023/06/23/gitStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><h2 id="git进行push时-Please-make-sure-you-have-the-correct-access-rights-and-the-repository-exists"><a href="#git进行push时-Please-make-sure-you-have-the-correct-access-rights-and-the-repository-exists" class="headerlink" title="git进行push时:Please make sure you have the correct access rights and the repository exists."></a><code>git</code>进行push时:Please make sure you have the correct access rights and the repository exists.</h2><p>解决办法：</p><p>1.进入仓库路径</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"yourname"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"your@email.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.删除.ssh文件夹（直接搜索该文件夹）下的known_hosts(手动删除即可，不需要git）</p><p>3.再次git bash</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">"your@email.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.复制<code>id_rsa.pub</code>到github的ssh Keys中</p><p>5.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>6.<strong>退出</strong>，然后重新进</p><h2 id="pycharm-提交代码出现错误-remote-31mx-oauth-basic-Incorrect-username-or-password-access-token"><a href="#pycharm-提交代码出现错误-remote-31mx-oauth-basic-Incorrect-username-or-password-access-token" class="headerlink" title="pycharm 提交代码出现错误 remote: [31mx-oauth-basic: Incorrect username or password (access token)"></a><code>pycharm</code> 提交代码出现错误 remote: [31mx-oauth-basic: Incorrect username or password (access token)</h2><blockquote><p>解决办法：</p></blockquote><ul><li>第一步:控制台输入</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--system</span> <span class="token parameter variable">--unset</span> credential.helper<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>第二步:重启pycharm</li></ul>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang Study</title>
      <link href="//2023/06/23/GolangStudy/"/>
      <url>//2023/06/23/GolangStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop Study</title>
      <link href="//2023/06/23/HadoopStudy/"/>
      <url>//2023/06/23/HadoopStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Hadoop运行环境搭建"><a href="#Hadoop运行环境搭建" class="headerlink" title="Hadoop运行环境搭建"></a>Hadoop运行环境搭建</h1><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><h3 id="在进行xsync集群分发，已经安装rsync的情况下，执行xsync-bin出现指令找不到的错误"><a href="#在进行xsync集群分发，已经安装rsync的情况下，执行xsync-bin出现指令找不到的错误" class="headerlink" title="在进行xsync集群分发，已经安装rsync的情况下，执行xsync /bin出现指令找不到的错误"></a>在进行<code>xsync</code>集群分发，已经安装<code>rsync</code>的情况下，执行<code>xsync /bin</code>出现指令找不到的错误</h3><blockquote><p>解决办法： 将自己编写的&#x2F;bin文件拷贝到系统目录的bin下</p></blockquote><h3 id="but-there-is-no-HDFS-NAMENODE-USER-defined-Aborting-operation"><a href="#but-there-is-no-HDFS-NAMENODE-USER-defined-Aborting-operation" class="headerlink" title="but there is no HDFS_NAMENODE_USER defined. Aborting operation."></a>but there is no HDFS_NAMENODE_USER defined. Aborting operation.</h3><p>解决办法：</p><p>第一步：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/profile.d/my_env.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加以下内容</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">HDFS_NAMENODE_USER</span><span class="token operator">=</span>root<span class="token builtin class-name">export</span> <span class="token assign-left variable">HDFS_DATANODE_USER</span><span class="token operator">=</span>root<span class="token builtin class-name">export</span> <span class="token assign-left variable">HDFS_SECONDARYNAMENODE_USER</span><span class="token operator">=</span>root<span class="token builtin class-name">export</span> <span class="token assign-left variable">YARN_RESOURCEMANAGER_USER</span><span class="token operator">=</span>root<span class="token builtin class-name">export</span> <span class="token assign-left variable">YARN_NODEMANAGER_USER</span><span class="token operator">=</span>root<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>分发到集群</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">xsync /etc/profile.d/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="hadoop集群全部都启动了，但是还是访问不了网页的解决方法"><a href="#hadoop集群全部都启动了，但是还是访问不了网页的解决方法" class="headerlink" title="hadoop集群全部都启动了，但是还是访问不了网页的解决方法"></a><code>hadoop</code>集群全部都启动了，但是还是访问不了网页的解决方法</h3><blockquote><p>解决思路：去检查下防火墙情况，发现开了</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl status firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl stop firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl disable firewalld.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="HDFS"><a href="#HDFS" class="headerlink" title="HDFS"></a>HDFS</h1><h2 id="HDFS的API案例实操"><a href="#HDFS的API案例实操" class="headerlink" title="HDFS的API案例实操"></a>HDFS的API案例实操</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">edu<span class="token punctuation">.</span>wzq</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>conf<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>fs<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOUtils</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileOutputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URI</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URISyntaxException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HdfsClient</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/*        测试连接     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testMkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">URISyntaxException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1 获取文件系统</span>        <span class="token class-name">FileSystem</span> fs <span class="token operator">=</span> <span class="token class-name">FileSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URI</span><span class="token punctuation">(</span><span class="token string">"hdfs://hadoop100:8020"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 2 创建目录</span>        fs<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/xiyou/huaguoshan/"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 3 关闭资源</span>        fs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*        HDFS文件上传（测试参数优先级）     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCopyFromLocalFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">URISyntaxException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1 获取文件系统</span>        <span class="token class-name">Configuration</span> configuration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        configuration<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"dfs.replication"</span><span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileSystem</span> fs <span class="token operator">=</span> <span class="token class-name">FileSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URI</span><span class="token punctuation">(</span><span class="token string">"hdfs://hadoop100:8020"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> configuration<span class="token punctuation">,</span> <span class="token string">"root "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 2 上传文件</span>        fs<span class="token punctuation">.</span><span class="token function">copyFromLocalFile</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"D:/Hadoop/resources/sunwukong.txt"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/xiyou/huaguoshan/sunwukong.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 3 关闭资源</span>        fs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*    HDFS文件下载     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCopyToLocalFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">URISyntaxException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1 获取文件系统</span>        <span class="token class-name">Configuration</span> configuration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileSystem</span> fs <span class="token operator">=</span> <span class="token class-name">FileSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URI</span><span class="token punctuation">(</span><span class="token string">"hdfs://hadoop100:8020"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> configuration<span class="token punctuation">,</span> <span class="token string">"atguigu"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 2 执行下载操作</span>        <span class="token comment">// boolean delSrc 指是否将原文件删除</span>        <span class="token comment">// Path src 指要下载的文件路径</span>        <span class="token comment">// Path dst 指将文件下载到的路径</span>        <span class="token comment">// boolean useRawLocalFileSystem 是否开启文件校验</span>        fs<span class="token punctuation">.</span><span class="token function">copyToLocalFile</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/xiyou/huaguoshan"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"D:/Hadoop/resources/down_sunwukong.txt"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 3 关闭资源</span>        fs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*    HDFS文件更名和移动     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testRename</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">URISyntaxException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1 获取文件系统</span>        <span class="token class-name">Configuration</span> configuration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileSystem</span> fs <span class="token operator">=</span> <span class="token class-name">FileSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URI</span><span class="token punctuation">(</span><span class="token string">"hdfs://hadoop100:8020"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> configuration<span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 2 修改文件名称</span>        fs<span class="token punctuation">.</span><span class="token function">rename</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/xiyou/huaguoshan/sunwukong.txt"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/xiyou/huaguoshan/meihouwang.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 3 关闭资源</span>        fs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*    HDFS删除文件和目录     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">URISyntaxException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1 获取文件系统</span>        <span class="token class-name">Configuration</span> configuration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileSystem</span> fs <span class="token operator">=</span> <span class="token class-name">FileSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URI</span><span class="token punctuation">(</span><span class="token string">"hdfs://hadoop100:8020"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> configuration<span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 2 执行删除</span>        fs<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/xiyou"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 3 关闭资源</span>        fs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*    HDFS文件详情查看     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testListFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">URISyntaxException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1获取文件系统</span>        <span class="token class-name">Configuration</span> configuration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileSystem</span> fs <span class="token operator">=</span> <span class="token class-name">FileSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URI</span><span class="token punctuation">(</span><span class="token string">"hdfs://hadoop100:8020"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> configuration<span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 2 获取文件详情</span>        <span class="token class-name">RemoteIterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LocatedFileStatus</span><span class="token punctuation">></span></span> listFiles <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>listFiles<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">LocatedFileStatus</span> fileStatus <span class="token operator">=</span> listFiles<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"========"</span> <span class="token operator">+</span> fileStatus<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"========="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fileStatus<span class="token punctuation">.</span><span class="token function">getPermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fileStatus<span class="token punctuation">.</span><span class="token function">getOwner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fileStatus<span class="token punctuation">.</span><span class="token function">getGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fileStatus<span class="token punctuation">.</span><span class="token function">getLen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fileStatus<span class="token punctuation">.</span><span class="token function">getModificationTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fileStatus<span class="token punctuation">.</span><span class="token function">getReplication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fileStatus<span class="token punctuation">.</span><span class="token function">getBlockSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fileStatus<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取块信息</span>            <span class="token class-name">BlockLocation</span><span class="token punctuation">[</span><span class="token punctuation">]</span> blockLocations <span class="token operator">=</span> fileStatus<span class="token punctuation">.</span><span class="token function">getBlockLocations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>blockLocations<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 3 关闭资源</span>        fs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*    HDFS文件和文件夹判断     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testListStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">URISyntaxException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1 获取文件配置信息</span>        <span class="token class-name">Configuration</span> configuration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileSystem</span> fs <span class="token operator">=</span> <span class="token class-name">FileSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URI</span><span class="token punctuation">(</span><span class="token string">"hdfs://hadoop100:8020"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> configuration<span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 2 判断是文件还是文件夹</span>        <span class="token class-name">FileStatus</span><span class="token punctuation">[</span><span class="token punctuation">]</span> listStatus <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">listStatus</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">FileStatus</span> fileStatus <span class="token operator">:</span> listStatus<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 如果是文件</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>fileStatus<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"f:"</span> <span class="token operator">+</span> fileStatus<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"d:"</span> <span class="token operator">+</span> fileStatus<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 3 关闭资源</span>        fs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="报错-1"><a href="#报错-1" class="headerlink" title="报错"></a>报错</h1><h2 id="import-org-apache-commons-lang-StringUtils-的时候出错"><a href="#import-org-apache-commons-lang-StringUtils-的时候出错" class="headerlink" title="import org.apache.commons.lang.StringUtils;的时候出错"></a>import org.apache.commons.lang.StringUtils;的时候出错</h2><p><img src="/../image/Snipaste_2022-08-25_10-46-02.png"> 解决办法： 在lang后添加版本号3,即： <img src="/../image/Snipaste_2022-08-25_10-47-18.png"></p>]]></content>
      
      
      <categories>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java Study</title>
      <link href="//2023/06/23/javaStudy/"/>
      <url>//2023/06/23/javaStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><h2 id="java-io使用相对路径读取文件找不到文件"><a href="#java-io使用相对路径读取文件找不到文件" class="headerlink" title="java.io使用相对路径读取文件找不到文件"></a>java.io使用相对路径读取文件找不到文件</h2><p><strong>解决办法:</strong><br>检查run-&gt;edit Configuration-&gt;work directory中的默认路径<br><img src="/../image/Snipaste_2022-08-31_15-15-51.png"><br><img src="/../image/Snipaste_2022-08-31_15-21-15.png"></p><h2 id="IDEA中Spring配置错误"><a href="#IDEA中Spring配置错误" class="headerlink" title="IDEA中Spring配置错误"></a>IDEA中Spring配置错误</h2><blockquote><p>class path resource [applicationContext.xml] cannot be opened because it does not exist</p></blockquote><p><strong>解决办法1:</strong><br>1.把 .class 也放进 src 目录中,<br><kbd>注意：</kbd>不能直接把 applicationContext.xml 移至target目录下，因为 .xml 配置文件运行时也需要在 .java 文件中获取属性信息<br>2.修改 Output Path 到 src 目录下即可:<br>点击 File -&gt; Project Structure（或快捷键 Ctrl+Alt+Shift+S）<br><img src="/../image/Snipaste_2022-09-01_10-57-10.png"><br><strong>解决方法2:</strong><br>1.在src&#x2F;main目录下新建一个文件夹，建议取名resource<br>2.点击 File -&gt; Project Structure（或快捷键 Ctrl+Alt+Shift+S）<br>3.点击 Modules -&gt; Sources 将新建的文件夹标记为 Resources<br>4.将applicationContext.xml放入resources文件夹<br>5.重新编译运行即可</p><h1 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h1><h2 id="定义注解"><a href="#定义注解" class="headerlink" title="定义注解"></a>定义注解</h2><p>Java语言使用@interface语法来定义注解（Annotation），它的格式如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Report</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> <span class="token function">level</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">"info"</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">//System.out.println(arr[2][1]);</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> i <span class="token operator">:</span> arr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">:</span> i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="数据库连接"><a href="#数据库连接" class="headerlink" title="数据库连接"></a>数据库连接</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestJdbc</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">,</span> <span class="token class-name">SQLException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//注册JDBC驱动程序</span>        <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.cj.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//打开一个连接</span>        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>                <span class="token string">"jdbc:mysql://localhost:3306/world?&amp;userSSL=false"</span><span class="token punctuation">,</span>                <span class="token string">"root"</span><span class="token punctuation">,</span>                <span class="token string">"3033715900"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//执行一个查询</span>        <span class="token class-name">Statement</span> stat <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> stat<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token string">"select *from city where CountryCode='AFG'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//ResultSet rs = stmt.executeUpdate(sql); UPDATE，INSERT或DELETE语句</span>        <span class="token comment">// 从结果集中提取数据</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//Retrieve by column name</span>            <span class="token keyword">int</span> id <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"ID"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> name <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"Name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//Display values</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"ID: "</span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">", Name: "</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS Study</title>
      <link href="//2023/06/23/JSstudy/"/>
      <url>//2023/06/23/JSstudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JavaScript-显示方案"><a href="#JavaScript-显示方案" class="headerlink" title="JavaScript 显示方案"></a>JavaScript 显示方案</h1><p>JavaScript 能够以不同方式”显示”数据： * 使用 window.alert() 写入警告框 * 使用 document.write() 写入 HTML 输出 * 使用 innerHTML 写入 HTML 元素 * 使用 console.log() 写入浏览器控制台</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"demo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>我的第一张网页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>我的第一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">//在 HTML 文档完全加载后使用 document.write() 将删除所有已有的 HTML<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>我的第一张网页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>我的第一个段落<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript">document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>试一试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="let"><a href="#let" class="headerlink" title="let"></a>let</h1><h2 id="重新声明"><a href="#重新声明" class="headerlink" title="重新声明"></a>重新声明</h2><ul><li>允许在程序的任何位置使用 var 重新声明 JavaScript 变量：</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token comment">// 现在，x 为 10</span><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span><span class="token comment">// 现在，x 为 6</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在相同的作用域，或在相同的块中，通过 let 重新声明一个 var 变量是不允许的：</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>     <span class="token comment">// 允许</span><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>      <span class="token comment">// 不允许</span><span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>  <span class="token comment">// 允许</span>  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>   <span class="token comment">// 不允许</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在相同的作用域，或在相同的块中，通过 let 重新声明一个 let 变量是不允许的：</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token comment">// 允许</span><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>     <span class="token comment">// 不允许</span><span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>  <span class="token comment">// 允许</span>  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>   <span class="token comment">// 不允许</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在相同的作用域，或在相同的块中，通过 var 重新声明一个 let 变量是不允许的：</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token comment">// 允许</span><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>     <span class="token comment">// 不允许</span><span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>  <span class="token comment">// 允许</span>  <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>   <span class="token comment">// 不允许</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在不同的作用域或块中，通过 let 重新声明变量是允许的：</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>     <span class="token comment">// 允许</span><span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>   <span class="token comment">// 允许</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>   <span class="token comment">// 允许</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="提升"><a href="#提升" class="headerlink" title="提升"></a>提升</h2><ul><li>通过 var 声明的变量会提升到顶端。您可以在声明变量之前就使用它：</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 在此处，您可以使用 carName</span><span class="token keyword">var</span> carName<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>通过 let 定义的变量不会被提升到顶端。在声明 let 变量之前就使用它会导致 ReferenceError。变量从块的开头一直处于”暂时死区”，直到声明为止：</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 在此处，您不可以使用 carName</span><span class="token keyword">let</span> carName<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="const"><a href="#const" class="headerlink" title="const"></a>const</h1><h2 id="块作用域"><a href="#块作用域" class="headerlink" title="块作用域"></a>块作用域</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token comment">// 此处，x 为 10</span><span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>  <span class="token comment">// 此处，x 为 6</span><span class="token punctuation">&#125;</span><span class="token comment">// 此处，x 为 10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="JavaScript-const-变量必须在声明时赋值："><a href="#JavaScript-const-变量必须在声明时赋值：" class="headerlink" title="JavaScript const 变量必须在声明时赋值："></a>JavaScript const 变量必须在声明时赋值：</h2><h2 id="常量对象可以更改"><a href="#常量对象可以更改" class="headerlink" title="常量对象可以更改"></a>常量对象可以更改</h2><p>您可以更改常量对象的属性：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 您可以创建 const 对象：</span><span class="token keyword">const</span> car <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">"porsche"</span><span class="token punctuation">,</span> <span class="token literal-property property">model</span><span class="token operator">:</span><span class="token string">"911"</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span><span class="token string">"Black"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 您可以更改属性：</span>car<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">"White"</span><span class="token punctuation">;</span><span class="token comment">// 您可以添加属性：</span>car<span class="token punctuation">.</span>owner <span class="token operator">=</span> <span class="token string">"Bill"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是您无法重新为常量对象赋值：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> car <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">"porsche"</span><span class="token punctuation">,</span> <span class="token literal-property property">model</span><span class="token operator">:</span><span class="token string">"911"</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span><span class="token string">"Black"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>car <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">"Volvo"</span><span class="token punctuation">,</span> <span class="token literal-property property">model</span><span class="token operator">:</span><span class="token string">"XC60"</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span><span class="token string">"White"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">// ERROR</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="常量数组可以更改"><a href="#常量数组可以更改" class="headerlink" title="常量数组可以更改"></a>常量数组可以更改</h2><p>您可以更改常量数组的元素：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 您可以创建常量数组：</span><span class="token keyword">const</span> cars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Audi"</span><span class="token punctuation">,</span> <span class="token string">"BMW"</span><span class="token punctuation">,</span> <span class="token string">"porsche"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 您可以更改元素：</span>cars<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"Honda"</span><span class="token punctuation">;</span><span class="token comment">// 您可以添加元素：</span>cars<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"Volvo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是您无法重新为常量数组赋值：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> cars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Audi"</span><span class="token punctuation">,</span> <span class="token string">"BMW"</span><span class="token punctuation">,</span> <span class="token string">"porsche"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>cars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Honda"</span><span class="token punctuation">,</span> <span class="token string">"Toyota"</span><span class="token punctuation">,</span> <span class="token string">"Volvo"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// ERROR</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kettle Use</title>
      <link href="//2023/06/23/kettle/"/>
      <url>//2023/06/23/kettle/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><h2 id="kettle连接mysql8-0以上版本"><a href="#kettle连接mysql8-0以上版本" class="headerlink" title="kettle连接mysql8.0以上版本"></a>kettle连接mysql8.0以上版本</h2><p>1、下载mysql8.0的jar驱动,<a href="https://mvnrepository.com/artifact/mysql/mysql-connector-java/8.0.28">链接</a></p><p>2、将下载好的mysql的驱动放到kettle安装文件中的lib下面，然后重启Spoon</p><p>3、连接的两种方式</p><ul><li>第一种方式：<br>(亲测可用)<br>数据库类型选择<kbd>Generic Database</kbd><br><img src="/../image/Snipaste_2022-10-13_22-30-39.png"><br>自定义连接URL填入：</li></ul><pre class="line-numbers language-text" data-language="text"><code class="language-text">jdbc:mysql://localhost:3306/sys?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai&amp;zeroDateTimeBehavior=CONVERT_TO_NULL<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><em><strong>注意</strong></em>：sys是你的数据库名称,<br>自定义驱动类名称填入：com.mysql.cj.jdbc.Driver</p></blockquote><ul><li>第二种方式：<br>在kettle的安装目录下<code>data-integration\simple-jndi\jdbc.properties</code>加入jdbc的连接信息</li></ul><pre class="line-numbers language-text" data-language="text"><code class="language-text">MYSQL8_DB/type=javax.sql.DataSourceMYSQL8_DB/driver=com.mysql.cj.jdbc.DriverMYSQL8_DB/url=jdbc:mysql://localhost:3306/sys?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=GMT //（注：sys是你的数据库名称）MYSQL8_DB/user=root //（用户名）MYSQL8_DB/password=root //（密码）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>选择mysql连接，连接方式选择JNDI，JNDI名称填写MYSQL8_DB<br>点击测试之后：<br>写入SQL语句，预览信息</p>]]></content>
      
      
      <categories>
          
          <category> Kettle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kettle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Study</title>
      <link href="//2023/06/23/linuxStudy/"/>
      <url>//2023/06/23/linuxStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><h2 id="WSL"><a href="#WSL" class="headerlink" title="WSL"></a>WSL</h2><h3 id="远程桌面连接失败"><a href="#远程桌面连接失败" class="headerlink" title="远程桌面连接失败"></a>远程桌面连接失败</h3><blockquote><p>解决办法: 设置一下root密码试试</p></blockquote><h2 id="Ubuntu的IP地址不显示问题"><a href="#Ubuntu的IP地址不显示问题" class="headerlink" title="Ubuntu的IP地址不显示问题"></a>Ubuntu的IP地址不显示问题</h2><p>解决办法:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> dhclient ens33<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">ifconfig</span> ens33<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷刷题</title>
      <link href="//2023/06/23/luoGu/"/>
      <url>//2023/06/23/luoGu/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="p1405-小鱼的游泳时间"><a href="#p1405-小鱼的游泳时间" class="headerlink" title="p1405 小鱼的游泳时间"></a>p1405 小鱼的游泳时间</h1><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">;</span>    cin<span class="token operator">>></span>a<span class="token operator">>></span>b<span class="token operator">>></span>c<span class="token operator">>></span>d<span class="token punctuation">;</span>    <span class="token keyword">int</span> x<span class="token operator">=</span>c<span class="token operator">-</span>a<span class="token punctuation">,</span>y<span class="token operator">=</span>d<span class="token operator">-</span>b<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>y<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>x<span class="token operator">--</span><span class="token punctuation">;</span>y<span class="token operator">+=</span><span class="token number">60</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>    cout<span class="token operator">&lt;&lt;</span>x<span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span>y<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> 洛谷 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown Study</title>
      <link href="//2023/06/23/markdownStudy/"/>
      <url>//2023/06/23/markdownStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'离不开的网'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><hr><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><hr><p><u>带下划线文本</u><br><del>删除线</del>  </p><hr><p><img src="/D:/html+css+javascript/Study/resource/QQ图片20220702202459.gif" alt="RUNOOB 图标">  </p><hr><p>这个链接用 1 作为网址变量 <a href="http://static.runoob.com/images/runoob-logo.png">RUNOOB</a>.<br>然后在文档的结尾为变量赋值（网址）</p><hr><p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p><hr><p>这是一个链接 <a href="https://www.baidu.com/">百度链接</a></p><hr><p><img src="https://www.baidu.com/img/bd_logo1.png" alt="baidu 图标" title="baidu"></p><hr><blockquote><p>最外层</p><blockquote><p>第一层嵌套</p><blockquote><p>第二层嵌套</p></blockquote></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql</title>
      <link href="//2023/06/23/mysql/"/>
      <url>//2023/06/23/mysql/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><h2 id="VScode连接Mysql配置过程中出现了出现错误"><a href="#VScode连接Mysql配置过程中出现了出现错误" class="headerlink" title="VScode连接Mysql配置过程中出现了出现错误"></a>VScode连接Mysql配置过程中出现了出现错误</h2><blockquote><p>ER_NOT_SUPPORTED_AUTH_MODE: Client does not support authentication protocol requested by server; consider upgrading MySQL client</p></blockquote><p>解决办法：</p><ul><li>Step1： 打开MySQL Workbench，在已有连接上执行Query：</li><li>Step2：先执行如下代码，更新用户密码：</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">USER</span> <span class="token string">'root'</span><span class="token variable">@'localhost'</span> IDENTIFIED <span class="token keyword">WITH</span> mysql_native_password <span class="token keyword">BY</span> <span class="token string">'password'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>Step3：再执行如下代码，刷新权限表：</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">flush <span class="token keyword">privileges</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>Step4：succeess</li></ul>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> VScode </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>paddlepaddle</title>
      <link href="//2023/06/23/paddlepaddle/"/>
      <url>//2023/06/23/paddlepaddle/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h1><blockquote><p>我的版本：<br>cuda：11.7<br>cuDNN：8.8<br>paddlepaddle：2.4.2.post117<br><img src="/../image/Snipaste_2023-05-09_00-22-36.png"></p></blockquote><h2 id="cuda"><a href="#cuda" class="headerlink" title="cuda"></a>cuda</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="首先看看电脑有没有nvidia-geforce-experience-没有就去官网安装一下，下载地址"><a href="#首先看看电脑有没有nvidia-geforce-experience-没有就去官网安装一下，下载地址" class="headerlink" title="首先看看电脑有没有nvidia geforce experience,没有就去官网安装一下，下载地址"></a>首先看看电脑有没有nvidia geforce experience,没有就去官网安装一下，<a href="https://www.nvidia.cn/geforce/geforce-experience/">下载地址</a></h4><p><img src="/../image/Snipaste_2023-05-08_23-56-59.png"></p><h4 id="查看CUDA支持最高版本"><a href="#查看CUDA支持最高版本" class="headerlink" title="查看CUDA支持最高版本"></a>查看CUDA支持最高版本</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nvidia-smi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../image/Snipaste_2023-05-08_23-54-28.png"></p><p>点击<a href="https://developer.nvidia.cn/cuda-toolkit-archive">下载地址</a><br>选择合适版本<br><img src="/../image/Snipaste_2023-05-09_00-09-12.png"></p><p><img src="/../image/Snipaste_2023-05-09_00-08-38.png"></p><h2 id="测试cuda是否安装成功"><a href="#测试cuda是否安装成功" class="headerlink" title="测试cuda是否安装成功"></a>测试cuda是否安装成功</h2><p>切换到下图目录并打开cmd</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.7\extras\demo_suite<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../image/Snipaste_2023-05-08_23-50-49.png"></p><h2 id="CUDNN"><a href="#CUDNN" class="headerlink" title="CUDNN"></a>CUDNN</h2><p>点击<a href="https://developer.nvidia.cn/rdp/cudnn-archive">下载地址</a><br>选择你cuda版本所对应的版本<br>可能要登录注册一下<br><img src="/../image/Snipaste_2023-05-09_00-24-37.png"><br>解压后把这三个文件夹内容分别复制到<code>cuda</code>安装路径对应的文件夹中<br><img src="/../image/Snipaste_2023-05-09_00-26-13.png"><br><img src="/../image/Snipaste_2023-05-09_00-28-07.png"></p><h2 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h2><p><img src="/../image/Snipaste_2023-05-08_23-40-14.png"><br>测试一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nvcc <span class="token parameter variable">-V</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../image/Snipaste_2023-05-09_00-31-00.png"><br>出现上图说明成功了</p><h2 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h2><p>下面用<code>pip</code>安装<code>paddlepaddle</code></p><h3 id="第一种：直接全局环境安装"><a href="#第一种：直接全局环境安装" class="headerlink" title="第一种：直接全局环境安装"></a>第一种：直接全局环境安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-m</span> pip <span class="token function">install</span> paddlepaddle-gpu<span class="token operator">==</span><span class="token number">2.4</span>.2.post117 <span class="token parameter variable">-f</span> https://www.paddlepaddle.org.cn/whl/windows/mkl/avx/stable.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> paddlepaddle<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>run_check<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/../image/Snipaste_2023-05-08_23-59-40.png"></p><h3 id="第二种：虚拟环境安装"><a href="#第二种：虚拟环境安装" class="headerlink" title="第二种：虚拟环境安装"></a>第二种：虚拟环境安装</h3><h4 id="新建一个project"><a href="#新建一个project" class="headerlink" title="新建一个project"></a>新建一个project</h4><p><img src="/../image/Snipaste_2023-05-09_00-36-45.png"></p><h4 id="打开一个terminal"><a href="#打开一个terminal" class="headerlink" title="打开一个terminal"></a>打开一个terminal</h4><p>然后<br><img src="/../image/Snipaste_2023-05-09_00-37-50.png"><br>然后<br><img src="/../image/Snipaste_2023-05-09_00-39-02.png"><br>安装成功</p><h4 id="测试一下"><a href="#测试一下" class="headerlink" title="测试一下"></a>测试一下</h4><p><img src="/../image/Snipaste_2023-05-09_00-39-18.png"><br><img src="/../image/Snipaste_2023-05-09_00-40-01.png"><br>成功了</p>]]></content>
      
      
      <categories>
          
          <category> paddlepaddle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> paddlepaddle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Study</title>
      <link href="//2023/06/23/pythonStudy/"/>
      <url>//2023/06/23/pythonStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h2 id="Python-import导入上级目录文件"><a href="#Python-import导入上级目录文件" class="headerlink" title="Python-import导入上级目录文件"></a>Python-import导入上级目录文件</h2><p>假设有如下目录结构：</p><blockquote><p>– dir0<br>　| file1.py<br>　| file2.py<br>　| dir3<br>　| file3.py<br>　| dir4<br>　| file4.py</p></blockquote><p>dir0文件夹下有file1.py、file2.py两个文件和dir3、dir4两个子文件夹，dir3中有file3.py文件，dir4中有file4.py文件。</p><h3 id="1-导入同级模块"><a href="#1-导入同级模块" class="headerlink" title="1.导入同级模块"></a>1.导入同级模块</h3><p>python导入同级模块（在同一个文件夹中的py文件）直接导入即可。</p><blockquote><p>import xxx</p></blockquote><p>如在file1.py中想导入file2.py，注意无需加后缀”.py”;</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">import file2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用file2中函数时需加上前缀”file2.”，即：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">file2.fuction_name()<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-导入下级模块"><a href="#2-导入下级模块" class="headerlink" title="2.导入下级模块"></a>2.导入下级模块</h3><p>导入下级目录模块也很容易，需在下级目录中新建一个空白的__init__.py文件再导入：</p><p>from dirname import xxx<br>如在file1.py中想导入dir3下的file3.py，首先要在dir3中新建一个空白的__init__.py文件。</p><blockquote><p>– dir0<br>　| file1.py<br>　| file2.py<br>　| dir3<br>　| <strong>init</strong>.py<br>　| file3.py<br>　| dir4<br>　| file4.py</p></blockquote><p>再使用如下语句：</p><ul><li><p>plan A</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">from dir3 import file3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>plan B</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">import dir3.file3# import dir3.file3 as df3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>但使用第二种方式则下文需要一直带着路径dir3书写，较为累赘，建议可以另起一个别名。</p></li></ul><h3 id="3-导入上级模块"><a href="#3-导入上级模块" class="headerlink" title="3.导入上级模块"></a>3.导入上级模块</h3><p>要导入上级目录下模块，可以使用sys.path： 　</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">import syssys.path.append(&quot;..&quot;)import xxx　<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如：在file4.py中想引入import上级目录下的file1.py：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> syssys<span class="token punctuation">.</span>path<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">".."</span><span class="token punctuation">)</span><span class="token keyword">import</span> file1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>sys.path的作用：当使用import语句导入模块时，解释器会搜索当前模块所在目录以及sys.path指定的路径去找需要import的模块，所以这里是直接把上级目录加到了sys.path里。</p><p>“..”的含义：等同于linux里的’..’，表示当前工作目录的上级目录。实际上python中的’.’也和linux中一致，表示当前目录。</p><h3 id="4-导入隔壁文件夹下的模块"><a href="#4-导入隔壁文件夹下的模块" class="headerlink" title="4.导入隔壁文件夹下的模块"></a>4.导入隔壁文件夹下的模块</h3><p>如在file4.py中想引入import在dir3目录下的file3.py。</p><p>这其实是前面两个操作的组合，其思路本质上是将上级目录加到sys.path里，再按照对下级目录模块的方式导入。<br>同样需要被引文件夹也就是dir3下有空的__init__.py文件。</p><blockquote><p>– dir<br>　| file1.py<br>　| file2.py<br>　| dir3<br>　| <strong>init</strong>.py<br>　| file3.py<br>　| dir4<br>　| file4.py</p></blockquote><p>同时也要将上级目录加到sys.path里：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">import syssys.path.append(&quot;..&quot;)from dir3 import file3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="5-常见错误及import原理"><a href="#5-常见错误及import原理" class="headerlink" title="5.常见错误及import原理"></a>5.常见错误及import原理</h4><blockquote><p>在使用直接从上级目录引入模块的操作时：<br>from .. import xxx<br>经常会报错:<br>ValueError: attempted relative import beyond top-level package</p></blockquote><p>这是由于相对导入时，文件夹实质上充当的是package，也就是包的角色（比如我们常用的numpy、pandas都是包）。如果python解释器没有认同该文件夹是package，那么这就是一个普通的文件夹，无法实现相对导入。</p><p>文件夹作为package需要满足如下两个条件：</p><blockquote><ul><li><p>文件夹中必须存在有__init__.py文件，可以为空。</p></li><li><p>不能作为顶层模块来执行该文件夹中的py文件。</p></li></ul></blockquote><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><h2 id="Command-“python-setup-py-egg-info”-failed-with-error-code-1-in-x2F-tmp-x2F-pip-build-Cc2yuK-x2F-pip-x2F"><a href="#Command-“python-setup-py-egg-info”-failed-with-error-code-1-in-x2F-tmp-x2F-pip-build-Cc2yuK-x2F-pip-x2F" class="headerlink" title="Command “python setup.py egg_info” failed with error code 1 in &#x2F;tmp&#x2F;pip-build-Cc2yuK&#x2F;pip&#x2F;"></a>Command “python setup.py egg_info” failed with error code 1 in &#x2F;tmp&#x2F;pip-build-Cc2yuK&#x2F;pip&#x2F;</h2><p>报错如下图所示：<br><img src="/../image/Snipaste_2022-10-23_13-56-11.png"><br>一般出现这个问题是由于pip版本太低或者pip有问题的原因</p><p>此时需要升级pip：</p><ul><li>pip3执行</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip3 <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> pip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>pip执行</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> pip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>如果上面升级失败，可以试试:</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-m</span> pip <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> <span class="token parameter variable">--force</span> pip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解决方法1:<br>如果在升级过程中报标题中的错误，则通过gt-pip.py文件进行安装（以python2.7为例）：<br>先卸载安装的python-pip</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum remove python-pip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下载get-pip.py文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://bootstrap.pypa.io/pip/2.7/get-pip.py<span class="token function">sudo</span> python get-pip.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>解决方法2:<br>这种方法是在网上看到的，没有亲自试验，请自行尝试:<br>如果安装了python2-pip或者python-pip，先卸载</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token parameter variable">-y</span> remove python2-pip python-pip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装python2-pip</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token parameter variable">-y</span> <span class="token function">install</span> python2-pip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装zabbix-api</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> zabbix-api<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="UserWarning-loaded-more-than-1-DLL-from-libs"><a href="#UserWarning-loaded-more-than-1-DLL-from-libs" class="headerlink" title="UserWarning: loaded more than 1 DLL from .libs"></a>UserWarning: loaded more than 1 DLL from .libs</h2><p>出现这个报错说明在你安装新的软件，或者更新numpy或者干什么的时候，旧的numpy没有卸载掉，两版numpy导致出现冲突.</p><blockquote><p><strong>解决办法:</strong><br>1.进入cmd 卸载掉numpy：pip uninstall numpy<br>2.重新安装numpy：pip install numpy<br>3.此时若numpy不可用，查看.libs文件夹，删除掉其中的另一个dll文件，应该可用</p></blockquote><h2 id="在使用pip-install-jupyter命令安装jupyter后，然后在cmd终端中输入“jupyter-notebook”后，提示-jupyter-notebook-not-found"><a href="#在使用pip-install-jupyter命令安装jupyter后，然后在cmd终端中输入“jupyter-notebook”后，提示-jupyter-notebook-not-found" class="headerlink" title="在使用pip install jupyter命令安装jupyter后，然后在cmd终端中输入“jupyter notebook”后，提示'jupyter-notebook' not found"></a>在使用pip install jupyter命令安装jupyter后，然后在cmd终端中输入“jupyter notebook”后，提示<kbd>'jupyter-notebook' not found</kbd></h2><blockquote><p><strong>解决办法:</strong><br>添加环境变量<br><img src="/../image/Snipaste_2022-09-01_13-38-18.png"></p></blockquote><p><kbd>注：如不能解决见下一报错</kbd></p><h2 id="进入jupyter-notebook报错，显示-No-module-named-‘pysqlite2’"><a href="#进入jupyter-notebook报错，显示-No-module-named-‘pysqlite2’" class="headerlink" title="进入jupyter notebook报错，显示 No module named ‘pysqlite2’"></a>进入jupyter notebook报错，显示 No module named ‘pysqlite2’</h2><p>查看对应的sessionmanager.py文件的对应报错位置，发现只有当无法import sqlite3时才会执行该句，所以问题症结出现在缺失sqlite3插件。结合在命令行所看到的【DLL load failed:找不到指定的程序】，所以可能不是缺失sqlite3包，而是缺失sqlite3所需要的dll文件。</p><blockquote><p><strong>解决方法：</strong></p></blockquote><p>1、去sqlite3官网，根据自己的系统和位数（32位还是64位）下载对应的插件：<br>sqlite3官网地址：<a href="https://www.sqlite.org/download.html">https://www.sqlite.org/download.html</a><br><img src="/../image/Snipaste_2022-09-01_13-25-47.png"><br>如果是64位Windows系统，则上图三个中的第二个插件。<br>2、下载完后，解压缩，将文件复制到Anaconda的DLLs目录下即可；<br>3、测试是否解决问题<br>在命令行输入juputer notebook，成功运行，问题解决。</p><h1 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h1><h2 id="Anaconda-换国内源"><a href="#Anaconda-换国内源" class="headerlink" title="Anaconda 换国内源"></a>Anaconda 换国内源</h2><h3 id="清华源"><a href="#清华源" class="headerlink" title="清华源"></a>清华源</h3><blockquote><p>在cmd 命令行中，输入添加以下命令（前提是要安装了Anaconda包管理工具）<br>conda config –add channels <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/</a><br>conda config –add channels <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge</a><br>conda config –add channels <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</a><br>conda config –add channels <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/</a><br>conda config –add channels <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</a><br>conda config –set show_channel_urls yes</p></blockquote><h3 id="中科大源"><a href="#中科大源" class="headerlink" title="中科大源"></a>中科大源</h3><blockquote><p>与上述操作一样，在cmd命令行进行安装<br>conda config –add channels <a href="https://mirrors.ustc.edu.cn/anaconda/pkgs/main/">https://mirrors.ustc.edu.cn/anaconda/pkgs/main/</a><br>conda config –add channels <a href="https://mirrors.ustc.edu.cn/anaconda/pkgs/free/">https://mirrors.ustc.edu.cn/anaconda/pkgs/free/</a><br>conda config –add channels <a href="https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/">https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/</a><br>conda config –add channels <a href="https://mirrors.ustc.edu.cn/anaconda/cloud/msys2/">https://mirrors.ustc.edu.cn/anaconda/cloud/msys2/</a><br>conda config –add channels <a href="https://mirrors.ustc.edu.cn/anaconda/cloud/bioconda/">https://mirrors.ustc.edu.cn/anaconda/cloud/bioconda/</a><br>conda config –add channels <a href="https://mirrors.ustc.edu.cn/anaconda/cloud/menpo/">https://mirrors.ustc.edu.cn/anaconda/cloud/menpo/</a><br>conda config –set show_channel_urls yes</p></blockquote><h3 id="恢复默认源"><a href="#恢复默认源" class="headerlink" title="恢复默认源"></a>恢复默认源</h3><blockquote><p>在cmd命令行使用下列命令即可<br>conda config –remove-key channels</p></blockquote><h3 id="查看源"><a href="#查看源" class="headerlink" title="查看源"></a>查看源</h3><blockquote><p>conda config –show<br>查看channels,出现了上述添加的过程则证明换成功了。</p></blockquote><blockquote><p>一些问题 :<br>如果还是无法安装第三方库或者很慢，则观察自己的源是否为上述添加的源，如果还夹杂着别的源，先进行恢复默认源（上述操作），然后再进行添加国内源（上述操作）。</p></blockquote><h1 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h1><h2 id="升级所有包"><a href="#升级所有包" class="headerlink" title="升级所有包"></a>升级所有包</h2><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">import pkg_resourcesfrom subprocess import callfor packages in [dist.project_name for dist in pkg_resources.working_set]:    call(&quot;pip3 install --upgrade &quot; + &#39;&#39;.join(packages) + &#39; --user&#39;, shell&#x3D;True)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Jupyter-Notebook"><a href="#Jupyter-Notebook" class="headerlink" title="Jupyter Notebook"></a>Jupyter Notebook</h1>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> Python </tag>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spark Study</title>
      <link href="//2023/06/23/sparkStudy/"/>
      <url>//2023/06/23/sparkStudy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h1><h2 id="统计不同电影类型的数量"><a href="#统计不同电影类型的数量" class="headerlink" title="统计不同电影类型的数量"></a>统计不同电影类型的数量</h2><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span></span><span class="token punctuation">&#123;</span>SparkConf<span class="token punctuation">,</span> SparkContext<span class="token punctuation">&#125;</span><span class="token keyword">object</span> rdd <span class="token punctuation">&#123;</span>  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">val</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> SparkConf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setMaster<span class="token punctuation">(</span><span class="token string">"yarn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setAppName<span class="token punctuation">(</span><span class="token string">"movies"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> SparkContext<span class="token punctuation">(</span>conf<span class="token punctuation">)</span>    <span class="token keyword">val</span> textRDD <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">"hdfs://hadoop201:8020/input/movies.csv"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> header <span class="token operator">=</span> textRDD<span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> moviesRDD <span class="token operator">=</span> textRDD<span class="token punctuation">.</span>filter<span class="token punctuation">(</span><span class="token operator">!</span>_<span class="token punctuation">.</span>equals<span class="token punctuation">(</span>header<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//过滤头部</span>    moviesRDD<span class="token punctuation">.</span>cache<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> total_films_count <span class="token operator">=</span> moviesRDD<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span>    println<span class="token punctuation">(</span><span class="token string">"电影总数:"</span><span class="token operator">+</span>total_films_count<span class="token punctuation">)</span>    <span class="token keyword">val</span> movies_genre_count <span class="token operator">=</span> moviesRDD<span class="token punctuation">.</span>flatMap<span class="token punctuation">(</span>line<span class="token keyword">=></span><span class="token punctuation">&#123;</span>      line<span class="token punctuation">.</span>substring<span class="token punctuation">(</span>line<span class="token punctuation">.</span>lastIndexOf<span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"\\|"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>reduceByKey<span class="token punctuation">(</span>_ <span class="token operator">+</span> _<span class="token punctuation">)</span><span class="token punctuation">.</span>collect<span class="token punctuation">(</span><span class="token punctuation">)</span>    movies_genre_count<span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="统计评分最高的电影"><a href="#统计评分最高的电影" class="headerlink" title="统计评分最高的电影"></a>统计评分最高的电影</h2><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token keyword">package</span> <span class="token namespace">cn<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>jit<span class="token punctuation">.</span>spark</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>SparkSession<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>types<span class="token punctuation">.</span></span><span class="token punctuation">&#123;</span>DataTypes<span class="token punctuation">,</span> StructType<span class="token punctuation">&#125;</span><span class="token keyword">object</span> sparksqldemo <span class="token punctuation">&#123;</span>  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">val</span> spark <span class="token operator">=</span> SparkSession      <span class="token punctuation">.</span>builder<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>master<span class="token punctuation">(</span><span class="token string">"yarn"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>appName<span class="token punctuation">(</span><span class="token string">"movies"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>getOrCreate<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> rating_schema <span class="token operator">=</span> <span class="token keyword">new</span> StructType<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"userId"</span><span class="token punctuation">,</span> DataTypes<span class="token punctuation">.</span>IntegerType<span class="token punctuation">)</span>      <span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"movieId"</span><span class="token punctuation">,</span>DataTypes<span class="token punctuation">.</span>IntegerType<span class="token punctuation">)</span>      <span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"rating"</span><span class="token punctuation">,</span>DataTypes<span class="token punctuation">.</span>FloatType<span class="token punctuation">)</span>      <span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"timestamp"</span><span class="token punctuation">,</span> DataTypes<span class="token punctuation">.</span>LongType<span class="token punctuation">)</span>    <span class="token keyword">val</span> movie_schema <span class="token operator">=</span> <span class="token keyword">new</span> StructType<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"movieId"</span><span class="token punctuation">,</span>DataTypes<span class="token punctuation">.</span>IntegerType<span class="token punctuation">)</span>      <span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">,</span>DataTypes<span class="token punctuation">.</span>StringType<span class="token punctuation">)</span>      <span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"genre"</span><span class="token punctuation">,</span>DataTypes<span class="token punctuation">.</span>StringType<span class="token punctuation">)</span>    <span class="token keyword">val</span> moviesDF <span class="token operator">=</span> spark<span class="token punctuation">.</span>read      <span class="token punctuation">.</span>option<span class="token punctuation">(</span><span class="token string">"header"</span><span class="token punctuation">,</span><span class="token string">"true"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>schema<span class="token punctuation">(</span>movie_schema<span class="token punctuation">)</span>      <span class="token punctuation">.</span>csv<span class="token punctuation">(</span><span class="token string">"hdfs://hadoop201:8020/input/movies.csv"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> ratingsDF <span class="token operator">=</span> spark<span class="token punctuation">.</span>read      <span class="token punctuation">.</span>option<span class="token punctuation">(</span><span class="token string">"header"</span><span class="token punctuation">,</span><span class="token string">"true"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>schema<span class="token punctuation">(</span>rating_schema<span class="token punctuation">)</span>      <span class="token punctuation">.</span>csv<span class="token punctuation">(</span><span class="token string">"hdfs://hadoop201:8020/input/ratings.csv"</span><span class="token punctuation">)</span>    <span class="token comment">// 找平均评分最高的10部电影 id 电影名 评分 要求评分人次大于1000一次</span>    ratingsDF<span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"ratings"</span><span class="token punctuation">)</span>    moviesDF<span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"movies"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> top10 <span class="token operator">=</span> spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |SELECT        |r.movieId,m.title,avg(rating) avg_rating,count(*) rating_cnt        |FROM ratings r JOIN movies m ON r.movieId = m.movieId        |GROUP BY r.movieId, m.title        |HAVING rating_cnt >= 1000        |ORDER BY avg_rating DESC        |limit 10        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span>   top10<span class="token punctuation">.</span>show<span class="token punctuation">(</span>truncate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment">/*这段代码是在使用Apache Spark SQL执行一条SQL查询语句，将结果存储在DataFrame对象top10中，并以表格形式打印出来。具体解释如下：- `spark.sql`是SparkSession上的一个方法，用于执行给定的SQL查询。- 该查询包含4个列：movieId、title、avg_rating和rating_cnt，其中，movieId和title分别来自movies表和ratings表，avg_rating表示每部电影的平均评分，rating_cnt表示评分次数。- `JOIN`关键字用于将ratings表和movies表连接起来，其条件为它们的movieId相等。- `GROUP BY`子句指示Spark对每个电影进行分组聚合操作，计算每部电影的平均评分和评分次数。- `HAVING rating_cnt >= 1000`子句用于过滤掉评分次数少于1000次的电影。- `ORDER BY avg_rating DESC`子句用于按照平均评分从高到低排序。- `limit 10`子句限制结果集大小为10，只返回平均评分最高的前10部电影的信息。- `top10.show(truncate = false)`方法用于以表格形式打印DataFrame top10中的结果，truncate参数设置为false表示不截取单元格中显示的内容，以便完全呈现所有结果。*/</span>    <span class="token keyword">val</span> top_cnt <span class="token operator">=</span>  spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |SELECT        |m.movieId,m.title,avg(r.rating) avg_rating,count(*) total_cnt        |FROM ratings r JOIN movies m on r.movieId = m.movieId        |GROUP BY m.movieId,m.title        |ORDER BY total_cnt DESC        |LIMIT 10        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span>    top_cnt<span class="token punctuation">.</span>show<span class="token punctuation">(</span>truncate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment">/*这段代码是在使用Apache Spark SQL执行一条SQL查询语句，将结果存储在DataFrame对象top_cnt中，然后以表格形式打印出来。具体解释如下：- `spark.sql`是SparkSession上的一个方法，用于执行给定的SQL查询。- SQL查询包含4个列：movieId、title、avg_rating和total_cnt。其中，movieId和title列来自movies表，avg_rating和total_cnt列来自ratings表。该查询的目的是计算每个电影的平均评分和评分次数（即记录总数），并仅返回评分次数最高的前10个电影。- `JOIN`关键字用于将两个表连接起来，其条件为ratings表的movieId与movies表的movieId相等。- GROUP BY子句指示Spark按照movieId和title进行聚合操作，并对每个聚合组计算其平均评分和评分次数。 - `ORDER BY total_cnt DESC`子句按total_cnt列进行降序排序，以便将电影按照评分次数从高到低排列。- `LIMIT 10`子句限制结果集的大小为10，只返回评分次数最高的10部电影的信息。- `top_cnt.show(truncate = false)`方法用于打印DataFrame top_cnt中的结果，truncate参数设置为false表示不截取单元格中显示的内容，以便完全呈现所有结果。*/</span>    spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |SELECT        |m.movieId,m.title,substring(substring(title,-6),2,4) movie_year,        |avg(r.rating) avg_rating,count(*) total_cnt        |FROM ratings r JOIN movies m ON r.movieId = m.movieId        |GROUP BY m.movieId,m.title,movie_year        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span><span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"t1"</span><span class="token punctuation">)</span><span class="token comment">/*这段代码是在使用Apache Spark SQL执行一条SQL查询语句并将结果存储在一个Spark临时视图中，具体解释如下：- `spark.sql`是SparkSession上的一个方法，用于执行给定的SQL查询。- SQL查询包含5个列：movieId、title、movie_year、avg_rating和total_cnt。其中，movieId、title、avg_rating和total_cnt的含义与上一段代码中的相同，movie_year则是通过对title列进行处理得到的电影年份信息。- `substring(substring(title,-6), 2, 4)`函数用于从title列中抽取出电影年份信息，具体来说，该函数连续调用了两次substring函数：   - 第一次substring函数将title列的后6个字符（即电影名中括号内的4位年份数字和后面的"）"字符）抽取出来。   - 第二次substring函数则从第一步得到的字符串中，从第2个字符开始抽取4个字符，即抽取年份数字部分。- `JOIN`、`GROUP BY`和`ORDER BY`的含义与上一段代码中的相同，只是在GROUP BY子句中增加了对movie_year列的聚合操作。- `createOrReplaceTempView("t1")`将查询结果存储在一个名为"t1"的Spark临时视图中，以便后续对该结果进行进一步处理和分析。注意，该方法不返回任何数据，仅负责将查询结果与一个临时视图相关联。*/</span>    spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |SELECT        |SUM(CASE movie_year WHEN 201 THEN 1 ELSE 0 END) YEAR10S,        |SUM(CASE movie_year WHEN 200 THEN 1 ELSE 0 END) YEAR00S,        |SUM(CASE movie_year WHEN 199 THEN 1 ELSE 0 END) YEAR90S        |        |FROM t1        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span><span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">/*这段代码是在使用Apache Spark SQL执行一条SQL查询语句，并将对临时视图"t1"中数据进行进一步聚合和分析。具体解释如下：- `spark.sql`是SparkSession上的一个方法，用于执行给定的SQL查询。- SQL查询包含3个列：YEAR10S、YEAR00S和YEAR90S，这些列是由三组`SUM(CASE ...)`语句计算出来的，表示电影年份为201x、200x和199x的电影总数。  - `CASE ... WHEN ... THEN ... ELSE ... END`语句是一个条件表达式，用于根据movie_year列的值选择相应的路径，可以理解为IF-THEN-ELSE逻辑判断的简化版：    - 当movie_year=201时，显式返回数字1。    - 否则，返回数字0。  - 将该条件表达式作为SUM函数的参数，即可实现对movie_year为某个特定值的电影数进行统计汇总的功能。  - Sql查询不允许select语句￥￥现未在group by字句或聚合函数中的列, movie_year格式存在问题, 不符合算术运算, 所以需要对year号进行case操作.- `FROM t1`指示Spark从名为"t1"的临时视图中获取数据，然后对其进行聚合操作。- 最终输出结果通过`show()`函数打印。注意，这段代码的执行依赖于之前定义的临时视图"t1"，该视图中存储了关于电影的信息，其中包括每部电影的标题、平均评分和发行年份（已转换为3位数字）。如果在执行本段代码之前未建立该视图，则会导致运行时错误。*/</span>    spark<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token keyword">package</span> <span class="token namespace">jit</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>SparkSession<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span></span><span class="token punctuation">&#123;</span>SparkConf<span class="token punctuation">,</span> SparkContext<span class="token punctuation">&#125;</span><span class="token keyword">object</span> UserReviewsByGenre <span class="token punctuation">&#123;</span>  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    System<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"D:/Libs/hadoop-3.2.4/bin/hadoop.dll"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> spark <span class="token operator">=</span> SparkSession<span class="token punctuation">.</span>builder      <span class="token punctuation">.</span>appName<span class="token punctuation">(</span><span class="token string">"ML"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>master<span class="token punctuation">(</span><span class="token string">"local[*]"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>getOrCreate<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">import</span> <span class="token namespace">spark<span class="token punctuation">.</span>implicits<span class="token punctuation">.</span></span>_    <span class="token keyword">val</span> ratingsDF <span class="token operator">=</span> spark<span class="token punctuation">.</span>read      <span class="token punctuation">.</span>option<span class="token punctuation">(</span><span class="token string">"header"</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>option<span class="token punctuation">(</span><span class="token string">"inferSchema"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>csv<span class="token punctuation">(</span><span class="token string">"file:///D:/Data/ml-latest/ratings.csv"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> moviesDF <span class="token operator">=</span> spark<span class="token punctuation">.</span>read      <span class="token punctuation">.</span>option<span class="token punctuation">(</span><span class="token string">"header"</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>option<span class="token punctuation">(</span><span class="token string">"inferSchema"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>csv<span class="token punctuation">(</span><span class="token string">"file:///D:/Data/ml-latest/movies.csv"</span><span class="token punctuation">)</span>    ratingsDF<span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"ratings"</span><span class="token punctuation">)</span>    moviesDF<span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"movies"</span><span class="token punctuation">)</span>    println<span class="token punctuation">(</span><span class="token string">"总数:"</span><span class="token punctuation">,</span>ratingsDF<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">"userId"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>distinct<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> validate_users <span class="token operator">=</span> spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |SELECT userId, COUNT(*) as total_count        |FROM ratings        |WHERE rating IN (1, 5)        |GROUP BY userId        |HAVING COUNT(*) > SUM(CASE WHEN rating IN (1, 5) THEN 1 ELSE 0 END) AND COUNT(*) > 10        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span>    validate_users<span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"validate_users"</span><span class="token punctuation">)</span><span class="token comment">/*这是一个Spark SQL查询语句，用于验证用户是否为“不良评分者”。具体来说，它会在名为“ratings”的表中查找将评分设置为1或5的所有评分，并根据每个用户对这些评分的数量进行分组和统计。然后，对于每个用户，该查询将比较他们所有的评分总数与只包含1或5评分的数量之和。如果前者大于后者且评分总数超过10，则该用户被认为是“不良评分者”。最终，查询将返回所有符合条件的用户的ID和对应的评分数量，存储在名为“validate_users”的变量中。*/</span>    <span class="token keyword">val</span> user_ratings_category_df <span class="token operator">=</span> spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |SELECT        |   userId,        |    SUM(CASE WHEN genres LIKE '%Action%' THEN 1 ELSE 0 END) AS Action,        |    SUM(CASE WHEN genres LIKE '%Adventure%' THEN 1 ELSE 0 END) AS Adventure,        |    SUM(CASE WHEN genres LIKE '%Animation%' THEN 1 ELSE 0 END) AS Animation,        |    SUM(CASE WHEN genres LIKE '%Children%' THEN 1 ELSE 0 END) AS Children,        |    SUM(CASE WHEN genres LIKE '%Comedy%' THEN 1 ELSE 0 END) AS Comedy,        |    SUM(CASE WHEN genres LIKE '%Crime%' THEN 1 ELSE 0 END) AS Crime,        |    SUM(CASE WHEN genres LIKE '%Documentary%' THEN 1 ELSE 0 END) AS Documentary,        |    SUM(CASE WHEN genres LIKE '%Drama%' THEN 1 ELSE 0 END) AS Drama,        |    SUM(CASE WHEN genres LIKE '%Fantasy%' THEN 1 ELSE 0 END) AS Fantasy,        |    SUM(CASE WHEN genres LIKE '%Film-Noir%' THEN 1 ELSE 0 END) AS FilmNoir,        |    SUM(CASE WHEN genres LIKE '%Horror%' THEN 1 ELSE 0 END) AS Horror,        |    SUM(CASE WHEN genres LIKE '%Musical%' THEN 1 ELSE 0 END) AS Musical,        |    SUM(CASE WHEN genres LIKE '%Mystery%' THEN 1 ELSE 0 END) AS Mystery,        |    SUM(CASE WHEN genres LIKE '%Romance%' THEN 1 ELSE 0 END) AS Romance,        |    SUM(CASE WHEN genres LIKE '%Sci-Fi%' THEN 1 ELSE 0 END) AS SciFi,        |    SUM(CASE WHEN genres LIKE '%Thriller%' THEN 1 ELSE 0 END) AS Thriller,        |    SUM(CASE WHEN genres LIKE '%War%' THEN 1 ELSE 0 END) AS War,        |    SUM(CASE WHEN genres LIKE '%Western%' THEN 1 ELSE 0 END) AS Western        |FROM (        |  SELECT explode(split(genres, "\\|")) AS genre, *        |  FROM ratings r JOIN movies m ON r.movieId = m.movieId        |) t        |GROUP BY userId        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span>    user_ratings_category_df<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">/*这是一段 Scala 代码，用于使用 Apache Spark 计算用户对电影不同类型的评分总数。以下是代码的主要步骤：1. 从 ratings 和 movies 表中选择电影和其评分信息2. 按 | 分隔 genres 列并展开，以将一个电影的不同 genre 序列化为多个行。3. 对所有的展开后的行按 userId 进行分组，并计算每个人给每个 genre 类型的电影的评分总数。具体来说，代码使用了 Spark SQL 中的 API，主要实现步骤如下：1.``SELECT`` 部分：对 userId 进行聚合，并使用``CASE WHEN`` 函数计算每种电影 genre 的评分总数。2. 子查询块 ``FROM``：在电影和其评分表格"ratings"和"movies"之间执行一个内部联接操作``, JOIN movies m ON r.movieId = m.movieId``，连接条件是电影 ID。3. 使用``explode()``函数拆分``genres``栏，生成新的列``genre``，包含展开的单个分类。4. 聚合结果：将同一用户和所有 genre 的评分汇总在一起``GROUP BY userId`` ，统计总节数量（通过求和聚合函数）最终结果将是一个 DataFrame，它显示了每个用户对每种电影类型的评分总数。*/</span>         spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |SELECT m.title, AVG(r.rating) AS avg_rating, VARIANCE(r.rating) AS rating_variance        |FROM ratings r JOIN movies m ON r.movieId = m.movieId        |GROUP BY m.title        |HAVING COUNT(r.userId) > 100        |ORDER BY rating_variance DESC        |LIMIT 10;        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span><span class="token punctuation">.</span>show<span class="token punctuation">(</span>truncate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment">/*这是一个Spark SQL查询语句，用于计算电影评分的平均值和方差。以下是该查询语句的解释：- 通过将评分r和电影m连接在一起，使用JOIN指令来联结ratings表和movies表。使用ON指令来指定电影ID匹配。- 使用GROUP BY指令将结果按电影标题进行分组。- 利用AVG聚合函数计算每个电影的平均评分，并利用VARIANCE聚合函数计算每个电影评分的方差。- COUNT函数用于过滤只有小于等于100人评分的电影；HAVING子句筛选掉低于100的电影数量- 对电影按照评分方差降序排列，并用LIMIT限制结果集为前10项。通过使用.show(truncate = false)，输出结果显示时不截断行。*/</span>    spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |SELECT m.title,        |       COUNT(r.rating) AS num_ratings,        |       SUM(CASE WHEN r.rating = 1 THEN 1 ELSE 0 END) AS num_1_ratings,        |       SUM(CASE WHEN r.rating = 2 THEN 1 ELSE 0 END) AS num_2_ratings,        |       SUM(CASE WHEN r.rating = 3 THEN 1 ELSE 0 END) AS num_3_ratings,        |       SUM(CASE WHEN r.rating = 4 THEN 1 ELSE 0 END) AS num_4_ratings,        |       SUM(CASE WHEN r.rating = 5 THEN 1 ELSE 0 END) AS num_5_ratings,        |       AVG(r.rating) AS avg_rating,        |       SQRT(SUM(POWER(r.rating - t.avg_rating, 2)) / COUNT(r.rating)) AS std_dev        |FROM ratings r        |JOIN movies m ON r.movieId = m.movieId        |JOIN (SELECT movieId, AVG(rating) AS avg_rating        |      FROM ratings        |      GROUP BY movieId        |      HAVING COUNT(rating) >= 100) t        |ON r.movieId = t.movieId        |GROUP BY m.title        |ORDER BY std_dev DESC        |LIMIT 10;        |        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span><span class="token punctuation">.</span>show<span class="token punctuation">(</span>truncate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment">/*这是一个Spark SQL查询语句。其目的是分析电影评分数据集中每部电影的平均评分，以及评分标准差和各个评分等级所占的比例。具体来说，这个查询将评分数据集ratings和电影数据集movies进行了JOIN操作，并对评分数据进行聚合分析，得到了每部电影的平均评分、评分标准差、不同评分等级对应的评分人数。最后，按照评分标准差倒序排序，并显示前10条记录。具体解释如下：首先选取电影名m.title作为输出结果的列，并定义除此之外还有8个计算列，分别是num_ratings、num_1_ratings、num_2_ratings、num_3_ratings、num_4_ratings、num_5_ratings、avg_rating和std_dev。其中，num_ratings表示某一电影的评分数量，num_i_ratings表示给该电影打了 i 分的评分数量，而avg_rating则是该电影的平均评分。这段代码的核心在于通过计算标准差std_dev来度量电影的评分分布。具体来说，std_dev等于所有评分离平均值的偏差平方和的平均数，再开方得到的结果。也就是公式中的sqrt( Σ(rating - avg_rating)^2 / count(rating) )。这里采用了一个子查询t，用来计算每个电影的平均评分avg_rating。注意，这里只选择评分记录数大于等于100次的电影进行计算，即HAVING COUNT(rating) >= 100。最后，按照std_dev从大到小排序，输出前10个电影的结果，其中truncate=false表示不要截断输出结果。*/</span>    spark<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> spark </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> spark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UsingNote</title>
      <link href="//2023/06/23/usingNote/"/>
      <url>//2023/06/23/usingNote/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="hue"><a href="#hue" class="headerlink" title="hue"></a>hue</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">docker</span> run <span class="token punctuation">\</span><span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> hue <span class="token punctuation">\</span><span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token punctuation">\</span><span class="token parameter variable">-p</span> <span class="token number">8888</span>:8888 <span class="token punctuation">\</span><span class="token parameter variable">-h</span> hue-docker-1 <span class="token punctuation">\</span><span class="token parameter variable">-v</span> /home/container/hue-docker-1:/home/hue-docker-1-remote <span class="token punctuation">\</span>gethue/hue:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-ti</span> <span class="token parameter variable">--user</span> root hue <span class="token function">bash</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/share/hue/build/env/bin/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#设置db</span>./hue syncdb  <span class="token comment">#初始化数据 </span>./hue migrate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="kafka"><a href="#kafka" class="headerlink" title="kafka"></a>kafka</h1><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> zookeeper <span class="token parameter variable">-p</span> <span class="token number">2181</span>:2181 <span class="token parameter variable">-t</span> wurstmeister/zookeeper <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> kafka <span class="token parameter variable">--publish</span> <span class="token number">9092</span>:9092 <span class="token parameter variable">--link</span> zookeeper <span class="token punctuation">\</span><span class="token parameter variable">--env</span> <span class="token assign-left variable">KAFKA_ZOOKEEPER_CONNECT</span><span class="token operator">=</span>zookeeper:2181 <span class="token punctuation">\</span><span class="token parameter variable">--env</span> <span class="token assign-left variable">KAFKA_ADVERTISED_HOST_NAME</span><span class="token operator">=</span>localhost <span class="token punctuation">\</span><span class="token parameter variable">--env</span> <span class="token assign-left variable">KAFKA_ADVERTISED_PORT</span><span class="token operator">=</span><span class="token number">9092</span> <span class="token punctuation">\</span>wurstmeister/kafka:latest <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> kafka <span class="token function">bash</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /opt/kafka/bin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="python"><a href="#python" class="headerlink" title="python"></a>python</h2><h3 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h3><p>打开两个jupyter窗口</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> kafka <span class="token keyword">import</span> KafkaProducer<span class="token punctuation">,</span> KafkaConsumer<span class="token keyword">from</span> kafka<span class="token punctuation">.</span>errors <span class="token keyword">import</span> kafka_errors<span class="token keyword">import</span> traceback<span class="token keyword">import</span> json<span class="token keyword">def</span> <span class="token function">producer_demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 假设生产的消息为键值对（不是一定要键值对），且序列化方式为json</span>    producer <span class="token operator">=</span> KafkaProducer<span class="token punctuation">(</span>        bootstrap_servers<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'localhost:9092'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>         key_serializer<span class="token operator">=</span><span class="token keyword">lambda</span> k<span class="token punctuation">:</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        value_serializer<span class="token operator">=</span><span class="token keyword">lambda</span> v<span class="token punctuation">:</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 发送三条消息</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        future <span class="token operator">=</span> producer<span class="token punctuation">.</span>send<span class="token punctuation">(</span>            <span class="token string">'kafka_demo'</span><span class="token punctuation">,</span>            key<span class="token operator">=</span><span class="token string">'count_num'</span><span class="token punctuation">,</span>  <span class="token comment"># 同一个key值，会被送至同一个分区</span>            value<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>            partition<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># 向分区1发送消息</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"send &#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            future<span class="token punctuation">.</span>get<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment"># 监控是否发送成功           </span>        <span class="token keyword">except</span> kafka_errors<span class="token punctuation">:</span>  <span class="token comment"># 发送失败抛出kafka_errors</span>            traceback<span class="token punctuation">.</span>format_exc<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">consumer_demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    consumer <span class="token operator">=</span> KafkaConsumer<span class="token punctuation">(</span>        <span class="token string">'kafka_demo'</span><span class="token punctuation">,</span>         bootstrap_servers<span class="token operator">=</span><span class="token string">':9092'</span><span class="token punctuation">,</span>        group_id<span class="token operator">=</span><span class="token string">'test'</span>    <span class="token punctuation">)</span>    <span class="token keyword">for</span> message <span class="token keyword">in</span> consumer<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"receive, key: &#123;&#125;, value: &#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>            json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>message<span class="token punctuation">.</span>key<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>message<span class="token punctuation">.</span>value<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span>        <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">producer_demo<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">consumer_demo<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="gradle"><a href="#gradle" class="headerlink" title="gradle"></a>gradle</h1><h2 id="settings-gradle-kts-更换阿里云镜像源"><a href="#settings-gradle-kts-更换阿里云镜像源" class="headerlink" title="settings.gradle.kts 更换阿里云镜像源"></a>settings.gradle.kts 更换阿里云镜像源</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">pluginManagement &#123;    repositories &#123;        // 改为阿里云的镜像地址        maven &#123; setUrl("https://maven.aliyun.com/repository/central") &#125;        maven &#123; setUrl("https://maven.aliyun.com/repository/jcenter") &#125;        maven &#123; setUrl("https://maven.aliyun.com/repository/google") &#125;        maven &#123; setUrl("https://maven.aliyun.com/repository/gradle-plugin") &#125;        maven &#123; setUrl("https://maven.aliyun.com/repository/public") &#125;        maven &#123; setUrl("https://jitpack.io") &#125;        gradlePluginPortal()        google()        mavenCentral()    &#125;&#125;dependencyResolutionManagement &#123;    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)    repositories &#123;        // 改为阿里云的镜像地址        maven &#123; setUrl("https://maven.aliyun.com/repository/central") &#125;        maven &#123; setUrl("https://maven.aliyun.com/repository/jcenter") &#125;        maven &#123; setUrl("https://maven.aliyun.com/repository/google") &#125;        maven &#123; setUrl("https://maven.aliyun.com/repository/gradle-plugin") &#125;        maven &#123; setUrl("https://maven.aliyun.com/repository/public") &#125;        maven &#123; setUrl("https://jitpack.io") &#125;        google()        mavenCentral()    &#125;&#125;rootProject.name = "DN_Compose"include ':app'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="vnc"><a href="#vnc" class="headerlink" title="vnc"></a>vnc</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">vncserver<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h1><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><h3 id="使用yum-update或yum-groupinstall-“GNOME-Desktop”等yum安装命令出现Error-Package-avahi-libs-0-6-31-13-el7-x86-64-anaconda-系列错误"><a href="#使用yum-update或yum-groupinstall-“GNOME-Desktop”等yum安装命令出现Error-Package-avahi-libs-0-6-31-13-el7-x86-64-anaconda-系列错误" class="headerlink" title="使用yum update或yum groupinstall “GNOME Desktop”等yum安装命令出现Error: Package: avahi-libs-0.6.31-13.el7.x86_64 (@anaconda)系列错误"></a>使用yum update或yum groupinstall “GNOME Desktop”等yum安装命令<strong>出现Error: Package: avahi-libs-0.6.31-13.el7.x86_64 (@anaconda)系列错误</strong></h3><blockquote><p>输入以下命令</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>、yum <span class="token function">install</span> yum-utils   <span class="token comment">#如果这条命令也出错，就忽略这条</span><span class="token comment">#清除之前未完成的事务</span><span class="token number">2</span>、yum-complete-transaction   yum <span class="token function">history</span> redo last  <span class="token comment">#清除可能存在的重复包</span><span class="token number">3</span>、package-cleanup <span class="token parameter variable">--dupes</span><span class="token comment">#清除可能存在的损坏包</span><span class="token number">4</span>、package-cleanup <span class="token parameter variable">--problems</span><span class="token comment">#清除重复包的老版本：</span><span class="token number">5</span>、package-cleanup <span class="token parameter variable">--cleandupes</span><span class="token comment">#以上完成后，在把yum重新更新</span>yum clean all  <span class="token comment">#清空yum</span>yum <span class="token parameter variable">-y</span> upgrade  <span class="token comment">#重新更新yum</span><span class="token comment">#解决！</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">netsh winsock reset<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="fish"><a href="#fish" class="headerlink" title="fish"></a>fish</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><h3 id="对于-CentOS-7，请以根用户-root-运行下面命令"><a href="#对于-CentOS-7，请以根用户-root-运行下面命令" class="headerlink" title="对于 CentOS 7，请以根用户 root 运行下面命令"></a>对于 <strong>CentOS 7</strong>，请以根用户 <strong>root</strong> 运行下面命令</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /etc/yum.repos.d/<span class="token function">wget</span> https://download.opensuse.org/repositories/shells:fish:release:3/CentOS_7/shells:fish:release:3.repoyum <span class="token function">install</span> fish<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="对于-CentOS-9-Stream，请以根用户-root-运行下面命令"><a href="#对于-CentOS-9-Stream，请以根用户-root-运行下面命令" class="headerlink" title="对于 CentOS-9 Stream，请以根用户 root 运行下面命令"></a>对于 <strong>CentOS-9 Stream</strong>，请以根用户 <strong>root</strong> 运行下面命令</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /etc/yum.repos.d/<span class="token function">wget</span> https://download.opensuse.org/repositories/shells:fish:release:3/CentOS-9_Stream/shells:fish:release:3.repoyum <span class="token function">install</span> fish<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="maven"><a href="#maven" class="headerlink" title="maven"></a>maven</h1><h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mvn archetype:generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 配置阿里云仓库 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>aliyun-repos<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://maven.aliyun.com/repository/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepositories</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepository</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>aliyun-repos<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://maven.aliyun.com/repository/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepository</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepositories</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>aliyunmaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>阿里云公共仓库<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://maven.aliyun.com/repository/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Go"><a href="#Go" class="headerlink" title="Go"></a>Go</h1><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">setx GOPATH c:<span class="token punctuation">\</span>Codes<span class="token punctuation">\</span>goCode<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h1><h2 id="报错-1"><a href="#报错-1" class="headerlink" title="报错"></a>报错</h2><h3 id="解决ssh或ftp下root用户认证失败问题"><a href="#解决ssh或ftp下root用户认证失败问题" class="headerlink" title="解决ssh或ftp下root用户认证失败问题"></a>解决ssh或ftp下root用户认证失败问题</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">passwd</span> root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> openssh-server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Flink"><a href="#Flink" class="headerlink" title="Flink"></a>Flink</h1><h2 id="测试程序"><a href="#测试程序" class="headerlink" title="测试程序"></a>测试程序</h2><h3 id="stand-alone模式"><a href="#stand-alone模式" class="headerlink" title="stand alone模式"></a>stand alone模式</h3><p><code>测试</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">flink run /opt/app/flink-1.14.5/examples/batch/WordCount.jar <span class="token parameter variable">--input</span> hdfs://hadoop201:8020/input/test.txt  <span class="token parameter variable">--output</span> hdfs://hadoop201/output/test1.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="yarn模式"><a href="#yarn模式" class="headerlink" title="yarn模式"></a>yarn模式</h3><h4 id="Session模式"><a href="#Session模式" class="headerlink" title="Session模式"></a><em><strong>Session模式</strong></em></h4><p><code>测试</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yarn-session.sh <span class="token parameter variable">-n</span> <span class="token number">2</span> <span class="token parameter variable">-tm</span> <span class="token number">800</span> <span class="token parameter variable">-s</span> <span class="token number">1</span> <span class="token parameter variable">-d</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">flink run /opt/app/flink-1.14.5/examples/batch/WordCount.jar <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>说明: 申请2个CPU、1600M内存</p></blockquote><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>-n</td><td>表示申请2个容器，这里指的就是多少个taskmanager</td></tr><tr><td>-tm</td><td>表示每个TaskManager的内存大小</td></tr><tr><td>-s</td><td>表示每个TaskManager的slots数量</td></tr><tr><td>-d</td><td>表示以后台程序方式运行</td></tr></tbody></table><p><code>测试</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">flink run <span class="token parameter variable">-m</span> yarn-cluster <span class="token parameter variable">-yjm</span> <span class="token number">1024</span> <span class="token parameter variable">-ytm</span> <span class="token number">1024</span> /opt/app/flink-1.14.5/examples/batch/WordCount.jar <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>-m  jobmanager的地址<br>-yjm 1024 指定jobmanager的内存信息<br>-ytm 1024 指定taskmanager的内存信息</p></blockquote><h1 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h1><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> root@22.22.22.22 <span class="token parameter variable">-p</span> <span class="token number">54321</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">function</span> ssh-copy-id<span class="token punctuation">(</span><span class="token punctuation">[</span>string<span class="token punctuation">]</span><span class="token variable">$userAtMachine</span>, <span class="token variable">$args</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token variable">$publicKey</span> <span class="token operator">=</span> <span class="token string">"<span class="token variable">$ENV</span>:USERPROFILE"</span> + <span class="token string">"/.ssh/id_rsa.pub"</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>Test-Path <span class="token string">"<span class="token variable">$publicKey</span>"</span><span class="token punctuation">))</span><span class="token punctuation">&#123;</span>        Write-Error <span class="token string">"ERROR: failed to open ID file '<span class="token variable">$publicKey</span>': No such file"</span>                <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token operator">&amp;</span> <span class="token function">cat</span> <span class="token string">"<span class="token variable">$publicKey</span>"</span> <span class="token operator">|</span> <span class="token function">ssh</span> <span class="token variable">$args</span> <span class="token variable">$userAtMachine</span> <span class="token string">"umask 077; test -d .ssh || mkdir .ssh ; cat >> .ssh/authorized_keys || exit 1"</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-copy-id root@192.168.150.129<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="报错-2"><a href="#报错-2" class="headerlink" title="报错"></a>报错</h2><h3 id="Ubuntu20-04-之SSH-Connection-refused-问题的解决"><a href="#Ubuntu20-04-之SSH-Connection-refused-问题的解决" class="headerlink" title="Ubuntu20.04 之SSH Connection refused 问题的解决"></a>Ubuntu20.04 之SSH Connection refused 问题的解决</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> openssh-server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> pull <span class="token parameter variable">--all</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/LookSeeWatch/GardenerOS.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token function">add</span> LookSeeWatch-GardenerOS https://github.com/LookSeeWatch/GardenerOS.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>(输入token)</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push LookSeeWatch-GardenerOS<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">"实验1"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> shiYan1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch <span class="token parameter variable">-D</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">docker</span> run <span class="token punctuation">\</span><span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> c7-d-1 <span class="token punctuation">\</span><span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token punctuation">\</span><span class="token parameter variable">-p</span> <span class="token number">10022</span>:22 <span class="token parameter variable">-p</span> <span class="token number">10080</span>:80 <span class="token punctuation">\</span><span class="token parameter variable">-h</span> c7-docker-1 <span class="token punctuation">\</span><span class="token parameter variable">-v</span> /home/container/c7-d-1:/home/c7-d-1-remote <span class="token punctuation">\</span>centos:7 /usr/sbin/init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>参数：</th><th>说明：</th></tr></thead><tbody><tr><td>-d</td><td>后台运行方式</td></tr><tr><td>–name</td><td>创建的容器名，方便启动、关闭、重启、删除容器等操作</td></tr><tr><td>–privileged&#x3D;true</td><td>加上之后容器内部权限更多，不会出现权限问题</td></tr><tr><td>-p 10022:22 -p 10080:80</td><td>指定端口映射，可同时放通多个端口</td></tr><tr><td>-h c7-docker-1</td><td>指定容器主机名</td></tr><tr><td>-v &#x2F;home&#x2F;fd&#x2F;container&#x2F;c7-d-1:&#x2F;home&#x2F;c7-d1-ys</td><td>宿主机目录映射到容器内部目录</td></tr><tr><td>centos:7</td><td>本地centos镜像版本</td></tr><tr><td>&#x2F;usr&#x2F;sbin&#x2F;init</td><td>启动方式</td></tr></tbody></table><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> c7-d-1 /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> <span class="token parameter variable">-p</span> <span class="token number">10022</span>  root@localhost<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl status <span class="token function">docker</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> system prune <span class="token parameter variable">-a</span> <span class="token parameter variable">--volumes</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> start afad86ff0343<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> afad86ff0343  /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token function">ps</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token function">cp</span> /root/GardenerOS/bootloader afad86ff0343:/root/mnt/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token function">rm</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">-q</span><span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> images<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> rmi <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> images <span class="token parameter variable">-q</span><span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> rmi <span class="token parameter variable">-f</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> images <span class="token parameter variable">-q</span><span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="MarkDown"><a href="#MarkDown" class="headerlink" title="MarkDown"></a>MarkDown</h1><h2 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h2><ul><li>[!] 注意</li><li><input checked disabled type="checkbox"> 完成</li><li>[?] 疑问</li><li><input disabled type="checkbox"> ⏫ 📅 2023-03-20 🛫 2023-03-20 ⏳ 2023-03-20</li></ul><h1 id="MatPlotLib"><a href="#MatPlotLib" class="headerlink" title="MatPlotLib"></a>MatPlotLib</h1><h2 id="报错-3"><a href="#报错-3" class="headerlink" title="报错"></a>报错</h2><h3 id="绘图显示缺少中文字体－RuntimeWarning-Glyph-8722-missing-from-current-font"><a href="#绘图显示缺少中文字体－RuntimeWarning-Glyph-8722-missing-from-current-font" class="headerlink" title="绘图显示缺少中文字体－RuntimeWarning: Glyph 8722 missing from current font"></a>绘图显示缺少中文字体－RuntimeWarning: Glyph 8722 missing from current font</h3><pre class="line-numbers language-text" data-language="text"><code class="language-text">D:\Projects\Python\torchDemo\torch-venv\Lib\site-packages\matplotlib\mpl-data\fonts\ttf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib    <span class="token keyword">print</span><span class="token punctuation">(</span>matplotlib<span class="token punctuation">.</span>matplotlib_fname<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">import</span> matplotlib<span class="token keyword">print</span><span class="token punctuation">(</span>matplotlib<span class="token punctuation">.</span>get_cachedir<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> matplotlibmatplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.family'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'SimHei'</span>matplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.size'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">10</span>matplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'axes.unicode_minus'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">False</span><span class="token triple-quoted-string string">''' 使用下面语句也可以plt.rcParams['font.family'] = 'SimHei'plt.rcParams['font.size'] = 10plt.rcParams['axes.unicode_minus']=False'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="maven-1"><a href="#maven-1" class="headerlink" title="maven"></a>maven</h1><pre class="line-numbers language-text" data-language="text"><code class="language-text">D:\java\maven\apache-maven-3.8.4-bin\apache-maven-3.8.4\conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="openVino"><a href="#openVino" class="headerlink" title="openVino"></a>openVino</h1><h2 id="Download-a-Model-and-Convert-it-into-OpenVINO™-IR-Format"><a href="#Download-a-Model-and-Convert-it-into-OpenVINO™-IR-Format" class="headerlink" title="Download a Model and Convert it into OpenVINO™ IR Format"></a>Download a Model and Convert it into OpenVINO™ IR Format</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">omz_downloader <span class="token parameter variable">--name</span> <span class="token operator">&lt;</span>model_name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">omz_converter <span class="token parameter variable">--name</span> <span class="token operator">&lt;</span>model_name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>测试</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mo <span class="token parameter variable">-h</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h1><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">service</span> redis-server start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">redis-cli <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token function">ping</span>PONG<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h1><h2 id="源"><a href="#源" class="headerlink" title="源"></a>源</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda config <span class="token parameter variable">--set</span> show_channel_urls <span class="token function">yes</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-json" data-language="json"><code class="language-json">ssl_verify<span class="token operator">:</span> <span class="token boolean">true</span>channels<span class="token operator">:</span>  - defaultsshow_channel_urls<span class="token operator">:</span> <span class="token boolean">true</span>default_channels<span class="token operator">:</span>  - http<span class="token operator">:</span><span class="token comment">//mirrors.aliyun.com/anaconda/pkgs/main</span>  - http<span class="token operator">:</span><span class="token comment">//mirrors.aliyun.com/anaconda/pkgs/r</span>  - http<span class="token operator">:</span><span class="token comment">//mirrors.aliyun.com/anaconda/pkgs/msys2</span>custom_channels<span class="token operator">:</span>  conda-forge<span class="token operator">:</span> http<span class="token operator">:</span><span class="token comment">//mirrors.aliyun.com/anaconda/cloud</span>  msys2<span class="token operator">:</span> http<span class="token operator">:</span><span class="token comment">//mirrors.aliyun.com/anaconda/cloud</span>  bioconda<span class="token operator">:</span> http<span class="token operator">:</span><span class="token comment">//mirrors.aliyun.com/anaconda/cloud</span>  menpo<span class="token operator">:</span> http<span class="token operator">:</span><span class="token comment">//mirrors.aliyun.com/anaconda/cloud</span>  pytorch<span class="token operator">:</span> http<span class="token operator">:</span><span class="token comment">//mirrors.aliyun.com/anaconda/cloud</span>  simpleitk<span class="token operator">:</span> http<span class="token operator">:</span><span class="token comment">//mirrors.aliyun.com/anaconda/cloud</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda clean <span class="token parameter variable">-i</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h1><h2 id="启动-1"><a href="#启动-1" class="headerlink" title="启动"></a>启动</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mongod <span class="token parameter variable">-dbpath</span> D:<span class="token punctuation">\</span>MongoDB<span class="token punctuation">\</span>data<span class="token punctuation">\</span>db<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mongosh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mongodb://127.0.0.1:27017/?directConnection<span class="token operator">=</span>true<span class="token operator">&amp;</span><span class="token assign-left variable">serverSelectionTimeoutMS</span><span class="token operator">=</span><span class="token number">2000</span><span class="token operator">&amp;</span><span class="token assign-left variable">appName</span><span class="token operator">=</span>mongosh+1.8.2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="端口监听"><a href="#端口监听" class="headerlink" title="端口监听"></a>端口监听</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">netstat</span> <span class="token parameter variable">-ntlp</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl status firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl disable firewalld.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="MapReduce"><a href="#MapReduce" class="headerlink" title="MapReduce"></a>MapReduce</h1><p><code>测试</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hadoop jar /opt/app/hadoop-3.2.0/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar  wordcount /demo/wordCount.txt /demo/output<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="报错-4"><a href="#报错-4" class="headerlink" title="报错"></a>报错</h2><h3 id="x2F-bin-x2F-bash-x2F-bin-x2F-java-No-such-file-or-directory"><a href="#x2F-bin-x2F-bash-x2F-bin-x2F-java-No-such-file-or-directory" class="headerlink" title="&#x2F;bin&#x2F;bash: &#x2F;bin&#x2F;java: No such file or directory"></a>&#x2F;bin&#x2F;bash: &#x2F;bin&#x2F;java: No such file or directory</h3><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ln</span> <span class="token parameter variable">-s</span> /opt/app/jdk1.8.0_361/bin/java  /bin/java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="hbase"><a href="#hbase" class="headerlink" title="hbase"></a>hbase</h1><h2 id="phoenix"><a href="#phoenix" class="headerlink" title="phoenix"></a>phoenix</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">python <span class="token operator">/</span>opt<span class="token operator">/</span>app<span class="token operator">/</span>phoenix<span class="token operator">-</span>hbase<span class="token operator">-</span><span class="token number">2.5</span><span class="token operator">-</span><span class="token number">5.1</span><span class="token number">.3</span><span class="token operator">-</span><span class="token builtin">bin</span><span class="token operator">/</span><span class="token builtin">bin</span><span class="token operator">/</span>sqlline<span class="token punctuation">.</span>py hadoop201<span class="token punctuation">,</span>hadoop202<span class="token punctuation">,</span>hadoop203<span class="token punctuation">:</span><span class="token number">2181</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="报错-5"><a href="#报错-5" class="headerlink" title="报错"></a>报错</h2><h3 id="ERROR-KeeperErrorCode-x3D-NoNode-for-x2F-hbase-x2F-master"><a href="#ERROR-KeeperErrorCode-x3D-NoNode-for-x2F-hbase-x2F-master" class="headerlink" title="ERROR: KeeperErrorCode &#x3D; NoNode for &#x2F;hbase&#x2F;master"></a>ERROR: KeeperErrorCode &#x3D; NoNode for &#x2F;hbase&#x2F;master</h3><h1 id="解决办法-1"><a href="#解决办法-1" class="headerlink" title="解决办法"></a>解决办法</h1><p><a href="https://blog.csdn.net/qq_50869885/article/details/127576186?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-127576186-blog-99863987.235%5Ev32%5Epc_relevant_default_base3&spm=1001.2101.3001.4242.1&utm_relevant_index=3">(25条消息) ERROR: KeeperErrorCode &#x3D; NoNode for &#x2F;hbase&#x2F;master与Path does not exist on HDFS or WebHDFS is disabled-CSDN博客</a></p><h1 id="hive"><a href="#hive" class="headerlink" title="hive"></a>hive</h1><h2 id="JDBC连接"><a href="#JDBC连接" class="headerlink" title="JDBC连接"></a>JDBC连接</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hive <span class="token parameter variable">--service</span> hiveserver2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hive <span class="token parameter variable">--service</span> metastore<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">beeline <span class="token parameter variable">-u</span> jdbc:hive2://hadoop201:10000 <span class="token parameter variable">-n</span> root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="报错-6"><a href="#报错-6" class="headerlink" title="报错"></a>报错</h2><h3 id="Permission-denied-user-x3D-anonymous-access-x3D-EXECUTE-inode-x3D-”-x2F-tmp-x2F-hadoop-yarn”-root-supergroup-drwxrwx—"><a href="#Permission-denied-user-x3D-anonymous-access-x3D-EXECUTE-inode-x3D-”-x2F-tmp-x2F-hadoop-yarn”-root-supergroup-drwxrwx—" class="headerlink" title="Permission denied: user&#x3D;anonymous, access&#x3D;EXECUTE, inode&#x3D;”&#x2F;tmp&#x2F;hadoop-yarn”:root:supergroup:drwxrwx—"></a>Permission denied: user&#x3D;anonymous, access&#x3D;EXECUTE, inode&#x3D;”&#x2F;tmp&#x2F;hadoop-yarn”:root:supergroup:drwxrwx—</h3><h1 id="解决办法-2"><a href="#解决办法-2" class="headerlink" title="解决办法"></a>解决办法</h1><p><code>hdfs-site.xml</code></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.permissions.enabled<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><h2 id="报错-7"><a href="#报错-7" class="headerlink" title="报错"></a>报错</h2><h2 id="启动-2"><a href="#启动-2" class="headerlink" title="启动"></a>启动</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl <span class="token builtin class-name">enable</span> mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mysql <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="spark"><a href="#spark" class="headerlink" title="spark"></a>spark</h1><p><img src="/./saprk"></p><h2 id="测试程序-1"><a href="#测试程序-1" class="headerlink" title="测试程序"></a>测试程序</h2><h3 id="yarn模式-1"><a href="#yarn模式-1" class="headerlink" title="yarn模式"></a>yarn模式</h3><p><code>测试</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">spark-submit <span class="token parameter variable">--class</span> org.apache.spark.examples.SparkPi <span class="token parameter variable">--master</span> <span class="token function">yarn</span> --deploy-mode cluster /opt/app/spark-3.2.3-bin-hadoop3.2/examples/jars/spark-examples_2.12-3.2.3.jar  <span class="token number">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="spark-shell"><a href="#spark-shell" class="headerlink" title="spark shell"></a>spark shell</h3><p><code>测试</code></p><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala">sc<span class="token punctuation">.</span>parallelize<span class="token punctuation">(</span>List<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">(</span>e<span class="token keyword">=></span>e<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reduce<span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token keyword">=></span>a<span class="token operator">+</span>b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="maven依赖"><a href="#maven依赖" class="headerlink" title="maven依赖"></a>maven依赖</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>spark.demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark.demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>inceptionYear</span><span class="token punctuation">></span></span>2008<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>inceptionYear</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scala.version</span><span class="token punctuation">></span></span>2.12.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scala.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--引入Scala依赖库--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.scala-lang<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>scala-library<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.12.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- Spark各组件库================================================================== --></span>        <span class="token comment">&lt;!--Spark核心库--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark-core_2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.2.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--Spark SQL所需库--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark-sql_2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.2.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--Spark Streaming所需库--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark-streaming_2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.2.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.kafka<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>kafka-clients<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.2.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--Spark Streaming针对Kafka的依赖库--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark-streaming-kafka-0-10_2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.2.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.spark/spark-sql-kafka-0-10 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark-sql-kafka-0-10_2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.2.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--Graphx的依赖库--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark-graphx_2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.2.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- Spark读写HBase所需库================================================================== --></span>        <span class="token comment">&lt;!-- Hadoop通用API --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.hadoop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hadoop-common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- Hadoop客户端API --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.hadoop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hadoop-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- HBase客户端API --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.hbase<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hbase-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.4.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- HBase针对MapReduce的API --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.hbase<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hbase-mapreduce<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.4.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.hbase<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hbase-server<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.4.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.specs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>specs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.scala-tools/maven-scala-plugin --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.scala-tools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-scala-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-eclipse-plugin --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-eclipse-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.5.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h1><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip  <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> jupyter<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="报错-8"><a href="#报错-8" class="headerlink" title="报错"></a>报错</h2><h3 id="ERROR-Can-not-perform-a-‘–user‘-install-User-site-packages-are-not-visible-in-this-virtualenv"><a href="#ERROR-Can-not-perform-a-‘–user‘-install-User-site-packages-are-not-visible-in-this-virtualenv" class="headerlink" title="ERROR: Can not perform a ‘–user‘ install. User site-packages are not visible in this virtualenv"></a>ERROR: Can not perform a ‘–user‘ install. User site-packages are not visible in this virtualenv</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-m</span> pip <span class="token function">install</span> tensorflow<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="ModuleNotFoundError-No-module-named-‘pip’"><a href="#ModuleNotFoundError-No-module-named-‘pip’" class="headerlink" title="ModuleNotFoundError: No module named ‘pip’"></a>ModuleNotFoundError: No module named ‘pip’</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-m</span> ensurepip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="pip-conf"><a href="#pip-conf" class="headerlink" title="pip.conf"></a>pip.conf</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token parameter variable">-v</span> config list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">global</span><span class="token punctuation">]</span></span><span class="token key attr-name">index-url</span> <span class="token punctuation">=</span> <span class="token value attr-value">https://mirrors.aliyun.com/pypi/simple/</span><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">install</span><span class="token punctuation">]</span></span><span class="token key attr-name">trusted-host</span><span class="token punctuation">=</span><span class="token value attr-value">mirrors.aliyun.com</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip3 config <span class="token builtin class-name">set</span> global.extra-index-url http://mirrors.aliyun.com/pypi/simple<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="cache"><a href="#cache" class="headerlink" title="cache"></a>cache</h2><ul><li>清除命令</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip cache purge<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>缓存目录</li></ul><pre class="line-numbers language-text" data-language="text"><code class="language-text">C:\Users\30337\AppData\Local\pip\cache<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="源-1"><a href="#源-1" class="headerlink" title="源"></a>源</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token parameter variable">-i</span> https://pypi.mirrors.ustc.edu.cn/simple<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Sublime"><a href="#Sublime" class="headerlink" title="Sublime"></a>Sublime</h1><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="CoolFormat"><a href="#CoolFormat" class="headerlink" title="CoolFormat"></a>CoolFormat</h3><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span>    <span class="token property">"caption"</span><span class="token operator">:</span> <span class="token string">"CoolFormat"</span><span class="token punctuation">,</span>    <span class="token property">"children"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"caption"</span><span class="token operator">:</span> <span class="token string">"CoolFormat: Quick Format"</span><span class="token punctuation">,</span>        <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"coolformat"</span><span class="token punctuation">,</span>        <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"action"</span><span class="token operator">:</span> <span class="token string">"quickFormat"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"caption"</span><span class="token operator">:</span> <span class="token string">"CoolFormat: Selected Format"</span><span class="token punctuation">,</span>        <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"coolformat"</span><span class="token punctuation">,</span>        <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"action"</span><span class="token operator">:</span> <span class="token string">"selectedFormat"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"caption"</span><span class="token operator">:</span> <span class="token string">"CoolFormat: Formatter Settings"</span><span class="token punctuation">,</span>        <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"coolformat"</span><span class="token punctuation">,</span>        <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"action"</span><span class="token operator">:</span> <span class="token string">"formatterSettings"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span> <span class="token property">"font_face"</span><span class="token operator">:</span> <span class="token string">"Ubuntu Mono"</span><span class="token punctuation">,</span> <span class="token property">"font_size"</span><span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token property">"font_options"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"no_italic"</span><span class="token punctuation">,</span><span class="token string">"gdi"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"word_wrap"</span><span class="token operator">:</span> <span class="token string">"true"</span><span class="token punctuation">,</span>    <span class="token property">"theme"</span><span class="token operator">:</span> <span class="token string">"Default.sublime-theme"</span><span class="token punctuation">,</span>    <span class="token property">"color_scheme"</span><span class="token operator">:</span> <span class="token string">"Celeste.sublime-color-scheme"</span><span class="token punctuation">,</span>    <span class="token property">"save_on_focus_lost"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token property">"ignored_packages"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"Vintage"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"auto_complete"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="中文字体异常"><a href="#中文字体异常" class="headerlink" title="中文字体异常"></a>中文字体异常</h2><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"font_face"</span><span class="token operator">:</span> <span class="token string">"Source Code Pro"</span><span class="token punctuation">,</span><span class="token property">"font_size"</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span><span class="token property">"font_options"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"gdi"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="torch"><a href="#torch" class="headerlink" title="torch"></a>torch</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip3 <span class="token function">install</span> torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu117<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="环境测试"><a href="#环境测试" class="headerlink" title="环境测试"></a>环境测试</h2><p><code>测试</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> osos<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">"CUDA_VISIBLE_DEVICES"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"0"</span><span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>device_count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>backends<span class="token punctuation">.</span>cudnn<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>cuda_version<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>backends<span class="token punctuation">.</span>cudnn<span class="token punctuation">.</span>version<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="visdom"><a href="#visdom" class="headerlink" title="visdom"></a>visdom</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-m</span> visdom.server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="启动Dive-into-DL-PyTorch"><a href="#启动Dive-into-DL-PyTorch" class="headerlink" title="启动Dive-into-DL-PyTorch"></a>启动<code>Dive-into-DL-PyTorch</code></h2><p>首先进入目录，<br>然后，</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docsify serve docs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="报错-9"><a href="#报错-9" class="headerlink" title="报错"></a>报错</h2><h3 id="pytorch安装之后不能使用cuda"><a href="#pytorch安装之后不能使用cuda" class="headerlink" title="pytorch安装之后不能使用cuda"></a>pytorch安装之后不能使用cuda</h3><p>安装torch版本不对</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip3 <span class="token function">install</span> <span class="token assign-left variable">torch</span><span class="token operator">==</span><span class="token number">1.11</span>.0+cu113 <span class="token assign-left variable">torchvision</span><span class="token operator">==</span><span class="token number">0.12</span>.0+cu113 <span class="token assign-left variable">torchaudio</span><span class="token operator">==</span><span class="token number">0.11</span>.0+cu113 <span class="token parameter variable">-f</span> https://download.pytorch.org/whl/cu113/torch_stable.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="import-torch报错-NameError-name-‘-C-’-is-not-defined"><a href="#import-torch报错-NameError-name-‘-C-’-is-not-defined" class="headerlink" title="import torch报错 NameError: name ‘ _ C ’ is not defined"></a>import torch报错 NameError: name ‘ _ C ’ is not defined</h3><p>![[Pasted image 20230314143711.png]]<br><a href="https://blog.csdn.net/Paramagnetism/article/details/121253575">(13条消息) import pytorch报错 NameError: name ‘_C‘ is not defined_name ‘_c’ is not defined_Steven山椒鱼的博客-CSDN博客</a></p><h1 id="paddle"><a href="#paddle" class="headerlink" title="paddle"></a>paddle</h1><h2 id="GPU加速"><a href="#GPU加速" class="headerlink" title="GPU加速"></a>GPU加速</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> paddle<span class="token keyword">print</span><span class="token punctuation">(</span>paddle<span class="token punctuation">.</span>device<span class="token punctuation">.</span>get_device<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>paddle<span class="token punctuation">.</span>device<span class="token punctuation">.</span>set_device<span class="token punctuation">(</span><span class="token string">'gpu:0'</span><span class="token punctuation">)</span> <span class="token comment"># 把get—device的结果直接复制进去</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="pip-1"><a href="#pip-1" class="headerlink" title="pip"></a>pip</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-m</span> pip <span class="token function">install</span> paddlepaddle-gpu<span class="token operator">==</span><span class="token number">2.4</span>.2.post117 <span class="token parameter variable">-f</span> https://www.paddlepaddle.org.cn/whl/windows/mkl/avx/stable.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="环境测试-1"><a href="#环境测试-1" class="headerlink" title="环境测试"></a>环境测试</h3><p><code>测试</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> paddlepaddle<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>run_check<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="报错-10"><a href="#报错-10" class="headerlink" title="报错"></a>报错</h2><h3 id="AssertionError-In-PaddlePaddle-2-x-we-turn-on-dynamic-graph-mode-by-default-and-‘data-‘-is-only"><a href="#AssertionError-In-PaddlePaddle-2-x-we-turn-on-dynamic-graph-mode-by-default-and-‘data-‘-is-only" class="headerlink" title="AssertionError: In PaddlePaddle 2.x, we turn on dynamic graph mode by default, and ‘data()‘ is only"></a>AssertionError: In PaddlePaddle 2.x, we turn on dynamic graph mode by default, and ‘data()‘ is only</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> paddlepaddle<span class="token punctuation">.</span>enable_static<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如下图<br>![[Pasted image 20230315195446.png]]</p><h1 id="各种DLL文件下载方法"><a href="#各种DLL文件下载方法" class="headerlink" title="各种DLL文件下载方法"></a>各种DLL文件下载方法</h1><h2 id="直接在网站https-www-dll-files-com-search-下载"><a href="#直接在网站https-www-dll-files-com-search-下载" class="headerlink" title="直接在网站https://www.dll-files.com/search/下载"></a>直接在网站<a href="https://www.dll-files.com/search/">https://www.dll-files.com/search/</a>下载</h2><p>各种DLL文件下载官网<a href="https://www.dll-files.com/search/">https://www.dll-files.com/search/</a></p><h1 id="CUDA"><a href="#CUDA" class="headerlink" title="CUDA"></a>CUDA</h1><h1 id="镜像-1"><a href="#镜像-1" class="headerlink" title="镜像"></a>镜像</h1><p>国内镜像<br><a href="https://developer.nvidia.cn/downloads">https://developer.nvidia.cn/downloads</a></p><h2 id="查看CUDA版本"><a href="#查看CUDA版本" class="headerlink" title="查看CUDA版本"></a>查看CUDA版本</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nvidia-smi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nvcc <span class="token parameter variable">-V</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="查看基本信息"><a href="#查看基本信息" class="headerlink" title="查看基本信息"></a>查看基本信息</h2><pre class="line-numbers language-none"><code class="language-none">C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.7\extras\demo_suite&gt;deviceQuery.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="测试安装成功"><a href="#测试安装成功" class="headerlink" title="测试安装成功"></a>测试安装成功</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.7\extras\demo_suite<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>![[Pasted image 20230314140743.png]]</p><h2 id="‘nvcc’-不是内部或外部命令，也不是可运行的程序或批处理文件"><a href="#‘nvcc’-不是内部或外部命令，也不是可运行的程序或批处理文件" class="headerlink" title="‘nvcc’ 不是内部或外部命令，也不是可运行的程序或批处理文件"></a>‘nvcc’ 不是内部或外部命令，也不是可运行的程序或批处理文件</h2><p>![[Pasted image 20230314151433.png]]</p><p>![[Pasted image 20230314151607.png]]</p><h2 id="Clion配置CUDA"><a href="#Clion配置CUDA" class="headerlink" title="Clion配置CUDA"></a>Clion配置CUDA</h2><p>![[Pasted image 20230314150751.png]]</p><p>![[Pasted image 20230314150716.png]]</p><p><a href="https://blog.csdn.net/zmh657628320/article/details/126443355">(13条消息) CLION配置CUDA环境_clion cuda_衍生动物的博客-CSDN博客</a></p><h1 id="jupyter-notebook"><a href="#jupyter-notebook" class="headerlink" title="jupyter notebook"></a>jupyter notebook</h1><h2 id="报错-11"><a href="#报错-11" class="headerlink" title="报错"></a>报错</h2><h3 id="启动闪退"><a href="#启动闪退" class="headerlink" title="启动闪退"></a>启动闪退</h3><blockquote><p>ImportError: cannot import name ‘ensure_async’ from ‘jupyter_core.utils’ (D:\Anaconda\lib\site-packages\jupyter_core\utils_<em>init</em>_.py)</p></blockquote><p>跟换版本成功启动<br>如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> <span class="token assign-left variable">jupyter_core</span><span class="token operator">==</span><span class="token number">5.1</span>.2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="pycharm连接报错"><a href="#pycharm连接报错" class="headerlink" title="pycharm连接报错"></a>pycharm连接报错</h3><p>”ImportError: DLL load failed: 找不到指定的模块”</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> pyzmq --force-reinstall<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://blog.csdn.net/Studywithme/article/details/120561188?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-120561188-blog-123649644.pc_relevant_multi_platform_whitelistv4&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-120561188-blog-123649644.pc_relevant_multi_platform_whitelistv4&utm_relevant_index=1">(13条消息) 启动jupyter notebook时提示“ImportError: DLL load failed: 找不到指定的模块”_StudywithDyn的博客-CSDN博客</a></p><p>然后<br>报错显示 No module named ‘pysqlite2’</p><p><a href="https://www.sqlite.org/download.html">SQLite Download Page</a></p><p>![[Pasted image 20230314143057.png]]</p><h2 id="更换默认路径"><a href="#更换默认路径" class="headerlink" title="更换默认路径"></a>更换默认路径</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">jupyter notebook --generate-config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>打开配置文件并修改为</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">c<span class="token punctuation">.</span>NotebookApp<span class="token punctuation">.</span>notebook_dir <span class="token operator">=</span> <span class="token string">'D:\\myJupyterFile'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后，<br>![[Pasted image 20230314134232.png]]</p><h1 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h1><h2 id="有错误说是npm版本问题，npm7在编译的时候会更加严格"><a href="#有错误说是npm版本问题，npm7在编译的时候会更加严格" class="headerlink" title="有错误说是npm版本问题，npm7在编译的时候会更加严格"></a>有错误说是npm版本问题，npm7在编译的时候会更加严格</h2><p>我换成npm6和npm8都不行。并尝试了多个版本的npm替代包——cnpm、pnpm。</p><p>最终的解决方案是:<br>1.npm源换成腾讯源（taobao的地址都install不了 ，试试可以更换其他的registry源地址。)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry http://mirrors.cloud.tencent.com/npm/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.然后这个编译命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --legacy-peer-deps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.启动</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> run serve <span class="token parameter variable">--fix</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="WSL"><a href="#WSL" class="headerlink" title="WSL"></a>WSL</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">wsl <span class="token parameter variable">--list</span> <span class="token parameter variable">--verbose</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://blog.csdn.net/xmh19936688/article/details/90212960">(8条消息) Windows10访问Ubuntu子系统（WSL）的桌面环境_-_-void的博客-CSDN博客</a></p><h2 id="报错-12"><a href="#报错-12" class="headerlink" title="报错"></a>报错</h2><h3 id="x2F-usr-x2F-lib-x2F-wsl-x2F-lib-x2F-libcuda-so-1-is-not-a-symbolic-link"><a href="#x2F-usr-x2F-lib-x2F-wsl-x2F-lib-x2F-libcuda-so-1-is-not-a-symbolic-link" class="headerlink" title="&#x2F;usr&#x2F;lib&#x2F;wsl&#x2F;lib&#x2F;libcuda.so.1 is not a symbolic link"></a>&#x2F;usr&#x2F;lib&#x2F;wsl&#x2F;lib&#x2F;libcuda.so.1 is not a symbolic link</h3><p>其实原因就是libcuda.so.1的文件软链接出了问题。因此，正确且更简单的办法是：  </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/lib/wsl/lib/ <span class="token comment"># 进入报错的这个文件夹；  </span><span class="token function">sudo</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> libcuda.so.1 libcuda.so <span class="token comment"># 删除这2个软链接的文件；  </span><span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> libcuda.so.1.1 libcuda.so.1  <span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> libcuda.so.1.1 libcuda.so <span class="token comment"># 重新建立软链接  </span><span class="token function">sudo</span> ldconfig <span class="token comment">#验证下结果</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="出现错误-0x80070003-或错误-0x80370102"><a href="#出现错误-0x80070003-或错误-0x80370102" class="headerlink" title="出现错误 0x80070003 或错误 0x80370102"></a>出现错误 <code>0x80070003</code> 或错误 <code>0x80370102</code></h3><p>可能原因：<br>1.计算机BIOS未启用虚拟化；<br>2.VMware与WSL冲突。</p><p>解决方法：<br>1.BIOS启用虚拟化，具体流程可自行百度；<br>2.这是我遇到的问题，没有找到共存的办法，一次只能择一使用。<br>若要启用WSL，使用：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bcdedit /set hypervisorlaunchtype auto<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>若要启用VMware，使用：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bcdedit /set hypervisorlaunchtype off<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="启动-3"><a href="#启动-3" class="headerlink" title="启动"></a>启动</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">service</span> xrdp restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> google-chrome --no-sandbox<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">fish_config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="源-2"><a href="#源-2" class="headerlink" title="源"></a>源</h2><p>下载对应版本最新的源列表：<br><a href="https://mirrors.ustc.edu.cn/repogen/">LUG’s repo file generator (ustc.edu.cn)</a></p>]]></content>
      
      
      <categories>
          
          <category> note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
